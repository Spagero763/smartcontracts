{
	"id": "570ba91113e270da73c0ebae6ced279e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"MiniTokenFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract TokenFactory {\r\n    address[] public deployedTokens;\r\n\r\n    event TokenCreated(address tokenAddress, string name, string symbol, uint256 supply);\r\n\r\n    function createToken(string memory name, string memory symbol, uint256 supply) external {\r\n        ERC20Token newToken = new ERC20Token(name, symbol, supply, msg.sender);\r\n        deployedTokens.push(address(newToken));\r\n        emit TokenCreated(address(newToken), name, symbol, supply);\r\n    }\r\n\r\n    function getDeployedTokens() external view returns (address[] memory) {\r\n        return deployedTokens;\r\n    }\r\n}\r\n\r\ncontract ERC20Token is ERC20 {\r\n    constructor(string memory name, string memory symbol, uint256 supply, address owner)\r\n        ERC20(name, symbol)\r\n    {\r\n        _mint(owner, supply * (10 ** decimals()));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MiniTokenFactory.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"MiniTokenFactory.sol\":738:917  constructor(string memory name, string memory symbol, uint256 supply, address owner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MiniTokenFactory.sol\":838:842  name */\n  dup4\n    /* \"MiniTokenFactory.sol\":844:850  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_7\n    /* \"MiniTokenFactory.sol\":838:842  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MiniTokenFactory.sol\":868:909  _mint(owner, supply * (10 ** decimals())) */\n  tag_11\n    /* \"MiniTokenFactory.sol\":874:879  owner */\n  dup2\n    /* \"MiniTokenFactory.sol\":897:907  decimals() */\n  tag_12\n    /* \"MiniTokenFactory.sol\":897:905  decimals */\n  shl(0x20, tag_13)\n    /* \"MiniTokenFactory.sol\":897:907  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"MiniTokenFactory.sol\":891:907  10 ** decimals() */\n  tag_14\n  swap1\n    /* \"MiniTokenFactory.sol\":891:893  10 */\n  0x0a\n    /* \"MiniTokenFactory.sol\":891:907  10 ** decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"MiniTokenFactory.sol\":881:908  supply * (10 ** decimals()) */\n  tag_16\n  swap1\n    /* \"MiniTokenFactory.sol\":881:887  supply */\n  dup6\n    /* \"MiniTokenFactory.sol\":881:908  supply * (10 ** decimals()) */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"MiniTokenFactory.sol\":868:873  _mint */\n  tag_18\n    /* \"MiniTokenFactory.sol\":868:909  _mint(owner, supply * (10 ** decimals())) */\n  jump\t// in\ntag_11:\n    /* \"MiniTokenFactory.sol\":738:917  constructor(string memory name, string memory symbol, uint256 supply, address owner)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n  jump(tag_48)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6057:6108   */\n  mstore\n    /* \"#utility.yul\":6030:6048   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6469:6501   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6451:6502   */\n  mstore\n    /* \"#utility.yul\":6518:6536   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6511:6545   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6561:6579   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6554:6588   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6424:6442   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_23\n    /* \"#utility.yul\":6249:6594   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":6745:6770   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6733:6735   */\n  0x20\n    /* \"#utility.yul\":6718:6736   */\n  add\n  swap1\n    /* \"#utility.yul\":6599:6776   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_39:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_40:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_51:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_53\n  tag_39\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_55\n  tag_39\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_56:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1660   */\ntag_3:\n    /* \"#utility.yul\":991:997   */\n  0x00\n    /* \"#utility.yul\":999:1005   */\n  0x00\n    /* \"#utility.yul\":1007:1013   */\n  0x00\n    /* \"#utility.yul\":1015:1021   */\n  0x00\n    /* \"#utility.yul\":1068:1071   */\n  0x80\n    /* \"#utility.yul\":1056:1065   */\n  dup6\n    /* \"#utility.yul\":1047:1054   */\n  dup8\n    /* \"#utility.yul\":1043:1066   */\n  sub\n    /* \"#utility.yul\":1039:1072   */\n  slt\n    /* \"#utility.yul\":1036:1089   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1082:1083   */\n  0x00\n    /* \"#utility.yul\":1075:1087   */\n  revert\n    /* \"#utility.yul\":1036:1089   */\ntag_58:\n    /* \"#utility.yul\":1112:1128   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1140:1170   */\n  dup2\n  gt\n    /* \"#utility.yul\":1137:1187   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1183:1184   */\n  0x00\n    /* \"#utility.yul\":1180:1181   */\n  0x00\n    /* \"#utility.yul\":1173:1185   */\n  revert\n    /* \"#utility.yul\":1137:1187   */\ntag_59:\n    /* \"#utility.yul\":1206:1267   */\n  tag_60\n    /* \"#utility.yul\":1259:1266   */\n  dup8\n    /* \"#utility.yul\":1250:1256   */\n  dup3\n    /* \"#utility.yul\":1239:1248   */\n  dup9\n    /* \"#utility.yul\":1235:1257   */\n  add\n    /* \"#utility.yul\":1206:1267   */\n  tag_40\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1313:1315   */\n  0x20\n    /* \"#utility.yul\":1298:1316   */\n  dup8\n  add\n    /* \"#utility.yul\":1292:1317   */\n  mload\n    /* \"#utility.yul\":1196:1267   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":1292:1317   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1329:1361   */\n  dup2\n  gt\n    /* \"#utility.yul\":1326:1378   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  0x00\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1326:1378   */\ntag_61:\n    /* \"#utility.yul\":1397:1460   */\n  tag_62\n    /* \"#utility.yul\":1452:1459   */\n  dup8\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup9\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1502   */\n  0x40\n    /* \"#utility.yul\":1485:1503   */\n  dup8\n  add\n    /* \"#utility.yul\":1479:1504   */\n  mload\n    /* \"#utility.yul\":1547:1549   */\n  0x60\n    /* \"#utility.yul\":1532:1550   */\n  dup9\n  add\n    /* \"#utility.yul\":1526:1551   */\n  mload\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":1479:1504   */\n  swap4\n  pop\n    /* \"#utility.yul\":1526:1551   */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1580:1611   */\n  dup2\n  and\n    /* \"#utility.yul\":1570:1612   */\n  dup2\n  eq\n    /* \"#utility.yul\":1560:1630   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1626:1627   */\n  0x00\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1616:1628   */\n  revert\n    /* \"#utility.yul\":1560:1630   */\ntag_63:\n    /* \"#utility.yul\":874:1660   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1665:2045   */\ntag_41:\n    /* \"#utility.yul\":1744:1745   */\n  0x01\n    /* \"#utility.yul\":1740:1752   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1787:1799   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1808:1869   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1862:1866   */\n  0x7f\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1850:1867   */\n  and\n    /* \"#utility.yul\":1840:1867   */\n  swap2\n  pop\n    /* \"#utility.yul\":1808:1869   */\ntag_65:\n    /* \"#utility.yul\":1915:1917   */\n  0x20\n    /* \"#utility.yul\":1907:1913   */\n  dup3\n    /* \"#utility.yul\":1904:1918   */\n  lt\n    /* \"#utility.yul\":1884:1902   */\n  dup2\n    /* \"#utility.yul\":1881:1919   */\n  sub\n    /* \"#utility.yul\":1878:2039   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1961:1971   */\n  0x4e487b71\n    /* \"#utility.yul\":1956:1959   */\n  0xe0\n    /* \"#utility.yul\":1952:1972   */\n  shl\n    /* \"#utility.yul\":1949:1950   */\n  0x00\n    /* \"#utility.yul\":1942:1973   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x22\n    /* \"#utility.yul\":1993:1994   */\n  0x04\n    /* \"#utility.yul\":1986:2001   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x24\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2014:2029   */\n  revert\n    /* \"#utility.yul\":1878:2039   */\ntag_66:\n  pop\n    /* \"#utility.yul\":1665:2045   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2176:2694   */\ntag_43:\n    /* \"#utility.yul\":2278:2280   */\n  0x1f\n    /* \"#utility.yul\":2273:2276   */\n  dup3\n    /* \"#utility.yul\":2270:2281   */\n  gt\n    /* \"#utility.yul\":2267:2688   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2314:2319   */\n  dup1\n    /* \"#utility.yul\":2311:2312   */\n  0x00\n    /* \"#utility.yul\":2304:2320   */\n  mstore\n    /* \"#utility.yul\":2358:2362   */\n  0x20\n    /* \"#utility.yul\":2355:2356   */\n  0x00\n    /* \"#utility.yul\":2345:2363   */\n  keccak256\n    /* \"#utility.yul\":2428:2430   */\n  0x1f\n    /* \"#utility.yul\":2416:2426   */\n  dup5\n    /* \"#utility.yul\":2412:2431   */\n  add\n    /* \"#utility.yul\":2409:2410   */\n  0x05\n    /* \"#utility.yul\":2405:2432   */\n  shr\n    /* \"#utility.yul\":2399:2403   */\n  dup2\n    /* \"#utility.yul\":2395:2433   */\n  add\n    /* \"#utility.yul\":2464:2468   */\n  0x20\n    /* \"#utility.yul\":2452:2462   */\n  dup6\n    /* \"#utility.yul\":2449:2469   */\n  lt\n    /* \"#utility.yul\":2446:2493   */\n  iszero\n  tag_70\n  jumpi\n  pop\n    /* \"#utility.yul\":2487:2491   */\n  dup1\n    /* \"#utility.yul\":2446:2493   */\ntag_70:\n    /* \"#utility.yul\":2542:2544   */\n  0x1f\n    /* \"#utility.yul\":2537:2540   */\n  dup5\n    /* \"#utility.yul\":2533:2545   */\n  add\n    /* \"#utility.yul\":2530:2531   */\n  0x05\n    /* \"#utility.yul\":2526:2546   */\n  shr\n    /* \"#utility.yul\":2520:2524   */\n  dup3\n    /* \"#utility.yul\":2516:2547   */\n  add\n    /* \"#utility.yul\":2506:2547   */\n  swap2\n  pop\n    /* \"#utility.yul\":2597:2678   */\ntag_71:\n    /* \"#utility.yul\":2615:2617   */\n  dup2\n    /* \"#utility.yul\":2608:2613   */\n  dup2\n    /* \"#utility.yul\":2605:2618   */\n  lt\n    /* \"#utility.yul\":2597:2678   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2674:2675   */\n  0x00\n    /* \"#utility.yul\":2660:2676   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2641:2642   */\n  0x01\n    /* \"#utility.yul\":2630:2643   */\n  add\n    /* \"#utility.yul\":2597:2678   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2601:2604   */\n  pop\n  pop\n    /* \"#utility.yul\":2267:2688   */\ntag_69:\n    /* \"#utility.yul\":2176:2694   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2870:4169   */\ntag_8:\n    /* \"#utility.yul\":2990:3000   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3012:3042   */\n  dup2\n  gt\n    /* \"#utility.yul\":3009:3065   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3045:3063   */\n  tag_77\n  tag_39\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3074:3171   */\n  tag_78\n    /* \"#utility.yul\":3164:3170   */\n  dup2\n    /* \"#utility.yul\":3124:3162   */\n  tag_79\n    /* \"#utility.yul\":3156:3160   */\n  dup5\n    /* \"#utility.yul\":3150:3161   */\n  sload\n    /* \"#utility.yul\":3124:3162   */\n  tag_41\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3118:3122   */\n  dup5\n    /* \"#utility.yul\":3074:3171   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3220:3224   */\n  0x20\n    /* \"#utility.yul\":3251:3253   */\n  0x1f\n    /* \"#utility.yul\":3240:3254   */\n  dup3\n  gt\n    /* \"#utility.yul\":3268:3269   */\n  0x01\n    /* \"#utility.yul\":3263:3912   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3956:3957   */\n  0x00\n    /* \"#utility.yul\":3973:3979   */\n  dup4\n    /* \"#utility.yul\":3970:4059   */\n  iszero\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":4025:4044   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4019:4045   */\n  mload\n    /* \"#utility.yul\":3970:4059   */\ntag_82:\n  not(0x00)\n    /* \"#utility.yul\":2827:2828   */\n  0x03\n    /* \"#utility.yul\":2823:2834   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2819:2843   */\n  shr\n    /* \"#utility.yul\":2815:2844   */\n  not\n    /* \"#utility.yul\":2805:2845   */\n  and\n    /* \"#utility.yul\":2851:2852   */\n  0x01\n    /* \"#utility.yul\":2847:2858   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2802:2859   */\n  or\n    /* \"#utility.yul\":4072:4153   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3233:4163   */\n  jump(tag_73)\n    /* \"#utility.yul\":3263:3912   */\ntag_81:\n    /* \"#utility.yul\":2123:2124   */\n  0x00\n    /* \"#utility.yul\":2116:2130   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2160:2164   */\n  0x20\n    /* \"#utility.yul\":2147:2165   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3299:3319   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3417:3639   */\ntag_85:\n    /* \"#utility.yul\":3431:3438   */\n  dup3\n    /* \"#utility.yul\":3428:3429   */\n  dup2\n    /* \"#utility.yul\":3425:3439   */\n  lt\n    /* \"#utility.yul\":3417:3639   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3513:3532   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3507:3533   */\n  mload\n    /* \"#utility.yul\":3492:3534   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3620:3624   */\n  0x20\n    /* \"#utility.yul\":3605:3625   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3573:3574   */\n  0x01\n    /* \"#utility.yul\":3561:3575   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3447:3459   */\n  add\n    /* \"#utility.yul\":3417:3639   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":3421:3424   */\n  pop\n    /* \"#utility.yul\":3667:3673   */\n  dup5\n    /* \"#utility.yul\":3658:3665   */\n  dup3\n    /* \"#utility.yul\":3655:3674   */\n  lt\n    /* \"#utility.yul\":3652:3853   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3728:3747   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3722:3748   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3811:3812   */\n  0x03\n    /* \"#utility.yul\":3807:3821   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3823:3826   */\n  0xf8\n    /* \"#utility.yul\":3803:3827   */\n  and\n    /* \"#utility.yul\":3799:3836   */\n  shr\n    /* \"#utility.yul\":3795:3837   */\n  not\n    /* \"#utility.yul\":3780:3838   */\n  and\n    /* \"#utility.yul\":3765:3839   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3652:3853   */\ntag_88:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3899:3900   */\n  0x01\n    /* \"#utility.yul\":3883:3897   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3879:3901   */\n  add\n    /* \"#utility.yul\":3866:3902   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2870:4169   */\n  jump\t// out\n    /* \"#utility.yul\":4174:4301   */\ntag_45:\n    /* \"#utility.yul\":4235:4245   */\n  0x4e487b71\n    /* \"#utility.yul\":4230:4233   */\n  0xe0\n    /* \"#utility.yul\":4226:4246   */\n  shl\n    /* \"#utility.yul\":4223:4224   */\n  0x00\n    /* \"#utility.yul\":4216:4247   */\n  mstore\n    /* \"#utility.yul\":4266:4270   */\n  0x11\n    /* \"#utility.yul\":4263:4264   */\n  0x04\n    /* \"#utility.yul\":4256:4271   */\n  mstore\n    /* \"#utility.yul\":4290:4294   */\n  0x24\n    /* \"#utility.yul\":4287:4288   */\n  0x00\n    /* \"#utility.yul\":4280:4295   */\n  revert\n    /* \"#utility.yul\":4306:4681   */\ntag_46:\n    /* \"#utility.yul\":4394:4395   */\n  0x01\n    /* \"#utility.yul\":4412:4417   */\n  dup2\n    /* \"#utility.yul\":4426:4675   */\ntag_91:\n    /* \"#utility.yul\":4447:4448   */\n  0x01\n    /* \"#utility.yul\":4437:4445   */\n  dup5\n    /* \"#utility.yul\":4434:4449   */\n  gt\n    /* \"#utility.yul\":4426:4675   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4497:4501   */\n  dup1\n    /* \"#utility.yul\":4492:4495   */\n  dup6\n    /* \"#utility.yul\":4488:4502   */\n  div\n    /* \"#utility.yul\":4482:4486   */\n  dup2\n    /* \"#utility.yul\":4479:4503   */\n  gt\n    /* \"#utility.yul\":4476:4526   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4506:4524   */\n  tag_95\n  tag_45\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4556:4557   */\n  0x01\n    /* \"#utility.yul\":4546:4554   */\n  dup5\n    /* \"#utility.yul\":4542:4558   */\n  and\n    /* \"#utility.yul\":4539:4588   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4570:4586   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":4539:4588   */\ntag_96:\n    /* \"#utility.yul\":4653:4654   */\n  0x01\n    /* \"#utility.yul\":4649:4665   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":4609:4624   */\n  dup1\n  mul\n    /* \"#utility.yul\":4426:4675   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":4306:4681   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4686:5588   */\ntag_47:\n    /* \"#utility.yul\":4735:4740   */\n  0x00\n    /* \"#utility.yul\":4765:4773   */\n  dup3\n    /* \"#utility.yul\":4755:4835   */\n  tag_98\n  jumpi\n  pop\n    /* \"#utility.yul\":4806:4807   */\n  0x01\n    /* \"#utility.yul\":4820:4825   */\n  jump(tag_97)\n    /* \"#utility.yul\":4755:4835   */\ntag_98:\n    /* \"#utility.yul\":4854:4858   */\n  dup2\n    /* \"#utility.yul\":4844:4920   */\n  tag_99\n  jumpi\n  pop\n    /* \"#utility.yul\":4891:4892   */\n  0x00\n    /* \"#utility.yul\":4905:4910   */\n  jump(tag_97)\n    /* \"#utility.yul\":4844:4920   */\ntag_99:\n    /* \"#utility.yul\":4936:4940   */\n  dup2\n    /* \"#utility.yul\":4954:4955   */\n  0x01\n    /* \"#utility.yul\":4949:5008   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5022:5023   */\n  0x02\n    /* \"#utility.yul\":5017:5191   */\n  dup2\n  eq\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4929:5191   */\n  jump(tag_100)\n    /* \"#utility.yul\":4949:5008   */\ntag_101:\n    /* \"#utility.yul\":4979:4980   */\n  0x01\n    /* \"#utility.yul\":4970:4980   */\n  swap2\n  pop\n    /* \"#utility.yul\":4993:4998   */\n  pop\n  jump(tag_97)\n    /* \"#utility.yul\":5017:5191   */\ntag_102:\n    /* \"#utility.yul\":5054:5057   */\n  0xff\n    /* \"#utility.yul\":5044:5052   */\n  dup5\n    /* \"#utility.yul\":5041:5058   */\n  gt\n    /* \"#utility.yul\":5038:5081   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5061:5079   */\n  tag_104\n  tag_45\n  jump\t// in\ntag_104:\n  pop\n  pop\n    /* \"#utility.yul\":5117:5118   */\n  0x01\n    /* \"#utility.yul\":5103:5119   */\n  dup3\n  shl\n    /* \"#utility.yul\":5176:5181   */\n  jump(tag_97)\n    /* \"#utility.yul\":4929:5191   */\ntag_100:\n  pop\n    /* \"#utility.yul\":5275:5277   */\n  0x20\n    /* \"#utility.yul\":5265:5273   */\n  dup4\n    /* \"#utility.yul\":5262:5278   */\n  lt\n    /* \"#utility.yul\":5256:5259   */\n  0x0133\n    /* \"#utility.yul\":5250:5254   */\n  dup4\n    /* \"#utility.yul\":5247:5260   */\n  lt\n    /* \"#utility.yul\":5243:5279   */\n  and\n    /* \"#utility.yul\":5237:5239   */\n  0x4e\n    /* \"#utility.yul\":5227:5235   */\n  dup5\n    /* \"#utility.yul\":5224:5240   */\n  lt\n    /* \"#utility.yul\":5219:5221   */\n  0x0b\n    /* \"#utility.yul\":5213:5217   */\n  dup5\n    /* \"#utility.yul\":5210:5222   */\n  lt\n    /* \"#utility.yul\":5206:5241   */\n  and\n    /* \"#utility.yul\":5203:5280   */\n  or\n    /* \"#utility.yul\":5200:5403   */\n  iszero\n  tag_105\n  jumpi\n  pop\n    /* \"#utility.yul\":5312:5331   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":5388:5393   */\n  jump(tag_97)\n    /* \"#utility.yul\":5200:5403   */\ntag_105:\n    /* \"#utility.yul\":5435:5477   */\n  tag_106\n  not(0x00)\n    /* \"#utility.yul\":5460:5468   */\n  dup5\n    /* \"#utility.yul\":5454:5458   */\n  dup5\n    /* \"#utility.yul\":5435:5477   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5513:5519   */\n  dup1\n    /* \"#utility.yul\":5509:5510   */\n  0x00\n    /* \"#utility.yul\":5505:5511   */\n  not\n    /* \"#utility.yul\":5501:5520   */\n  div\n    /* \"#utility.yul\":5492:5499   */\n  dup3\n    /* \"#utility.yul\":5489:5521   */\n  gt\n    /* \"#utility.yul\":5486:5544   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5524:5542   */\n  tag_108\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5562:5582   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4686:5588   */\ntag_97:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5593:5733   */\ntag_15:\n    /* \"#utility.yul\":5651:5656   */\n  0x00\n    /* \"#utility.yul\":5680:5727   */\n  tag_110\n    /* \"#utility.yul\":5721:5725   */\n  0xff\n    /* \"#utility.yul\":5711:5719   */\n  dup5\n    /* \"#utility.yul\":5707:5726   */\n  and\n    /* \"#utility.yul\":5701:5705   */\n  dup4\n    /* \"#utility.yul\":5680:5727   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5671:5727   */\n  swap4\n    /* \"#utility.yul\":5593:5733   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5738:5906   */\ntag_17:\n    /* \"#utility.yul\":5811:5820   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5842:5851   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5859:5874   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5853:5875   */\n  dup5\n  eq\n    /* \"#utility.yul\":5839:5876   */\n  or\n    /* \"#utility.yul\":5829:5900   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5880:5898   */\n  tag_97\n  tag_45\n  jump\t// in\n    /* \"#utility.yul\":6119:6244   */\ntag_30:\n    /* \"#utility.yul\":6184:6193   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6205:6215   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6202:6238   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":6218:6236   */\n  tag_97\n  tag_45\n  jump\t// in\n    /* \"#utility.yul\":6599:6776   */\ntag_48:\n    /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_15\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      tag_15\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_15\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_23\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_13\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_17\n      tag_45\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2923:2955   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2905:2956   */\n      mstore\n        /* \"#utility.yul\":2972:2990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2965:2999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3015:3033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3008:3042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2878:2896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_114\n      swap1\n      pop\n      jump\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2923:2955   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2905:2956   */\n      mstore\n        /* \"#utility.yul\":2972:2990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2965:2999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3015:3033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3008:3042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2878:2896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_92\n        /* \"#utility.yul\":2703:3048   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_16:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_120:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_124:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_19:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_126:\n        /* \"#utility.yul\":783:812   */\n      tag_127\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_120\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_29:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_131:\n        /* \"#utility.yul\":1479:1508   */\n      tag_132\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_120\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_133\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_120\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_38:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_136:\n        /* \"#utility.yul\":2013:2042   */\n      tag_137\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_120\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_50:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_139:\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_141\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_120\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_55:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_143:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_144:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_113:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_882": {
									"entryPoint": null,
									"id": 882,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 134,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 195,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 129,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:6",
										"nodeType": "YulBlock",
										"src": "0:6778:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:659:6",
													"nodeType": "YulBlock",
													"src": "210:659:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:6"
																},
																"nativeSrc": "298:13:6",
																"nodeType": "YulFunctionCall",
																"src": "298:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:6",
																	"nodeType": "YulTypedName",
																	"src": "288:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:6",
																"nodeType": "YulBlock",
																"src": "354:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:6"
																			},
																			"nativeSrc": "356:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:6"
																		},
																		"nativeSrc": "356:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:6",
																						"nodeType": "YulLiteral",
																						"src": "342:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:6",
																						"nodeType": "YulLiteral",
																						"src": "346:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:6"
																				},
																				"nativeSrc": "338:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:6",
																				"nodeType": "YulLiteral",
																				"src": "350:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:6"
																		},
																		"nativeSrc": "334:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:6"
																},
																"nativeSrc": "323:30:6",
																"nodeType": "YulFunctionCall",
																"src": "323:30:6"
															},
															"nativeSrc": "320:56:6",
															"nodeType": "YulIf",
															"src": "320:56:6"
														},
														{
															"nativeSrc": "385:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:6",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:6"
																},
																"nativeSrc": "399:9:6",
																"nodeType": "YulFunctionCall",
																"src": "399:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:6",
																	"nodeType": "YulTypedName",
																	"src": "389:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:6",
																										"nodeType": "YulLiteral",
																										"src": "471:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:6"
																								},
																								"nativeSrc": "459:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:6",
																										"nodeType": "YulLiteral",
																										"src": "482:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:6"
																								},
																								"nativeSrc": "478:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:6"
																						},
																						"nativeSrc": "455:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:6",
																						"nodeType": "YulLiteral",
																						"src": "488:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:6"
																				},
																				"nativeSrc": "451:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:6",
																						"nodeType": "YulLiteral",
																						"src": "497:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:6"
																				},
																				"nativeSrc": "493:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:6"
																		},
																		"nativeSrc": "447:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:6"
																},
																"nativeSrc": "435:67:6",
																"nodeType": "YulFunctionCall",
																"src": "435:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:6",
																	"nodeType": "YulTypedName",
																	"src": "421:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:6",
																"nodeType": "YulBlock",
																"src": "577:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:6"
																			},
																			"nativeSrc": "579:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:6"
																		},
																		"nativeSrc": "579:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:6",
																								"nodeType": "YulLiteral",
																								"src": "540:2:6",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:6",
																								"nodeType": "YulLiteral",
																								"src": "544:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:6"
																						},
																						"nativeSrc": "536:10:6",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:6",
																						"nodeType": "YulLiteral",
																						"src": "548:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:6"
																				},
																				"nativeSrc": "532:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:6"
																		},
																		"nativeSrc": "517:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:6"
																		},
																		"nativeSrc": "553:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:6"
																},
																"nativeSrc": "514:62:6",
																"nodeType": "YulFunctionCall",
																"src": "514:62:6"
															},
															"nativeSrc": "511:88:6",
															"nodeType": "YulIf",
															"src": "511:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:6",
																		"nodeType": "YulLiteral",
																		"src": "615:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:6"
																},
																"nativeSrc": "608:22:6",
																"nodeType": "YulFunctionCall",
																"src": "608:22:6"
															},
															"nativeSrc": "608:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:6"
																},
																"nativeSrc": "639:22:6",
																"nodeType": "YulFunctionCall",
																"src": "639:22:6"
															},
															"nativeSrc": "639:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:6"
														},
														{
															"body": {
																"nativeSrc": "713:16:6",
																"nodeType": "YulBlock",
																"src": "713:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:6",
																					"nodeType": "YulLiteral",
																					"src": "722:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:6",
																					"nodeType": "YulLiteral",
																					"src": "725:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:6"
																			},
																			"nativeSrc": "715:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:6"
																		},
																		"nativeSrc": "715:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:6"
																				},
																				"nativeSrc": "680:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:6",
																				"nodeType": "YulLiteral",
																				"src": "701:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:6"
																		},
																		"nativeSrc": "676:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:6"
																},
																"nativeSrc": "673:39:6",
																"nodeType": "YulFunctionCall",
																"src": "673:39:6"
															},
															"nativeSrc": "670:59:6",
															"nodeType": "YulIf",
															"src": "670:59:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:6",
																				"nodeType": "YulLiteral",
																				"src": "756:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:6"
																		},
																		"nativeSrc": "744:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:6",
																				"nodeType": "YulLiteral",
																				"src": "775:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:6"
																		},
																		"nativeSrc": "763:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:6"
																},
																"nativeSrc": "738:51:6",
																"nodeType": "YulFunctionCall",
																"src": "738:51:6"
															},
															"nativeSrc": "738:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:6"
																				},
																				"nativeSrc": "809:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:6",
																				"nodeType": "YulLiteral",
																				"src": "830:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:6"
																		},
																		"nativeSrc": "805:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:6",
																		"nodeType": "YulLiteral",
																		"src": "837:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:6"
																},
																"nativeSrc": "798:41:6",
																"nodeType": "YulFunctionCall",
																"src": "798:41:6"
															},
															"nativeSrc": "798:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:6"
														},
														{
															"nativeSrc": "848:15:6",
															"nodeType": "YulAssignment",
															"src": "848:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:6",
																"nodeType": "YulIdentifier",
																"src": "857:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:723:6"
											},
											{
												"body": {
													"nativeSrc": "1026:634:6",
													"nodeType": "YulBlock",
													"src": "1026:634:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1073:16:6",
																"nodeType": "YulBlock",
																"src": "1073:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1082:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1082:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1085:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1085:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1075:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:6:6"
																			},
																			"nativeSrc": "1075:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1075:12:6"
																		},
																		"nativeSrc": "1075:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1075:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1047:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1047:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1056:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1056:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1043:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1043:3:6"
																		},
																		"nativeSrc": "1043:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1043:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1068:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1068:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1039:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:6"
																},
																"nativeSrc": "1039:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1039:33:6"
															},
															"nativeSrc": "1036:53:6",
															"nodeType": "YulIf",
															"src": "1036:53:6"
														},
														{
															"nativeSrc": "1098:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1098:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1118:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1118:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:6"
																},
																"nativeSrc": "1112:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1112:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1102:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1102:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1171:16:6",
																"nodeType": "YulBlock",
																"src": "1171:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1180:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1180:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1183:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1173:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1173:6:6"
																			},
																			"nativeSrc": "1173:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1173:12:6"
																		},
																		"nativeSrc": "1173:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1143:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1159:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1159:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1163:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1163:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1155:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1155:3:6"
																				},
																				"nativeSrc": "1155:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1155:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1167:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1167:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1151:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:6"
																		},
																		"nativeSrc": "1151:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1151:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1140:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:2:6"
																},
																"nativeSrc": "1140:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:30:6"
															},
															"nativeSrc": "1137:50:6",
															"nodeType": "YulIf",
															"src": "1137:50:6"
														},
														{
															"nativeSrc": "1196:71:6",
															"nodeType": "YulAssignment",
															"src": "1196:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1239:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1250:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1250:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1235:3:6"
																		},
																		"nativeSrc": "1235:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1235:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1259:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1259:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1206:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1206:28:6"
																},
																"nativeSrc": "1206:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1206:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1196:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:6"
																}
															]
														},
														{
															"nativeSrc": "1276:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1276:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1302:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1302:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1313:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1313:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1298:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:6"
																		},
																		"nativeSrc": "1298:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1298:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1292:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:5:6"
																},
																"nativeSrc": "1292:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1292:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1280:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1280:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1362:16:6",
																"nodeType": "YulBlock",
																"src": "1362:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1374:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1364:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:6"
																			},
																			"nativeSrc": "1364:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:6"
																		},
																		"nativeSrc": "1364:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1332:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1332:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1350:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1350:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1354:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1354:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1346:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1346:3:6"
																				},
																				"nativeSrc": "1346:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1346:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1358:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1358:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1342:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:6"
																		},
																		"nativeSrc": "1342:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:6"
																},
																"nativeSrc": "1329:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:6"
															},
															"nativeSrc": "1326:52:6",
															"nodeType": "YulIf",
															"src": "1326:52:6"
														},
														{
															"nativeSrc": "1387:73:6",
															"nodeType": "YulAssignment",
															"src": "1387:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1430:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1441:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1426:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:6"
																		},
																		"nativeSrc": "1426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1452:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1397:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:6"
																},
																"nativeSrc": "1397:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1397:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1387:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:6"
																}
															]
														},
														{
															"nativeSrc": "1469:35:6",
															"nodeType": "YulAssignment",
															"src": "1469:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1489:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1489:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1500:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1500:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1485:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:6"
																		},
																		"nativeSrc": "1485:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1485:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1479:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1479:5:6"
																},
																"nativeSrc": "1479:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1479:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:6"
																}
															]
														},
														{
															"nativeSrc": "1513:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1513:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1547:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:6"
																		},
																		"nativeSrc": "1532:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1532:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1526:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:5:6"
																},
																"nativeSrc": "1526:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:25:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1517:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1517:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1614:16:6",
																"nodeType": "YulBlock",
																"src": "1614:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1623:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1623:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1626:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1626:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1616:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1616:6:6"
																			},
																			"nativeSrc": "1616:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1616:12:6"
																		},
																		"nativeSrc": "1616:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1616:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1573:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1573:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1584:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1584:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1599:3:6",
																										"nodeType": "YulLiteral",
																										"src": "1599:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1604:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1604:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1595:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1595:3:6"
																								},
																								"nativeSrc": "1595:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1595:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1608:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1608:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1591:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:6"
																						},
																						"nativeSrc": "1591:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1580:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1580:3:6"
																				},
																				"nativeSrc": "1580:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1580:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1570:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1570:2:6"
																		},
																		"nativeSrc": "1570:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1570:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1563:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:6"
																},
																"nativeSrc": "1563:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:50:6"
															},
															"nativeSrc": "1560:70:6",
															"nodeType": "YulIf",
															"src": "1560:70:6"
														},
														{
															"nativeSrc": "1639:15:6",
															"nodeType": "YulAssignment",
															"src": "1639:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1649:5:6",
																"nodeType": "YulIdentifier",
																"src": "1649:5:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1639:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory",
												"nativeSrc": "874:786:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "968:9:6",
														"nodeType": "YulTypedName",
														"src": "968:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "979:7:6",
														"nodeType": "YulTypedName",
														"src": "979:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "991:6:6",
														"nodeType": "YulTypedName",
														"src": "991:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "999:6:6",
														"nodeType": "YulTypedName",
														"src": "999:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1007:6:6",
														"nodeType": "YulTypedName",
														"src": "1007:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1015:6:6",
														"nodeType": "YulTypedName",
														"src": "1015:6:6",
														"type": ""
													}
												],
												"src": "874:786:6"
											},
											{
												"body": {
													"nativeSrc": "1720:325:6",
													"nodeType": "YulBlock",
													"src": "1720:325:6",
													"statements": [
														{
															"nativeSrc": "1730:22:6",
															"nodeType": "YulAssignment",
															"src": "1730:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1744:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1744:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1747:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1747:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1740:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:6"
																},
																"nativeSrc": "1740:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1740:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1730:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:6"
																}
															]
														},
														{
															"nativeSrc": "1761:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1761:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1791:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1791:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1797:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1787:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:6"
																},
																"nativeSrc": "1787:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1787:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1765:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1765:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1838:31:6",
																"nodeType": "YulBlock",
																"src": "1838:31:6",
																"statements": [
																	{
																		"nativeSrc": "1840:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1840:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1854:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1854:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1862:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1862:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1850:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1850:3:6"
																			},
																			"nativeSrc": "1850:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1850:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1840:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1840:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1818:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1818:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1811:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1811:6:6"
																},
																"nativeSrc": "1811:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1811:26:6"
															},
															"nativeSrc": "1808:61:6",
															"nodeType": "YulIf",
															"src": "1808:61:6"
														},
														{
															"body": {
																"nativeSrc": "1928:111:6",
																"nodeType": "YulBlock",
																"src": "1928:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1949:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1949:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1956:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1956:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1961:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1961:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1952:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1952:3:6"
																					},
																					"nativeSrc": "1952:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1952:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1942:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1942:6:6"
																			},
																			"nativeSrc": "1942:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1942:31:6"
																		},
																		"nativeSrc": "1942:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1942:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1993:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1993:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1996:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1996:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1986:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:6"
																			},
																			"nativeSrc": "1986:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1986:15:6"
																		},
																		"nativeSrc": "1986:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1986:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2024:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:6"
																			},
																			"nativeSrc": "2014:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:15:6"
																		},
																		"nativeSrc": "2014:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1884:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1884:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1907:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1915:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1915:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1904:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1904:2:6"
																		},
																		"nativeSrc": "1904:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1881:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1881:2:6"
																},
																"nativeSrc": "1881:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1881:38:6"
															},
															"nativeSrc": "1878:161:6",
															"nodeType": "YulIf",
															"src": "1878:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1665:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1700:4:6",
														"nodeType": "YulTypedName",
														"src": "1700:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1709:6:6",
														"nodeType": "YulTypedName",
														"src": "1709:6:6",
														"type": ""
													}
												],
												"src": "1665:380:6"
											},
											{
												"body": {
													"nativeSrc": "2106:65:6",
													"nodeType": "YulBlock",
													"src": "2106:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2123:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2123:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2126:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2126:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:6"
																},
																"nativeSrc": "2116:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2116:14:6"
															},
															"nativeSrc": "2116:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2116:14:6"
														},
														{
															"nativeSrc": "2139:26:6",
															"nodeType": "YulAssignment",
															"src": "2139:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2160:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2147:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2147:9:6"
																},
																"nativeSrc": "2147:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2147:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2139:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2139:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2050:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2089:3:6",
														"nodeType": "YulTypedName",
														"src": "2089:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2097:4:6",
														"nodeType": "YulTypedName",
														"src": "2097:4:6",
														"type": ""
													}
												],
												"src": "2050:121:6"
											},
											{
												"body": {
													"nativeSrc": "2257:437:6",
													"nodeType": "YulBlock",
													"src": "2257:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2290:398:6",
																"nodeType": "YulBlock",
																"src": "2290:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2311:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2311:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2314:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2314:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2304:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:6"
																			},
																			"nativeSrc": "2304:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2304:16:6"
																		},
																		"nativeSrc": "2304:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2304:16:6"
																	},
																	{
																		"nativeSrc": "2333:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2333:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2355:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2355:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2358:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2358:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2345:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2345:9:6"
																			},
																			"nativeSrc": "2345:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2345:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2337:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2337:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2376:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2376:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2399:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2399:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2409:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2409:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2416:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2416:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2428:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2428:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2412:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2412:3:6"
																							},
																							"nativeSrc": "2412:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2412:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2405:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2405:3:6"
																					},
																					"nativeSrc": "2405:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2405:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2395:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2395:3:6"
																			},
																			"nativeSrc": "2395:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2395:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2380:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2380:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2470:23:6",
																			"nodeType": "YulBlock",
																			"src": "2470:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2472:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2472:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2487:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2487:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2472:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2472:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2452:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2452:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2464:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2464:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2449:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2449:2:6"
																			},
																			"nativeSrc": "2449:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2449:20:6"
																		},
																		"nativeSrc": "2446:47:6",
																		"nodeType": "YulIf",
																		"src": "2446:47:6"
																	},
																	{
																		"nativeSrc": "2506:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2506:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2520:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2520:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2530:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2530:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2537:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2537:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2542:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2542:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2533:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2533:3:6"
																							},
																							"nativeSrc": "2533:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2533:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2526:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2526:3:6"
																					},
																					"nativeSrc": "2526:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2526:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2516:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2516:3:6"
																			},
																			"nativeSrc": "2516:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2516:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2510:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2510:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2560:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2560:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2573:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2573:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2564:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2564:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2658:20:6",
																			"nodeType": "YulBlock",
																			"src": "2658:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2667:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2667:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2674:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2674:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2660:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2660:6:6"
																						},
																						"nativeSrc": "2660:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2660:16:6"
																					},
																					"nativeSrc": "2660:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2660:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2608:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2608:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2615:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2615:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2605:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2605:2:6"
																			},
																			"nativeSrc": "2605:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2605:13:6"
																		},
																		"nativeSrc": "2597:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2619:26:6",
																			"nodeType": "YulBlock",
																			"src": "2619:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2621:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2621:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2634:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2634:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2641:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2641:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2630:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2630:3:6"
																						},
																						"nativeSrc": "2630:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2630:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2621:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2621:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2601:3:6",
																			"nodeType": "YulBlock",
																			"src": "2601:3:6",
																			"statements": []
																		},
																		"src": "2597:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2273:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2278:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2270:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2270:2:6"
																},
																"nativeSrc": "2270:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2270:11:6"
															},
															"nativeSrc": "2267:421:6",
															"nodeType": "YulIf",
															"src": "2267:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2176:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2229:5:6",
														"nodeType": "YulTypedName",
														"src": "2229:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2236:3:6",
														"nodeType": "YulTypedName",
														"src": "2236:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2241:10:6",
														"nodeType": "YulTypedName",
														"src": "2241:10:6",
														"type": ""
													}
												],
												"src": "2176:518:6"
											},
											{
												"body": {
													"nativeSrc": "2784:81:6",
													"nodeType": "YulBlock",
													"src": "2784:81:6",
													"statements": [
														{
															"nativeSrc": "2794:65:6",
															"nodeType": "YulAssignment",
															"src": "2794:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2809:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2809:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2827:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2827:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2830:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2830:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2823:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2823:3:6"
																								},
																								"nativeSrc": "2823:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2823:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2840:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2840:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2836:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2836:3:6"
																								},
																								"nativeSrc": "2836:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2836:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2819:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2819:3:6"
																						},
																						"nativeSrc": "2819:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2819:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2815:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2815:3:6"
																				},
																				"nativeSrc": "2815:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2815:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2805:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:3:6"
																		},
																		"nativeSrc": "2805:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2805:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2851:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2851:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2854:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2854:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2847:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2847:3:6"
																		},
																		"nativeSrc": "2847:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2802:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2802:2:6"
																},
																"nativeSrc": "2802:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2802:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2794:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2699:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2761:4:6",
														"nodeType": "YulTypedName",
														"src": "2761:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2767:3:6",
														"nodeType": "YulTypedName",
														"src": "2767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2775:4:6",
														"nodeType": "YulTypedName",
														"src": "2775:4:6",
														"type": ""
													}
												],
												"src": "2699:166:6"
											},
											{
												"body": {
													"nativeSrc": "2966:1203:6",
													"nodeType": "YulBlock",
													"src": "2966:1203:6",
													"statements": [
														{
															"nativeSrc": "2976:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2996:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2996:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2990:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2990:5:6"
																},
																"nativeSrc": "2990:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2990:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2980:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2980:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3043:22:6",
																"nodeType": "YulBlock",
																"src": "3043:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3045:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3045:16:6"
																			},
																			"nativeSrc": "3045:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:18:6"
																		},
																		"nativeSrc": "3045:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3015:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3031:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3031:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3035:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3035:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3027:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:6"
																				},
																				"nativeSrc": "3027:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3027:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3039:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3039:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3023:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:6"
																		},
																		"nativeSrc": "3023:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3012:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3012:2:6"
																},
																"nativeSrc": "3012:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3012:30:6"
															},
															"nativeSrc": "3009:56:6",
															"nodeType": "YulIf",
															"src": "3009:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3118:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3118:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3156:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3156:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3150:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3150:5:6"
																				},
																				"nativeSrc": "3150:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3150:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3124:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3124:25:6"
																		},
																		"nativeSrc": "3124:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3164:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3074:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3074:43:6"
																},
																"nativeSrc": "3074:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3074:97:6"
															},
															"nativeSrc": "3074:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "3074:97:6"
														},
														{
															"nativeSrc": "3180:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3180:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3197:1:6",
																"nodeType": "YulLiteral",
																"src": "3197:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3184:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3184:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3207:17:6",
															"nodeType": "YulAssignment",
															"src": "3207:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3220:4:6",
																"nodeType": "YulLiteral",
																"src": "3220:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3207:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3207:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3270:642:6",
																		"nodeType": "YulBlock",
																		"src": "3270:642:6",
																		"statements": [
																			{
																				"nativeSrc": "3284:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3284:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3303:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3303:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3315:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3315:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3311:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3311:3:6"
																							},
																							"nativeSrc": "3311:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3311:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3299:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3299:3:6"
																					},
																					"nativeSrc": "3299:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3299:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3288:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3288:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3332:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3332:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3376:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3376:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3346:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3346:29:6"
																					},
																					"nativeSrc": "3346:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3346:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3336:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3336:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3394:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3394:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3403:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3403:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3398:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3398:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3474:165:6",
																					"nodeType": "YulBlock",
																					"src": "3474:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3499:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3499:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3517:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3517:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3522:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3522:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3513:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3513:3:6"
																												},
																												"nativeSrc": "3513:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3513:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3507:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3507:5:6"
																										},
																										"nativeSrc": "3507:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3507:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3492:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3492:6:6"
																								},
																								"nativeSrc": "3492:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3492:42:6"
																							},
																							"nativeSrc": "3492:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3492:42:6"
																						},
																						{
																							"nativeSrc": "3551:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3551:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3565:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3565:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3573:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3573:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3561:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3561:3:6"
																								},
																								"nativeSrc": "3561:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3561:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3551:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3551:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3592:33:6",
																							"nodeType": "YulAssignment",
																							"src": "3592:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3609:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3609:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3620:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3620:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3605:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3605:3:6"
																								},
																								"nativeSrc": "3605:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3605:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3592:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3592:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3428:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3428:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3431:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3431:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3425:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3425:2:6"
																					},
																					"nativeSrc": "3425:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3425:14:6"
																				},
																				"nativeSrc": "3417:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3440:21:6",
																					"nodeType": "YulBlock",
																					"src": "3440:21:6",
																					"statements": [
																						{
																							"nativeSrc": "3442:17:6",
																							"nodeType": "YulAssignment",
																							"src": "3442:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3451:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3451:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3454:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3454:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3447:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3447:3:6"
																								},
																								"nativeSrc": "3447:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3447:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3442:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3442:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3421:3:6",
																					"nodeType": "YulBlock",
																					"src": "3421:3:6",
																					"statements": []
																				},
																				"src": "3417:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3687:166:6",
																					"nodeType": "YulBlock",
																					"src": "3687:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3705:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3705:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3732:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3732:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3737:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3737:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3728:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3728:3:6"
																										},
																										"nativeSrc": "3728:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3728:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3722:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3722:5:6"
																								},
																								"nativeSrc": "3722:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3722:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3709:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3709:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3772:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3772:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3784:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3784:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3811:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3811:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3814:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3814:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3807:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3807:3:6"
																																		},
																																		"nativeSrc": "3807:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3807:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3823:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3823:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3803:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3803:3:6"
																																},
																																"nativeSrc": "3803:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3803:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3833:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3833:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3829:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3829:3:6"
																																},
																																"nativeSrc": "3829:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3829:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3799:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3799:3:6"
																														},
																														"nativeSrc": "3799:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3799:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3795:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3795:3:6"
																												},
																												"nativeSrc": "3795:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3795:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3780:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3780:3:6"
																										},
																										"nativeSrc": "3780:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3780:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3765:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3765:6:6"
																								},
																								"nativeSrc": "3765:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3765:74:6"
																							},
																							"nativeSrc": "3765:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3765:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3658:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3658:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3667:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3667:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3655:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3655:2:6"
																					},
																					"nativeSrc": "3655:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3655:19:6"
																				},
																				"nativeSrc": "3652:201:6",
																				"nodeType": "YulIf",
																				"src": "3652:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3873:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3873:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3887:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3887:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3890:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3890:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3883:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3883:3:6"
																									},
																									"nativeSrc": "3883:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3883:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3899:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3899:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3879:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3879:3:6"
																							},
																							"nativeSrc": "3879:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3879:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3866:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3866:6:6"
																					},
																					"nativeSrc": "3866:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3866:36:6"
																				},
																				"nativeSrc": "3866:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3866:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3263:649:6",
																	"nodeType": "YulCase",
																	"src": "3263:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3268:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3268:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3929:234:6",
																		"nodeType": "YulBlock",
																		"src": "3929:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3943:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3943:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3956:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3956:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3947:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3947:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3992:67:6",
																					"nodeType": "YulBlock",
																					"src": "3992:67:6",
																					"statements": [
																						{
																							"nativeSrc": "4010:35:6",
																							"nodeType": "YulAssignment",
																							"src": "4010:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4029:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4029:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4034:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4034:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4025:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4025:3:6"
																										},
																										"nativeSrc": "4025:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4025:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4019:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4019:5:6"
																								},
																								"nativeSrc": "4019:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4019:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4010:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4010:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3973:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3973:6:6"
																				},
																				"nativeSrc": "3970:89:6",
																				"nodeType": "YulIf",
																				"src": "3970:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4079:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4079:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4138:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4138:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4145:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4145:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4085:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4085:52:6"
																							},
																							"nativeSrc": "4085:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4085:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4072:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4072:6:6"
																					},
																					"nativeSrc": "4072:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4072:81:6"
																				},
																				"nativeSrc": "4072:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4072:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3921:242:6",
																	"nodeType": "YulCase",
																	"src": "3921:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3243:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3251:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3251:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3240:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3240:2:6"
																},
																"nativeSrc": "3240:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3240:14:6"
															},
															"nativeSrc": "3233:930:6",
															"nodeType": "YulSwitch",
															"src": "3233:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2870:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2951:4:6",
														"nodeType": "YulTypedName",
														"src": "2951:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2957:3:6",
														"nodeType": "YulTypedName",
														"src": "2957:3:6",
														"type": ""
													}
												],
												"src": "2870:1299:6"
											},
											{
												"body": {
													"nativeSrc": "4206:95:6",
													"nodeType": "YulBlock",
													"src": "4206:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4223:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4223:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4230:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4230:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4235:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4235:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4226:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4226:3:6"
																		},
																		"nativeSrc": "4226:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4226:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4216:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:6"
																},
																"nativeSrc": "4216:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4216:31:6"
															},
															"nativeSrc": "4216:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4216:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4263:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4263:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4266:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																},
																"nativeSrc": "4256:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4256:15:6"
															},
															"nativeSrc": "4256:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4256:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4287:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4287:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4290:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4290:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4280:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:6"
																},
																"nativeSrc": "4280:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4280:15:6"
															},
															"nativeSrc": "4280:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4280:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4174:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4174:127:6"
											},
											{
												"body": {
													"nativeSrc": "4375:306:6",
													"nodeType": "YulBlock",
													"src": "4375:306:6",
													"statements": [
														{
															"nativeSrc": "4385:10:6",
															"nodeType": "YulAssignment",
															"src": "4385:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4394:1:6",
																"nodeType": "YulLiteral",
																"src": "4394:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4385:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4385:5:6"
																}
															]
														},
														{
															"nativeSrc": "4404:13:6",
															"nodeType": "YulAssignment",
															"src": "4404:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "4412:5:6",
																"nodeType": "YulIdentifier",
																"src": "4412:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4404:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4462:213:6",
																"nodeType": "YulBlock",
																"src": "4462:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4504:22:6",
																			"nodeType": "YulBlock",
																			"src": "4504:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4506:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "4506:16:6"
																						},
																						"nativeSrc": "4506:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4506:18:6"
																					},
																					"nativeSrc": "4506:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "4506:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4482:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4482:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4492:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4492:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4497:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4497:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4488:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4488:3:6"
																					},
																					"nativeSrc": "4488:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4488:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4479:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4479:2:6"
																			},
																			"nativeSrc": "4479:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4479:24:6"
																		},
																		"nativeSrc": "4476:50:6",
																		"nodeType": "YulIf",
																		"src": "4476:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "4559:29:6",
																			"nodeType": "YulBlock",
																			"src": "4559:29:6",
																			"statements": [
																				{
																					"nativeSrc": "4561:25:6",
																					"nodeType": "YulAssignment",
																					"src": "4561:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4574:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4574:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4581:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "4581:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4570:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4570:3:6"
																						},
																						"nativeSrc": "4570:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4570:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4561:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "4561:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4546:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4546:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4556:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4556:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4542:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4542:3:6"
																			},
																			"nativeSrc": "4542:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4542:16:6"
																		},
																		"nativeSrc": "4539:49:6",
																		"nodeType": "YulIf",
																		"src": "4539:49:6"
																	},
																	{
																		"nativeSrc": "4601:23:6",
																		"nodeType": "YulAssignment",
																		"src": "4601:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4613:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4613:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4619:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4619:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4609:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4609:3:6"
																			},
																			"nativeSrc": "4609:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4609:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4601:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4601:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4637:28:6",
																		"nodeType": "YulAssignment",
																		"src": "4637:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4656:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4656:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4649:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4649:3:6"
																			},
																			"nativeSrc": "4649:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4649:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4637:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4637:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4437:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4437:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4447:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4447:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4434:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4434:2:6"
																},
																"nativeSrc": "4434:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4434:15:6"
															},
															"nativeSrc": "4426:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4450:3:6",
																"nodeType": "YulBlock",
																"src": "4450:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4430:3:6",
																"nodeType": "YulBlock",
																"src": "4430:3:6",
																"statements": []
															},
															"src": "4426:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4306:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4334:5:6",
														"nodeType": "YulTypedName",
														"src": "4334:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4341:8:6",
														"nodeType": "YulTypedName",
														"src": "4341:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "4351:3:6",
														"nodeType": "YulTypedName",
														"src": "4351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4359:5:6",
														"nodeType": "YulTypedName",
														"src": "4359:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4366:4:6",
														"nodeType": "YulTypedName",
														"src": "4366:4:6",
														"type": ""
													}
												],
												"src": "4306:375:6"
											},
											{
												"body": {
													"nativeSrc": "4745:843:6",
													"nodeType": "YulBlock",
													"src": "4745:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4783:52:6",
																"nodeType": "YulBlock",
																"src": "4783:52:6",
																"statements": [
																	{
																		"nativeSrc": "4797:10:6",
																		"nodeType": "YulAssignment",
																		"src": "4797:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4806:1:6",
																			"nodeType": "YulLiteral",
																			"src": "4806:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4797:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4797:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4820:5:6",
																		"nodeType": "YulLeave",
																		"src": "4820:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4765:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:6"
																},
																"nativeSrc": "4758:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4758:16:6"
															},
															"nativeSrc": "4755:80:6",
															"nodeType": "YulIf",
															"src": "4755:80:6"
														},
														{
															"body": {
																"nativeSrc": "4868:52:6",
																"nodeType": "YulBlock",
																"src": "4868:52:6",
																"statements": [
																	{
																		"nativeSrc": "4882:10:6",
																		"nodeType": "YulAssignment",
																		"src": "4882:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4891:1:6",
																			"nodeType": "YulLiteral",
																			"src": "4891:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4882:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4882:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4905:5:6",
																		"nodeType": "YulLeave",
																		"src": "4905:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4854:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4854:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:6"
																},
																"nativeSrc": "4847:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4847:12:6"
															},
															"nativeSrc": "4844:76:6",
															"nodeType": "YulIf",
															"src": "4844:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4956:52:6",
																		"nodeType": "YulBlock",
																		"src": "4956:52:6",
																		"statements": [
																			{
																				"nativeSrc": "4970:10:6",
																				"nodeType": "YulAssignment",
																				"src": "4970:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4979:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4970:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4970:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4993:5:6",
																				"nodeType": "YulLeave",
																				"src": "4993:5:6"
																			}
																		]
																	},
																	"nativeSrc": "4949:59:6",
																	"nodeType": "YulCase",
																	"src": "4949:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4954:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4954:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5024:167:6",
																		"nodeType": "YulBlock",
																		"src": "5024:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "5059:22:6",
																					"nodeType": "YulBlock",
																					"src": "5059:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "5061:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "5061:16:6"
																								},
																								"nativeSrc": "5061:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5061:18:6"
																							},
																							"nativeSrc": "5061:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5061:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5044:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5044:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5054:3:6",
																							"nodeType": "YulLiteral",
																							"src": "5054:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "5041:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:2:6"
																					},
																					"nativeSrc": "5041:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5041:17:6"
																				},
																				"nativeSrc": "5038:43:6",
																				"nodeType": "YulIf",
																				"src": "5038:43:6"
																			},
																			{
																				"nativeSrc": "5094:25:6",
																				"nodeType": "YulAssignment",
																				"src": "5094:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5107:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5107:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5117:1:6",
																							"nodeType": "YulLiteral",
																							"src": "5117:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5103:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5103:3:6"
																					},
																					"nativeSrc": "5103:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5103:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5094:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5094:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5132:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5132:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5142:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "5136:2:6",
																						"nodeType": "YulTypedName",
																						"src": "5136:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5156:7:6",
																				"nodeType": "YulAssignment",
																				"src": "5156:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5162:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5162:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "5156:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5156:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5176:5:6",
																				"nodeType": "YulLeave",
																				"src": "5176:5:6"
																			}
																		]
																	},
																	"nativeSrc": "5017:174:6",
																	"nodeType": "YulCase",
																	"src": "5017:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5022:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5022:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4936:4:6",
																"nodeType": "YulIdentifier",
																"src": "4936:4:6"
															},
															"nativeSrc": "4929:262:6",
															"nodeType": "YulSwitch",
															"src": "4929:262:6"
														},
														{
															"body": {
																"nativeSrc": "5289:114:6",
																"nodeType": "YulBlock",
																"src": "5289:114:6",
																"statements": [
																	{
																		"nativeSrc": "5303:28:6",
																		"nodeType": "YulAssignment",
																		"src": "5303:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5316:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5316:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5322:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "5322:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5312:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5312:3:6"
																			},
																			"nativeSrc": "5312:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5312:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5303:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5303:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5344:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5344:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5354:1:6",
																			"nodeType": "YulLiteral",
																			"src": "5354:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "5348:2:6",
																				"nodeType": "YulTypedName",
																				"src": "5348:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5368:7:6",
																		"nodeType": "YulAssignment",
																		"src": "5368:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5374:1:6",
																			"nodeType": "YulLiteral",
																			"src": "5374:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "5368:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "5368:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5388:5:6",
																		"nodeType": "YulLeave",
																		"src": "5388:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5213:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5213:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5219:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5219:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5210:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5210:2:6"
																				},
																				"nativeSrc": "5210:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5210:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5227:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "5227:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5237:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5237:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5224:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5224:2:6"
																				},
																				"nativeSrc": "5224:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5224:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:6"
																		},
																		"nativeSrc": "5206:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5250:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5250:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5256:3:6",
																						"nodeType": "YulLiteral",
																						"src": "5256:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5247:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5247:2:6"
																				},
																				"nativeSrc": "5247:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5247:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5265:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "5265:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5275:2:6",
																						"nodeType": "YulLiteral",
																						"src": "5275:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5262:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5262:2:6"
																				},
																				"nativeSrc": "5262:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5262:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5243:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:6"
																		},
																		"nativeSrc": "5243:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5243:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5203:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:6"
																},
																"nativeSrc": "5203:77:6",
																"nodeType": "YulFunctionCall",
																"src": "5203:77:6"
															},
															"nativeSrc": "5200:203:6",
															"nodeType": "YulIf",
															"src": "5200:203:6"
														},
														{
															"nativeSrc": "5412:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5412:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5454:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5460:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5460:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5474:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5474:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5470:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:6"
																		},
																		"nativeSrc": "5470:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5435:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:18:6"
																},
																"nativeSrc": "5435:42:6",
																"nodeType": "YulFunctionCall",
																"src": "5435:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5416:7:6",
																	"nodeType": "YulTypedName",
																	"src": "5416:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5425:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5425:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5522:22:6",
																"nodeType": "YulBlock",
																"src": "5522:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5524:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5524:16:6"
																			},
																			"nativeSrc": "5524:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5524:18:6"
																		},
																		"nativeSrc": "5524:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5524:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5492:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5492:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5509:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5509:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5505:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5505:3:6"
																				},
																				"nativeSrc": "5505:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5505:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5513:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5513:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5501:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5501:3:6"
																		},
																		"nativeSrc": "5501:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5501:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5489:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5489:2:6"
																},
																"nativeSrc": "5489:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5489:32:6"
															},
															"nativeSrc": "5486:58:6",
															"nodeType": "YulIf",
															"src": "5486:58:6"
														},
														{
															"nativeSrc": "5553:29:6",
															"nodeType": "YulAssignment",
															"src": "5553:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5566:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5566:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5575:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5575:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5562:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:6"
																},
																"nativeSrc": "5562:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5562:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5553:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5553:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4686:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4716:4:6",
														"nodeType": "YulTypedName",
														"src": "4716:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4722:8:6",
														"nodeType": "YulTypedName",
														"src": "4722:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4735:5:6",
														"nodeType": "YulTypedName",
														"src": "4735:5:6",
														"type": ""
													}
												],
												"src": "4686:902:6"
											},
											{
												"body": {
													"nativeSrc": "5661:72:6",
													"nodeType": "YulBlock",
													"src": "5661:72:6",
													"statements": [
														{
															"nativeSrc": "5671:56:6",
															"nodeType": "YulAssignment",
															"src": "5671:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5701:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5701:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5711:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:8:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5721:4:6",
																				"nodeType": "YulLiteral",
																				"src": "5721:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5707:3:6"
																		},
																		"nativeSrc": "5707:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5707:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5680:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "5680:20:6"
																},
																"nativeSrc": "5680:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5680:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5671:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5671:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "5593:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5632:4:6",
														"nodeType": "YulTypedName",
														"src": "5632:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5638:8:6",
														"nodeType": "YulTypedName",
														"src": "5638:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5651:5:6",
														"nodeType": "YulTypedName",
														"src": "5651:5:6",
														"type": ""
													}
												],
												"src": "5593:140:6"
											},
											{
												"body": {
													"nativeSrc": "5790:116:6",
													"nodeType": "YulBlock",
													"src": "5790:116:6",
													"statements": [
														{
															"nativeSrc": "5800:20:6",
															"nodeType": "YulAssignment",
															"src": "5800:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5815:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5815:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5818:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5818:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5811:3:6"
																},
																"nativeSrc": "5811:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5811:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5800:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5800:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5878:22:6",
																"nodeType": "YulBlock",
																"src": "5878:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5880:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5880:16:6"
																			},
																			"nativeSrc": "5880:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5880:18:6"
																		},
																		"nativeSrc": "5880:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5880:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5849:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5849:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5842:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5842:6:6"
																				},
																				"nativeSrc": "5842:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5842:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5856:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5856:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5863:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "5863:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5872:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "5872:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5859:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5859:3:6"
																						},
																						"nativeSrc": "5859:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5859:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5853:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5853:2:6"
																				},
																				"nativeSrc": "5853:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5853:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5839:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5839:2:6"
																		},
																		"nativeSrc": "5839:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5839:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:6"
																},
																"nativeSrc": "5832:45:6",
																"nodeType": "YulFunctionCall",
																"src": "5832:45:6"
															},
															"nativeSrc": "5829:71:6",
															"nodeType": "YulIf",
															"src": "5829:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5738:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5769:1:6",
														"nodeType": "YulTypedName",
														"src": "5769:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5772:1:6",
														"nodeType": "YulTypedName",
														"src": "5772:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5778:7:6",
														"nodeType": "YulTypedName",
														"src": "5778:7:6",
														"type": ""
													}
												],
												"src": "5738:168:6"
											},
											{
												"body": {
													"nativeSrc": "6012:102:6",
													"nodeType": "YulBlock",
													"src": "6012:102:6",
													"statements": [
														{
															"nativeSrc": "6022:26:6",
															"nodeType": "YulAssignment",
															"src": "6022:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6034:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6034:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6045:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6045:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6030:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:6"
																},
																"nativeSrc": "6030:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6030:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6022:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6064:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6064:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6079:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6079:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6095:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6095:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6100:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6100:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6091:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6091:3:6"
																						},
																						"nativeSrc": "6091:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6091:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6104:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6104:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6087:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6087:3:6"
																				},
																				"nativeSrc": "6087:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6087:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6075:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:6"
																		},
																		"nativeSrc": "6075:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6075:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6057:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:6"
																},
																"nativeSrc": "6057:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6057:51:6"
															},
															"nativeSrc": "6057:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6057:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5911:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5981:9:6",
														"nodeType": "YulTypedName",
														"src": "5981:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5992:6:6",
														"nodeType": "YulTypedName",
														"src": "5992:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6003:4:6",
														"nodeType": "YulTypedName",
														"src": "6003:4:6",
														"type": ""
													}
												],
												"src": "5911:203:6"
											},
											{
												"body": {
													"nativeSrc": "6167:77:6",
													"nodeType": "YulBlock",
													"src": "6167:77:6",
													"statements": [
														{
															"nativeSrc": "6177:16:6",
															"nodeType": "YulAssignment",
															"src": "6177:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6188:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6188:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6191:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6191:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6184:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6184:3:6"
																},
																"nativeSrc": "6184:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6184:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6216:22:6",
																"nodeType": "YulBlock",
																"src": "6216:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6218:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6218:16:6"
																			},
																			"nativeSrc": "6218:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6218:18:6"
																		},
																		"nativeSrc": "6218:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6218:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6208:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6208:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6211:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6211:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6205:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6205:2:6"
																},
																"nativeSrc": "6205:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6205:10:6"
															},
															"nativeSrc": "6202:36:6",
															"nodeType": "YulIf",
															"src": "6202:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6119:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6150:1:6",
														"nodeType": "YulTypedName",
														"src": "6150:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6153:1:6",
														"nodeType": "YulTypedName",
														"src": "6153:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6159:3:6",
														"nodeType": "YulTypedName",
														"src": "6159:3:6",
														"type": ""
													}
												],
												"src": "6119:125:6"
											},
											{
												"body": {
													"nativeSrc": "6406:188:6",
													"nodeType": "YulBlock",
													"src": "6406:188:6",
													"statements": [
														{
															"nativeSrc": "6416:26:6",
															"nodeType": "YulAssignment",
															"src": "6416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6428:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6428:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6439:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6439:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6424:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:6"
																},
																"nativeSrc": "6424:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6458:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6458:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6473:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6473:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6489:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6489:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6494:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6494:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6485:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6485:3:6"
																						},
																						"nativeSrc": "6485:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6485:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6498:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6481:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6481:3:6"
																				},
																				"nativeSrc": "6481:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6481:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6469:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:6"
																		},
																		"nativeSrc": "6469:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6469:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6451:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:6"
																},
																"nativeSrc": "6451:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6451:51:6"
															},
															"nativeSrc": "6451:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6451:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6533:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6518:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:6"
																		},
																		"nativeSrc": "6518:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6538:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6538:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6511:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:6"
																},
																"nativeSrc": "6511:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6511:34:6"
															},
															"nativeSrc": "6511:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6511:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6565:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6576:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6576:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6561:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:6"
																		},
																		"nativeSrc": "6561:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6581:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6581:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6554:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:6"
																},
																"nativeSrc": "6554:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6554:34:6"
															},
															"nativeSrc": "6554:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6554:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6249:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6359:9:6",
														"nodeType": "YulTypedName",
														"src": "6359:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6370:6:6",
														"nodeType": "YulTypedName",
														"src": "6370:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6378:6:6",
														"nodeType": "YulTypedName",
														"src": "6378:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6386:6:6",
														"nodeType": "YulTypedName",
														"src": "6386:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6397:4:6",
														"nodeType": "YulTypedName",
														"src": "6397:4:6",
														"type": ""
													}
												],
												"src": "6249:345:6"
											},
											{
												"body": {
													"nativeSrc": "6700:76:6",
													"nodeType": "YulBlock",
													"src": "6700:76:6",
													"statements": [
														{
															"nativeSrc": "6710:26:6",
															"nodeType": "YulAssignment",
															"src": "6710:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6722:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6722:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6733:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6718:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6718:3:6"
																},
																"nativeSrc": "6718:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6718:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6710:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6710:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6752:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6752:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6763:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6763:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6745:6:6"
																},
																"nativeSrc": "6745:25:6",
																"nodeType": "YulFunctionCall",
																"src": "6745:25:6"
															},
															"nativeSrc": "6745:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "6745:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6599:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6669:9:6",
														"nodeType": "YulTypedName",
														"src": "6669:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6680:6:6",
														"nodeType": "YulTypedName",
														"src": "6680:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6691:4:6",
														"nodeType": "YulTypedName",
														"src": "6691:4:6",
														"type": ""
													}
												],
												"src": "6599:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610c7a380380610c7a83398101604081905261002e91610286565b8383600361003c8382610397565b5060046100498282610397565b5050506100788161005e61008160201b60201c565b61006990600a61054a565b610073908561055f565b610086565b50505050610589565b601290565b6001600160a01b0382166100b45760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6100bf5f83836100c3565b5050565b6001600160a01b0383166100ed578060025f8282546100e29190610576565b9091555061015d9050565b6001600160a01b0383165f908152602081905260409020548181101561013f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ab565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661017957600280548290039055610197565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101dc91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261020c575f5ffd5b81516001600160401b03811115610225576102256101e9565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610253576102536101e9565b60405281815283820160200185101561026a575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610299575f5ffd5b84516001600160401b038111156102ae575f5ffd5b6102ba878288016101fd565b602087015190955090506001600160401b038111156102d7575f5ffd5b6102e3878288016101fd565b60408701516060880151919550935090506001600160a01b0381168114610308575f5ffd5b939692955090935050565b600181811c9082168061032757607f821691505b60208210810361034557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561039257805f5260205f20601f840160051c810160208510156103705750805b601f840160051c820191505b8181101561038f575f815560010161037c565b50505b505050565b81516001600160401b038111156103b0576103b06101e9565b6103c4816103be8454610313565b8461034b565b6020601f8211600181146103f6575f83156103df5750848201515b5f19600385901b1c1916600184901b17845561038f565b5f84815260208120601f198516915b828110156104255787850151825560209485019460019092019101610405565b508482101561044257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156104a05780850481111561048457610484610451565b600184161561049257908102905b60019390931c928002610469565b935093915050565b5f826104b657506001610544565b816104c257505f610544565b81600181146104d857600281146104e2576104fe565b6001915050610544565b60ff8411156104f3576104f3610451565b50506001821b610544565b5060208310610133831016604e8410600b8410161715610521575081810a610544565b61052d5f198484610465565b805f190482111561054057610540610451565b0290505b92915050565b5f61055860ff8416836104a8565b9392505050565b808202811582820484141761054457610544610451565b8082018082111561054457610544610451565b6106e4806105965f395ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f5ffd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f5ffd5b61009c610184565b6040516100a99190610554565b60405180910390f35b6100c56100c03660046105a4565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105cc565b61022d565b604051601281526020016100a9565b6100d9610117366004610606565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105a4565b61025f565b6100d961015a366004610626565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461019390610657565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610657565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102ff565b506001949350505050565b60606004805461019390610657565b5f336102218185856102ff565b610279838383600161035c565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156102f957818110156102eb57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f984848484035f61035c565b50505050565b6001600160a01b03831661032857604051634b637e8f60e11b81525f60048201526024016102e2565b6001600160a01b0382166103515760405163ec442f0560e01b81525f60048201526024016102e2565b61027983838361042e565b6001600160a01b0384166103855760405163e602df0560e01b81525f60048201526024016102e2565b6001600160a01b0383166103ae57604051634a1406b160e11b81525f60048201526024016102e2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042091815260200190565b60405180910390a350505050565b6001600160a01b038316610458578060025f82825461044d919061068f565b909155506104c89050565b6001600160a01b0383165f90815260208190526040902054818110156104aa5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e457600280548290039055610502565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054791815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461059f575f5ffd5b919050565b5f5f604083850312156105b5575f5ffd5b6105be83610589565b946020939093013593505050565b5f5f5f606084860312156105de575f5ffd5b6105e784610589565b92506105f560208501610589565b929592945050506040919091013590565b5f60208284031215610616575f5ffd5b61061f82610589565b9392505050565b5f5f60408385031215610637575f5ffd5b61064083610589565b915061064e60208401610589565b90509250929050565b600181811c9082168061066b57607f821691505b60208210810361068957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC7A CODESIZE SUB DUP1 PUSH2 0xC7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x286 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x397 JUMP JUMPDEST POP POP POP PUSH2 0x78 DUP2 PUSH2 0x5E PUSH2 0x81 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x69 SWAP1 PUSH1 0xA PUSH2 0x54A JUMP JUMPDEST PUSH2 0x73 SWAP1 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST POP POP POP POP PUSH2 0x589 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF PUSH0 DUP4 DUP4 PUSH2 0xC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x179 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x197 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x225 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x253 JUMPI PUSH2 0x253 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2BA DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2E3 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x308 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x327 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x345 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x392 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x370 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x3BE DUP5 SLOAD PUSH2 0x313 JUMP JUMPDEST DUP5 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3DF JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x38F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x442 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4A0 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x492 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x469 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4B6 JUMPI POP PUSH1 0x1 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH2 0x4C2 JUMPI POP PUSH0 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4E2 JUMPI PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x544 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F3 PUSH2 0x451 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x544 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x521 JUMPI POP DUP2 DUP2 EXP PUSH2 0x544 JUMP JUMPDEST PUSH2 0x52D PUSH0 NOT DUP5 DUP5 PUSH2 0x465 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x540 JUMPI PUSH2 0x540 PUSH2 0x451 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x558 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x6E4 DUP1 PUSH2 0x596 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x458 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5BE DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E7 DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F5 PUSH1 0x20 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x640 DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP PUSH2 0x64E PUSH1 0x20 DUP5 ADD PUSH2 0x589 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x66B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x689 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BASEFEE DUP10 0xDE PUSH1 0xD5 0x4C EQ PUSH23 0x29951E9B4E19EB6AA3E6772C1A1B845B7A1DFD6A951D86 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "702:218:5:-:0;;;738:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;838:4;844:6;1648:5:1;:13;838:4:5;1648:5:1;:13;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;;1582:113;;868:41:5::1;874:5;897:10;:8;;;:10;;:::i;:::-;891:16;::::0;:2:::1;:16;:::i;:::-;881:27;::::0;:6;:27:::1;:::i;:::-;868:5;:41::i;:::-;738:179:::0;;;;702:218;;2688:82:1;2761:2;;2688:82::o;7362:208::-;-1:-1:-1;;;;;7432:21:1;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:1;;7505:1;7476:32;;;6057:51:6;6030:18;;7476:32:1;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:1;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:1;;-1:-1:-1;5997:540:1;;-1:-1:-1;;;;;6211:15:1;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:1;;-1:-1:-1;;;;;6469:32:6;;6290:50:1;;;6451:51:6;6518:18;;;6511:34;;;6561:18;;;6554:34;;;6424:18;;6290:50:1;6249:345:6;6240:115:1;-1:-1:-1;;;;;6475:15:1;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:1;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:1;6996:4;-1:-1:-1;;;;;6987:25:1;;7006:5;6987:25;;;;6745::6;;6733:2;6718:18;;6599:177;6987:25:1;;;;;;;;5912:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:6;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:6;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:6;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:6;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:6:o;874:786::-;991:6;999;1007;1015;1068:3;1056:9;1047:7;1043:23;1039:33;1036:53;;;1085:1;1082;1075:12;1036:53;1112:16;;-1:-1:-1;;;;;1140:30:6;;1137:50;;;1183:1;1180;1173:12;1137:50;1206:61;1259:7;1250:6;1239:9;1235:22;1206:61;:::i;:::-;1313:2;1298:18;;1292:25;1196:71;;-1:-1:-1;1292:25:6;-1:-1:-1;;;;;;1329:32:6;;1326:52;;;1374:1;1371;1364:12;1326:52;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1500:2;1485:18;;1479:25;1547:2;1532:18;;1526:25;1387:73;;-1:-1:-1;1479:25:6;-1:-1:-1;1526:25:6;-1:-1:-1;;;;;;1580:31:6;;1570:42;;1560:70;;1626:1;1623;1616:12;1560:70;874:786;;;;-1:-1:-1;874:786:6;;-1:-1:-1;;874:786:6:o;1665:380::-;1744:1;1740:12;;;;1787;;;1808:61;;1862:4;1854:6;1850:17;1840:27;;1808:61;1915:2;1907:6;1904:14;1884:18;1881:38;1878:161;;1961:10;1956:3;1952:20;1949:1;1942:31;1996:4;1993:1;1986:15;2024:4;2021:1;2014:15;1878:161;;1665:380;;;:::o;2176:518::-;2278:2;2273:3;2270:11;2267:421;;;2314:5;2311:1;2304:16;2358:4;2355:1;2345:18;2428:2;2416:10;2412:19;2409:1;2405:27;2399:4;2395:38;2464:4;2452:10;2449:20;2446:47;;;-1:-1:-1;2487:4:6;2446:47;2542:2;2537:3;2533:12;2530:1;2526:20;2520:4;2516:31;2506:41;;2597:81;2615:2;2608:5;2605:13;2597:81;;;2674:1;2660:16;;2641:1;2630:13;2597:81;;;2601:3;;2267:421;2176:518;;;:::o;2870:1299::-;2990:10;;-1:-1:-1;;;;;3012:30:6;;3009:56;;;3045:18;;:::i;:::-;3074:97;3164:6;3124:38;3156:4;3150:11;3124:38;:::i;:::-;3118:4;3074:97;:::i;:::-;3220:4;3251:2;3240:14;;3268:1;3263:649;;;;3956:1;3973:6;3970:89;;;-1:-1:-1;4025:19:6;;;4019:26;3970:89;-1:-1:-1;;2827:1:6;2823:11;;;2819:24;2815:29;2805:40;2851:1;2847:11;;;2802:57;4072:81;;3233:930;;3263:649;2123:1;2116:14;;;2160:4;2147:18;;-1:-1:-1;;3299:20:6;;;3417:222;3431:7;3428:1;3425:14;3417:222;;;3513:19;;;3507:26;3492:42;;3620:4;3605:20;;;;3573:1;3561:14;;;;3447:12;3417:222;;;3421:3;3667:6;3658:7;3655:19;3652:201;;;3728:19;;;3722:26;-1:-1:-1;;3811:1:6;3807:14;;;3823:3;3803:24;3799:37;3795:42;3780:58;3765:74;;3652:201;-1:-1:-1;;;;3899:1:6;3883:14;;;3879:22;3866:36;;-1:-1:-1;2870:1299:6:o;4174:127::-;4235:10;4230:3;4226:20;4223:1;4216:31;4266:4;4263:1;4256:15;4290:4;4287:1;4280:15;4306:375;4394:1;4412:5;4426:249;4447:1;4437:8;4434:15;4426:249;;;4497:4;4492:3;4488:14;4482:4;4479:24;4476:50;;;4506:18;;:::i;:::-;4556:1;4546:8;4542:16;4539:49;;;4570:16;;;;4539:49;4653:1;4649:16;;;;;4609:15;;4426:249;;;4306:375;;;;;;:::o;4686:902::-;4735:5;4765:8;4755:80;;-1:-1:-1;4806:1:6;4820:5;;4755:80;4854:4;4844:76;;-1:-1:-1;4891:1:6;4905:5;;4844:76;4936:4;4954:1;4949:59;;;;5022:1;5017:174;;;;4929:262;;4949:59;4979:1;4970:10;;4993:5;;;5017:174;5054:3;5044:8;5041:17;5038:43;;;5061:18;;:::i;:::-;-1:-1:-1;;5117:1:6;5103:16;;5176:5;;4929:262;;5275:2;5265:8;5262:16;5256:3;5250:4;5247:13;5243:36;5237:2;5227:8;5224:16;5219:2;5213:4;5210:12;5206:35;5203:77;5200:203;;;-1:-1:-1;5312:19:6;;;5388:5;;5200:203;5435:42;-1:-1:-1;;5460:8:6;5454:4;5435:42;:::i;:::-;5513:6;5509:1;5505:6;5501:19;5492:7;5489:32;5486:58;;;5524:18;;:::i;:::-;5562:20;;-1:-1:-1;4686:902:6;;;;;:::o;5593:140::-;5651:5;5680:47;5721:4;5711:8;5707:19;5701:4;5680:47;:::i;:::-;5671:56;5593:140;-1:-1:-1;;;5593:140:6:o;5738:168::-;5811:9;;;5842;;5859:15;;;5853:22;;5839:37;5829:71;;5880:18;;:::i;6119:125::-;6184:9;;;6205:10;;;6202:36;;;6218:18;;:::i;6599:177::-;702:218:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 620,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 860,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 638,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 767,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1070,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 532,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 388,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 592,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 557,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 607,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:6",
										"nodeType": "YulBlock",
										"src": "0:3485:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:6",
													"nodeType": "YulBlock",
													"src": "135:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:6"
																		},
																		"nativeSrc": "260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:6"
																		},
																		"nativeSrc": "280:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:6"
																},
																"nativeSrc": "254:50:6",
																"nodeType": "YulFunctionCall",
																"src": "254:50:6"
															},
															"nativeSrc": "254:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:6"
																				},
																				"nativeSrc": "324:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:6",
																				"nodeType": "YulLiteral",
																				"src": "348:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:6"
																		},
																		"nativeSrc": "320:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:6"
																},
																"nativeSrc": "313:42:6",
																"nodeType": "YulFunctionCall",
																"src": "313:42:6"
															},
															"nativeSrc": "313:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:6"
														},
														{
															"nativeSrc": "364:62:6",
															"nodeType": "YulAssignment",
															"src": "364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:6"
																						},
																						"nativeSrc": "395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:6",
																								"nodeType": "YulLiteral",
																								"src": "416:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:6"
																						},
																						"nativeSrc": "412:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nativeSrc": "391:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:6"
																		},
																		"nativeSrc": "376:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "423:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:6"
																},
																"nativeSrc": "372:54:6",
																"nodeType": "YulFunctionCall",
																"src": "372:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:418:6"
											},
											{
												"body": {
													"nativeSrc": "486:124:6",
													"nodeType": "YulBlock",
													"src": "486:124:6",
													"statements": [
														{
															"nativeSrc": "496:29:6",
															"nodeType": "YulAssignment",
															"src": "496:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:6"
																},
																"nativeSrc": "505:20:6",
																"nodeType": "YulFunctionCall",
																"src": "505:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:6",
																"nodeType": "YulBlock",
																"src": "588:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "597:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "600:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:6"
																			},
																			"nativeSrc": "590:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:6"
																		},
																		"nativeSrc": "590:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:6",
																										"nodeType": "YulLiteral",
																										"src": "573:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:6",
																										"nodeType": "YulLiteral",
																										"src": "578:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:6"
																								},
																								"nativeSrc": "569:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:6",
																								"nodeType": "YulLiteral",
																								"src": "582:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:6"
																						},
																						"nativeSrc": "565:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:6"
																				},
																				"nativeSrc": "554:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:6"
																		},
																		"nativeSrc": "544:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:6"
																},
																"nativeSrc": "537:50:6",
																"nodeType": "YulFunctionCall",
																"src": "537:50:6"
															},
															"nativeSrc": "534:70:6",
															"nodeType": "YulIf",
															"src": "534:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:6",
														"nodeType": "YulTypedName",
														"src": "465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:6",
														"nodeType": "YulTypedName",
														"src": "476:5:6",
														"type": ""
													}
												],
												"src": "437:173:6"
											},
											{
												"body": {
													"nativeSrc": "702:213:6",
													"nodeType": "YulBlock",
													"src": "702:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:6",
																"nodeType": "YulBlock",
																"src": "748:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:6",
																					"nodeType": "YulLiteral",
																					"src": "757:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:6",
																					"nodeType": "YulLiteral",
																					"src": "760:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:6"
																			},
																			"nativeSrc": "750:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:6"
																		},
																		"nativeSrc": "750:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:6"
																		},
																		"nativeSrc": "719:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "744:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:6"
																},
																"nativeSrc": "715:32:6",
																"nodeType": "YulFunctionCall",
																"src": "715:32:6"
															},
															"nativeSrc": "712:52:6",
															"nodeType": "YulIf",
															"src": "712:52:6"
														},
														{
															"nativeSrc": "773:39:6",
															"nodeType": "YulAssignment",
															"src": "773:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:6"
																},
																"nativeSrc": "783:29:6",
																"nodeType": "YulFunctionCall",
																"src": "783:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																}
															]
														},
														{
															"nativeSrc": "821:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:6",
																"nodeType": "YulLiteral",
																"src": "834:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:6",
																	"nodeType": "YulTypedName",
																	"src": "825:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:6",
															"nodeType": "YulAssignment",
															"src": "844:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:6",
																				"nodeType": "YulLiteral",
																				"src": "881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:6"
																		},
																		"nativeSrc": "866:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:6"
																},
																"nativeSrc": "853:32:6",
																"nodeType": "YulFunctionCall",
																"src": "853:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:6"
																}
															]
														},
														{
															"nativeSrc": "894:15:6",
															"nodeType": "YulAssignment",
															"src": "894:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:6",
																"nodeType": "YulIdentifier",
																"src": "904:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:6",
														"nodeType": "YulTypedName",
														"src": "660:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:6",
														"nodeType": "YulTypedName",
														"src": "671:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:6",
														"nodeType": "YulTypedName",
														"src": "683:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:6",
														"nodeType": "YulTypedName",
														"src": "691:6:6",
														"type": ""
													}
												],
												"src": "615:300:6"
											},
											{
												"body": {
													"nativeSrc": "1015:92:6",
													"nodeType": "YulBlock",
													"src": "1015:92:6",
													"statements": [
														{
															"nativeSrc": "1025:26:6",
															"nodeType": "YulAssignment",
															"src": "1025:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:6"
																},
																"nativeSrc": "1033:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:6"
																				},
																				"nativeSrc": "1085:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:6"
																		},
																		"nativeSrc": "1078:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:6"
																},
																"nativeSrc": "1060:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:6"
															},
															"nativeSrc": "1060:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:6",
														"nodeType": "YulTypedName",
														"src": "984:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:6",
														"nodeType": "YulTypedName",
														"src": "995:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:6",
														"nodeType": "YulTypedName",
														"src": "1006:4:6",
														"type": ""
													}
												],
												"src": "920:187:6"
											},
											{
												"body": {
													"nativeSrc": "1213:76:6",
													"nodeType": "YulBlock",
													"src": "1213:76:6",
													"statements": [
														{
															"nativeSrc": "1223:26:6",
															"nodeType": "YulAssignment",
															"src": "1223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:6"
																},
																"nativeSrc": "1231:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:6"
																},
																"nativeSrc": "1258:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:6"
															},
															"nativeSrc": "1258:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:6",
														"nodeType": "YulTypedName",
														"src": "1182:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:6",
														"nodeType": "YulTypedName",
														"src": "1193:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:6",
														"nodeType": "YulTypedName",
														"src": "1204:4:6",
														"type": ""
													}
												],
												"src": "1112:177:6"
											},
											{
												"body": {
													"nativeSrc": "1398:270:6",
													"nodeType": "YulBlock",
													"src": "1398:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:6",
																"nodeType": "YulBlock",
																"src": "1444:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:6"
																			},
																			"nativeSrc": "1446:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:6"
																		},
																		"nativeSrc": "1446:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:6"
																		},
																		"nativeSrc": "1415:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:6"
																},
																"nativeSrc": "1411:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:6"
															},
															"nativeSrc": "1408:52:6",
															"nodeType": "YulIf",
															"src": "1408:52:6"
														},
														{
															"nativeSrc": "1469:39:6",
															"nodeType": "YulAssignment",
															"src": "1469:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:6"
																},
																"nativeSrc": "1479:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:6"
																}
															]
														},
														{
															"nativeSrc": "1517:48:6",
															"nodeType": "YulAssignment",
															"src": "1517:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:6"
																		},
																		"nativeSrc": "1546:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:6"
																},
																"nativeSrc": "1527:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:6"
																}
															]
														},
														{
															"nativeSrc": "1574:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:6",
																"nodeType": "YulLiteral",
																"src": "1587:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:6",
															"nodeType": "YulAssignment",
															"src": "1597:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:6"
																		},
																		"nativeSrc": "1619:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:6"
																},
																"nativeSrc": "1606:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:6"
																}
															]
														},
														{
															"nativeSrc": "1647:15:6",
															"nodeType": "YulAssignment",
															"src": "1647:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:6",
																"nodeType": "YulIdentifier",
																"src": "1657:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:6",
														"nodeType": "YulTypedName",
														"src": "1348:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:6",
														"nodeType": "YulTypedName",
														"src": "1359:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:6",
														"nodeType": "YulTypedName",
														"src": "1371:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:6",
														"nodeType": "YulTypedName",
														"src": "1379:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:6",
														"nodeType": "YulTypedName",
														"src": "1387:6:6",
														"type": ""
													}
												],
												"src": "1294:374:6"
											},
											{
												"body": {
													"nativeSrc": "1770:87:6",
													"nodeType": "YulBlock",
													"src": "1770:87:6",
													"statements": [
														{
															"nativeSrc": "1780:26:6",
															"nodeType": "YulAssignment",
															"src": "1780:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:6"
																},
																"nativeSrc": "1788:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:6"
																		},
																		"nativeSrc": "1833:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:6"
																},
																"nativeSrc": "1815:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:6"
															},
															"nativeSrc": "1815:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:6",
														"nodeType": "YulTypedName",
														"src": "1739:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:6",
														"nodeType": "YulTypedName",
														"src": "1750:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:6",
														"nodeType": "YulTypedName",
														"src": "1761:4:6",
														"type": ""
													}
												],
												"src": "1673:184:6"
											},
											{
												"body": {
													"nativeSrc": "1932:116:6",
													"nodeType": "YulBlock",
													"src": "1932:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:6",
																"nodeType": "YulBlock",
																"src": "1978:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:6"
																			},
																			"nativeSrc": "1980:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:6"
																		},
																		"nativeSrc": "1980:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:6"
																		},
																		"nativeSrc": "1949:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:6"
																},
																"nativeSrc": "1945:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:6"
															},
															"nativeSrc": "1942:52:6",
															"nodeType": "YulIf",
															"src": "1942:52:6"
														},
														{
															"nativeSrc": "2003:39:6",
															"nodeType": "YulAssignment",
															"src": "2003:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:6"
																},
																"nativeSrc": "2013:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:6",
														"nodeType": "YulTypedName",
														"src": "1898:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:6",
														"nodeType": "YulTypedName",
														"src": "1909:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:6",
														"nodeType": "YulTypedName",
														"src": "1921:6:6",
														"type": ""
													}
												],
												"src": "1862:186:6"
											},
											{
												"body": {
													"nativeSrc": "2140:173:6",
													"nodeType": "YulBlock",
													"src": "2140:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:6",
																"nodeType": "YulBlock",
																"src": "2186:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:6"
																			},
																			"nativeSrc": "2188:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:6"
																		},
																		"nativeSrc": "2188:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:6"
																		},
																		"nativeSrc": "2157:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:6"
																},
																"nativeSrc": "2153:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:6"
															},
															"nativeSrc": "2150:52:6",
															"nodeType": "YulIf",
															"src": "2150:52:6"
														},
														{
															"nativeSrc": "2211:39:6",
															"nodeType": "YulAssignment",
															"src": "2211:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:6"
																},
																"nativeSrc": "2221:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:6"
																}
															]
														},
														{
															"nativeSrc": "2259:48:6",
															"nodeType": "YulAssignment",
															"src": "2259:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:6"
																		},
																		"nativeSrc": "2288:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:6"
																},
																"nativeSrc": "2269:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:6",
														"nodeType": "YulTypedName",
														"src": "2098:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:6",
														"nodeType": "YulTypedName",
														"src": "2109:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:6",
														"nodeType": "YulTypedName",
														"src": "2121:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:6",
														"nodeType": "YulTypedName",
														"src": "2129:6:6",
														"type": ""
													}
												],
												"src": "2053:260:6"
											},
											{
												"body": {
													"nativeSrc": "2373:325:6",
													"nodeType": "YulBlock",
													"src": "2373:325:6",
													"statements": [
														{
															"nativeSrc": "2383:22:6",
															"nodeType": "YulAssignment",
															"src": "2383:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:6"
																},
																"nativeSrc": "2393:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:6"
																}
															]
														},
														{
															"nativeSrc": "2414:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:6"
																},
																"nativeSrc": "2440:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:6",
																"nodeType": "YulBlock",
																"src": "2491:31:6",
																"statements": [
																	{
																		"nativeSrc": "2493:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:6"
																			},
																			"nativeSrc": "2503:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:6"
																},
																"nativeSrc": "2464:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:6"
															},
															"nativeSrc": "2461:61:6",
															"nodeType": "YulIf",
															"src": "2461:61:6"
														},
														{
															"body": {
																"nativeSrc": "2581:111:6",
																"nodeType": "YulBlock",
																"src": "2581:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:6"
																					},
																					"nativeSrc": "2605:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:6"
																			},
																			"nativeSrc": "2595:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:6"
																		},
																		"nativeSrc": "2595:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:6"
																			},
																			"nativeSrc": "2639:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:6"
																		},
																		"nativeSrc": "2639:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:6"
																			},
																			"nativeSrc": "2667:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:6"
																		},
																		"nativeSrc": "2667:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:6"
																		},
																		"nativeSrc": "2557:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:6"
																},
																"nativeSrc": "2534:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:6"
															},
															"nativeSrc": "2531:161:6",
															"nodeType": "YulIf",
															"src": "2531:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:6",
														"nodeType": "YulTypedName",
														"src": "2353:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:6",
														"nodeType": "YulTypedName",
														"src": "2362:6:6",
														"type": ""
													}
												],
												"src": "2318:380:6"
											},
											{
												"body": {
													"nativeSrc": "2860:188:6",
													"nodeType": "YulBlock",
													"src": "2860:188:6",
													"statements": [
														{
															"nativeSrc": "2870:26:6",
															"nodeType": "YulAssignment",
															"src": "2870:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2893:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2893:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2878:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:6"
																},
																"nativeSrc": "2878:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2878:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2870:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2912:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2927:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2943:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2943:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2948:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2948:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2939:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2939:3:6"
																						},
																						"nativeSrc": "2939:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2939:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2952:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2952:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2935:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2935:3:6"
																				},
																				"nativeSrc": "2935:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2935:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2923:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:6"
																		},
																		"nativeSrc": "2923:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2923:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:6"
																},
																"nativeSrc": "2905:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2905:51:6"
															},
															"nativeSrc": "2905:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2905:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2976:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2976:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2987:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2987:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2972:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2972:3:6"
																		},
																		"nativeSrc": "2972:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2972:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2992:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2992:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2965:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2965:6:6"
																},
																"nativeSrc": "2965:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2965:34:6"
															},
															"nativeSrc": "2965:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2965:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3019:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3015:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:6"
																		},
																		"nativeSrc": "3015:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3015:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3035:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3035:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3008:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:6"
																},
																"nativeSrc": "3008:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3008:34:6"
															},
															"nativeSrc": "3008:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3008:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2703:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2813:9:6",
														"nodeType": "YulTypedName",
														"src": "2813:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2824:6:6",
														"nodeType": "YulTypedName",
														"src": "2824:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2832:6:6",
														"nodeType": "YulTypedName",
														"src": "2832:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2840:6:6",
														"nodeType": "YulTypedName",
														"src": "2840:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2851:4:6",
														"nodeType": "YulTypedName",
														"src": "2851:4:6",
														"type": ""
													}
												],
												"src": "2703:345:6"
											},
											{
												"body": {
													"nativeSrc": "3154:102:6",
													"nodeType": "YulBlock",
													"src": "3154:102:6",
													"statements": [
														{
															"nativeSrc": "3164:26:6",
															"nodeType": "YulAssignment",
															"src": "3164:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3176:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3176:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3187:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3187:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3172:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3172:3:6"
																},
																"nativeSrc": "3172:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3172:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3164:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3164:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3206:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3206:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3221:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3237:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3237:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3242:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3242:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3233:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3233:3:6"
																						},
																						"nativeSrc": "3233:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3233:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3246:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3246:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3229:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3229:3:6"
																				},
																				"nativeSrc": "3229:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3229:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3217:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:6"
																		},
																		"nativeSrc": "3217:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3199:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:6"
																},
																"nativeSrc": "3199:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3199:51:6"
															},
															"nativeSrc": "3199:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3199:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3053:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3123:9:6",
														"nodeType": "YulTypedName",
														"src": "3123:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3134:6:6",
														"nodeType": "YulTypedName",
														"src": "3134:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3145:4:6",
														"nodeType": "YulTypedName",
														"src": "3145:4:6",
														"type": ""
													}
												],
												"src": "3053:203:6"
											},
											{
												"body": {
													"nativeSrc": "3309:174:6",
													"nodeType": "YulBlock",
													"src": "3309:174:6",
													"statements": [
														{
															"nativeSrc": "3319:16:6",
															"nodeType": "YulAssignment",
															"src": "3319:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:6"
																},
																"nativeSrc": "3326:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:6",
																"nodeType": "YulBlock",
																"src": "3366:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:6"
																					},
																					"nativeSrc": "3390:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:6"
																			},
																			"nativeSrc": "3380:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:6"
																		},
																		"nativeSrc": "3380:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:6"
																			},
																			"nativeSrc": "3424:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:6"
																		},
																		"nativeSrc": "3424:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:6"
																			},
																			"nativeSrc": "3452:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:6"
																		},
																		"nativeSrc": "3452:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:6"
																},
																"nativeSrc": "3347:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:6"
															},
															"nativeSrc": "3344:133:6",
															"nodeType": "YulIf",
															"src": "3344:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:6",
														"nodeType": "YulTypedName",
														"src": "3292:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:6",
														"nodeType": "YulTypedName",
														"src": "3295:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:6",
														"nodeType": "YulTypedName",
														"src": "3301:3:6",
														"type": ""
													}
												],
												"src": "3261:222:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f5ffd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f5ffd5b61009c610184565b6040516100a99190610554565b60405180910390f35b6100c56100c03660046105a4565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105cc565b61022d565b604051601281526020016100a9565b6100d9610117366004610606565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105a4565b61025f565b6100d961015a366004610626565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461019390610657565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610657565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102ff565b506001949350505050565b60606004805461019390610657565b5f336102218185856102ff565b610279838383600161035c565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156102f957818110156102eb57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f984848484035f61035c565b50505050565b6001600160a01b03831661032857604051634b637e8f60e11b81525f60048201526024016102e2565b6001600160a01b0382166103515760405163ec442f0560e01b81525f60048201526024016102e2565b61027983838361042e565b6001600160a01b0384166103855760405163e602df0560e01b81525f60048201526024016102e2565b6001600160a01b0383166103ae57604051634a1406b160e11b81525f60048201526024016102e2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042091815260200190565b60405180910390a350505050565b6001600160a01b038316610458578060025f82825461044d919061068f565b909155506104c89050565b6001600160a01b0383165f90815260208190526040902054818110156104aa5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e457600280548290039055610502565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054791815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461059f575f5ffd5b919050565b5f5f604083850312156105b5575f5ffd5b6105be83610589565b946020939093013593505050565b5f5f5f606084860312156105de575f5ffd5b6105e784610589565b92506105f560208501610589565b929592945050506040919091013590565b5f60208284031215610616575f5ffd5b61061f82610589565b9392505050565b5f5f60408385031215610637575f5ffd5b61064083610589565b915061064e60208401610589565b90509250929050565b600181811c9082168061066b57607f821691505b60208210810361068957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x458 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5BE DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E7 DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F5 PUSH1 0x20 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x640 DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP PUSH2 0x64E PUSH1 0x20 DUP5 ADD PUSH2 0x589 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x66B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x689 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BASEFEE DUP10 0xDE PUSH1 0xD5 0x4C EQ PUSH23 0x29951E9B4E19EB6AA3E6772C1A1B845B7A1DFD6A951D86 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "702:218:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:6;;1078:22;1060:41;;1048:2;1033:18;3902:186:1;920:187:6;2803:97:1;2881:12;;2803:97;;;1258:25:6;;;1246:2;1231:18;2803:97:1;1112:177:6;4680:244:1;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;1815:36:6;;1803:2;1788:18;2688:82:1;1673:184:6;2933:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:1;2998:7;3024:18;;;;;;;;;;;;2933:116;1962:93;;;:::i;3244:178::-;;;;;;:::i;:::-;;:::i;3455:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:1;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:4;4029:31:1;735:10:4;4045:7:1;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;4680:244::-;4767:4;735:10:4;4823:37:1;4839:4;735:10:4;4854:5:1;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:1;;4680:244;-1:-1:-1;;;;4680:244:1:o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;3244:178::-;3313:4;735:10:4;3367:27:1;735:10:4;3384:2:1;3388:5;3367:9;:27::i;8630:128::-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;-1:-1:-1;;;;;3561:18:1;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:1;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:1;;-1:-1:-1;;;;;2923:32:6;;10591:60:1;;;2905:51:6;2972:18;;;2965:34;;;3015:18;;;3008:34;;;2878:18;;10591:60:1;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:1;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:1;;5448:1;5421:30;;;3199:51:6;3172:18;;5421:30:1;3053:203:6;5376:86:1;-1:-1:-1;;;;;5475:16:1;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:1;;5543:1;5514:32;;;3199:51:6;3172:18;;5514:32:1;3053:203:6;5471:86:1;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;9605:432::-;-1:-1:-1;;;;;9717:19:1;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:1;;9788:1;9759:32;;;3199:51:6;3172:18;;9759:32:1;3053:203:6;9713:89:1;-1:-1:-1;;;;;9815:21:1;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:1;;9887:1;9859:31;;;3199:51:6;3172:18;;9859:31:1;3053:203:6;9811:90:1;-1:-1:-1;;;;;9910:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:1;9998:5;-1:-1:-1;;;;;9989:31:1;;10014:5;9989:31;;;;1258:25:6;;1246:2;1231:18;;1112:177;9989:31:1;;;;;;;;9605:432;;;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:1;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:1;;-1:-1:-1;5997:540:1;;-1:-1:-1;;;;;6211:15:1;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:1;;-1:-1:-1;;;;;2923:32:6;;6290:50:1;;;2905:51:6;2972:18;;;2965:34;;;3015:18;;;3008:34;;;2878:18;;6290:50:1;2703:345:6;6240:115:1;-1:-1:-1;;;;;6475:15:1;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:1;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:1;6996:4;-1:-1:-1;;;;;6987:25:1;;7006:5;6987:25;;;;1258::6;;1246:2;1231:18;;1112:177;6987:25:1;;;;;;;;5912:1107;;;:::o;14:418:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:6;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:6:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:6;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:6:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "352800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24734",
								"balanceOf(address)": "2559",
								"decimals()": "176",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51281",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 738,
									"end": 917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 738,
									"end": 917,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 838,
									"end": 842,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 844,
									"end": 850,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 838,
									"end": 842,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 868,
									"end": 909,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 874,
									"end": 879,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 897,
									"end": 907,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 897,
									"end": 905,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 897,
									"end": 905,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 905,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 897,
									"end": 907,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 907,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 897,
									"end": 907,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 897,
									"end": 907,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 897,
									"end": 907,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 891,
									"end": 907,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 891,
									"end": 907,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 891,
									"end": 893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 891,
									"end": 907,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 891,
									"end": 907,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 891,
									"end": 907,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 891,
									"end": 907,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 881,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 881,
									"end": 908,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 881,
									"end": 887,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 881,
									"end": 908,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 881,
									"end": 908,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 881,
									"end": 908,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 868,
									"end": 873,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 868,
									"end": 909,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 868,
									"end": 909,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 868,
									"end": 909,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 738,
									"end": 917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6057,
									"end": 6108,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6048,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6030,
									"end": 6048,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6469,
									"end": 6501,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6469,
									"end": 6501,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6451,
									"end": 6502,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6536,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6518,
									"end": 6536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6518,
									"end": 6536,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 6545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 6545,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 6545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6561,
									"end": 6579,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6561,
									"end": 6579,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6561,
									"end": 6579,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6554,
									"end": 6588,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6554,
									"end": 6588,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6554,
									"end": 6588,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6424,
									"end": 6442,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6424,
									"end": 6442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6249,
									"end": 6594,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6745,
									"end": 6770,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6745,
									"end": 6770,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6718,
									"end": 6736,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6718,
									"end": 6736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6599,
									"end": 6776,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 991,
									"end": 997,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1005,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 1013,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1021,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1071,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1056,
									"end": 1065,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1054,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1066,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1072,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1089,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1036,
									"end": 1089,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1083,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1075,
									"end": 1087,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1089,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1036,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1128,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1128,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1140,
									"end": 1170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1170,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1187,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1137,
									"end": 1187,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1181,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1185,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1187,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1137,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1259,
									"end": 1266,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1248,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1235,
									"end": 1257,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1206,
									"end": 1267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1206,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1315,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1298,
									"end": 1316,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1316,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1317,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1267,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1292,
									"end": 1317,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1378,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1326,
									"end": 1378,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1378,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1326,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1502,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1485,
									"end": 1503,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1503,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1479,
									"end": 1504,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1549,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1551,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1504,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1526,
									"end": 1551,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1580,
									"end": 1611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1611,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1612,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1560,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1560,
									"end": 1630,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1616,
									"end": 1628,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1560,
									"end": 1630,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1560,
									"end": 1630,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1660,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 874,
									"end": 1660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 2045,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1665,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 1745,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1740,
									"end": 1752,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1752,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1752,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1799,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1799,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1799,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1808,
									"end": 1869,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 1866,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 1867,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1867,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1808,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 1917,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1907,
									"end": 1913,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1918,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1919,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1878,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1878,
									"end": 2039,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1961,
									"end": 1971,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1952,
									"end": 1972,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1950,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1942,
									"end": 1973,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1993,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1986,
									"end": 2001,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2014,
									"end": 2029,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1878,
									"end": 2039,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1878,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1878,
									"end": 2039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 2045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 2045,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 2045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 2045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2694,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2176,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2280,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2270,
									"end": 2281,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2267,
									"end": 2688,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2267,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2267,
									"end": 2688,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2314,
									"end": 2319,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2312,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2304,
									"end": 2320,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2358,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2356,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2363,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2428,
									"end": 2430,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2412,
									"end": 2431,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2405,
									"end": 2432,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2395,
									"end": 2433,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2464,
									"end": 2468,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2452,
									"end": 2462,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2469,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2446,
									"end": 2493,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2446,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2446,
									"end": 2493,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2487,
									"end": 2491,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2446,
									"end": 2493,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2446,
									"end": 2493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2544,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2537,
									"end": 2540,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2533,
									"end": 2545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2530,
									"end": 2531,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2526,
									"end": 2546,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2524,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2547,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2547,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2615,
									"end": 2617,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2613,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2605,
									"end": 2618,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2674,
									"end": 2675,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2660,
									"end": 2676,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2660,
									"end": 2676,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2642,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2630,
									"end": 2643,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2597,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2601,
									"end": 2604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2601,
									"end": 2604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2267,
									"end": 2688,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2267,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 4169,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2870,
									"end": 4169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2990,
									"end": 3000,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2990,
									"end": 3000,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3012,
									"end": 3042,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3012,
									"end": 3042,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3009,
									"end": 3065,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3009,
									"end": 3065,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3009,
									"end": 3065,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3045,
									"end": 3063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3156,
									"end": 3160,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3161,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3124,
									"end": 3162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3162,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3124,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3118,
									"end": 3122,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3074,
									"end": 3171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3171,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3074,
									"end": 3171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3220,
									"end": 3224,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3251,
									"end": 3253,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3240,
									"end": 3254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3240,
									"end": 3254,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3268,
									"end": 3269,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3957,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3973,
									"end": 3979,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3970,
									"end": 4059,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3970,
									"end": 4059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3970,
									"end": 4059,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4025,
									"end": 4044,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4044,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4044,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4019,
									"end": 4045,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3970,
									"end": 4059,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3970,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2827,
									"end": 2828,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2823,
									"end": 2834,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2834,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2834,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2819,
									"end": 2843,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2815,
									"end": 2844,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2805,
									"end": 2845,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2851,
									"end": 2852,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2847,
									"end": 2858,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2847,
									"end": 2858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2847,
									"end": 2858,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2802,
									"end": 2859,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4072,
									"end": 4153,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4072,
									"end": 4153,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3233,
									"end": 4163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3233,
									"end": 4163,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3263,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2116,
									"end": 2130,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2116,
									"end": 2130,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2164,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2147,
									"end": 2165,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2147,
									"end": 2165,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3299,
									"end": 3319,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3319,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3319,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3431,
									"end": 3438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3428,
									"end": 3429,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3439,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3513,
									"end": 3532,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3513,
									"end": 3532,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3513,
									"end": 3532,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3533,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3492,
									"end": 3534,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3492,
									"end": 3534,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3605,
									"end": 3625,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3605,
									"end": 3625,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3605,
									"end": 3625,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3605,
									"end": 3625,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3573,
									"end": 3574,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3561,
									"end": 3575,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3561,
									"end": 3575,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3561,
									"end": 3575,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3561,
									"end": 3575,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3447,
									"end": 3459,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3417,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3658,
									"end": 3665,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3674,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3853,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3652,
									"end": 3853,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 3747,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 3747,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 3747,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3748,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3811,
									"end": 3812,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3807,
									"end": 3821,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3807,
									"end": 3821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3807,
									"end": 3821,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3823,
									"end": 3826,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3803,
									"end": 3827,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3799,
									"end": 3836,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3795,
									"end": 3837,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3838,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3765,
									"end": 3839,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3765,
									"end": 3839,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3853,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3652,
									"end": 3853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3883,
									"end": 3897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3883,
									"end": 3897,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3883,
									"end": 3897,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 3901,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3902,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3902,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2870,
									"end": 4169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4174,
									"end": 4301,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4174,
									"end": 4301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4235,
									"end": 4245,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4230,
									"end": 4233,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4246,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4223,
									"end": 4224,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4216,
									"end": 4247,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4270,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4263,
									"end": 4264,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4256,
									"end": 4271,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4290,
									"end": 4294,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4287,
									"end": 4288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4280,
									"end": 4295,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4394,
									"end": 4395,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4412,
									"end": 4417,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4447,
									"end": 4448,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4437,
									"end": 4445,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4434,
									"end": 4449,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4497,
									"end": 4501,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4492,
									"end": 4495,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4488,
									"end": 4502,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4482,
									"end": 4486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4479,
									"end": 4503,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4526,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4526,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4476,
									"end": 4526,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4506,
									"end": 4524,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4506,
									"end": 4524,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4506,
									"end": 4524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4506,
									"end": 4524,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4506,
									"end": 4524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4546,
									"end": 4554,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4558,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4539,
									"end": 4588,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4539,
									"end": 4588,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4539,
									"end": 4588,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4586,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4586,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4539,
									"end": 4588,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4539,
									"end": 4588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4654,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4649,
									"end": 4665,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4665,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4665,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4665,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4609,
									"end": 4624,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4609,
									"end": 4624,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4426,
									"end": 4675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4735,
									"end": 4740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4765,
									"end": 4773,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4755,
									"end": 4835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4755,
									"end": 4835,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4806,
									"end": 4807,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4820,
									"end": 4825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4820,
									"end": 4825,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4755,
									"end": 4835,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4755,
									"end": 4835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4854,
									"end": 4858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4844,
									"end": 4920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4891,
									"end": 4892,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4905,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4905,
									"end": 4910,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4844,
									"end": 4920,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4844,
									"end": 4920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4936,
									"end": 4940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4955,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5022,
									"end": 5023,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 5191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4929,
									"end": 5191,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4949,
									"end": 5008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4979,
									"end": 4980,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4970,
									"end": 4980,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4980,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4993,
									"end": 4998,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4993,
									"end": 4998,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4993,
									"end": 4998,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5017,
									"end": 5191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5057,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 5044,
									"end": 5052,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5058,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5038,
									"end": 5081,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5038,
									"end": 5081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5038,
									"end": 5081,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5061,
									"end": 5079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5061,
									"end": 5079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5079,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5061,
									"end": 5079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5117,
									"end": 5118,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5103,
									"end": 5119,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5119,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5176,
									"end": 5181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5176,
									"end": 5181,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 5191,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4929,
									"end": 5191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 5191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5275,
									"end": 5277,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5265,
									"end": 5273,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5262,
									"end": 5278,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5256,
									"end": 5259,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5250,
									"end": 5254,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5247,
									"end": 5260,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5243,
									"end": 5279,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5239,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 5227,
									"end": 5235,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5224,
									"end": 5240,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5219,
									"end": 5221,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 5213,
									"end": 5217,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5222,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5206,
									"end": 5241,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5203,
									"end": 5280,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5403,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5403,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5200,
									"end": 5403,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5312,
									"end": 5331,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5312,
									"end": 5331,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5312,
									"end": 5331,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5403,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5200,
									"end": 5403,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5460,
									"end": 5468,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5435,
									"end": 5477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5477,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5435,
									"end": 5477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5513,
									"end": 5519,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5509,
									"end": 5510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5505,
									"end": 5511,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5501,
									"end": 5520,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5492,
									"end": 5499,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 5521,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5486,
									"end": 5544,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5486,
									"end": 5544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5486,
									"end": 5544,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5524,
									"end": 5542,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5524,
									"end": 5542,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5524,
									"end": 5542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5524,
									"end": 5542,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5524,
									"end": 5542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5562,
									"end": 5582,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5562,
									"end": 5582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4686,
									"end": 5588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5593,
									"end": 5733,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 5593,
									"end": 5733,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5651,
									"end": 5656,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5680,
									"end": 5727,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5721,
									"end": 5725,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 5711,
									"end": 5719,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5707,
									"end": 5726,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5705,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5680,
									"end": 5727,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5680,
									"end": 5727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5680,
									"end": 5727,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5680,
									"end": 5727,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5671,
									"end": 5727,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5593,
									"end": 5733,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5593,
									"end": 5733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5738,
									"end": 5906,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 5738,
									"end": 5906,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5811,
									"end": 5820,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5842,
									"end": 5851,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5842,
									"end": 5851,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5859,
									"end": 5874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5859,
									"end": 5874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5859,
									"end": 5874,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5853,
									"end": 5875,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5853,
									"end": 5875,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5839,
									"end": 5876,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5829,
									"end": 5900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5829,
									"end": 5900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5880,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5880,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5880,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6119,
									"end": 6244,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 6119,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6184,
									"end": 6193,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6184,
									"end": 6193,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6184,
									"end": 6193,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6215,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6215,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6238,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 6202,
									"end": 6238,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6218,
									"end": 6236,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 6218,
									"end": 6236,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6218,
									"end": 6236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6599,
									"end": 6776,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6599,
									"end": 6776,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 702,
									"end": 920,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 702,
									"end": 920,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033",
									".code": [
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 920,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2703,
											"end": 3048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MiniTokenFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MiniTokenFactory.sol\":\"ERC20Token\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MiniTokenFactory.sol\":{\"keccak256\":\"0xba19997b8fab6ab6dcf6d00a470e6d348f149558534fc862f2f4d496f21aba25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b6e1524bcd87176708bdca50fdc9c54eefeeceb662507dbde2d22e10568f4f4\",\"dweb:/ipfs/QmRsC4cvDpHGtSz7MWKe5crY3keoYUfbbY2AR3qswUeJfU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "MiniTokenFactory.sol:ERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "MiniTokenFactory.sol:ERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "MiniTokenFactory.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "MiniTokenFactory.sol:ERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "MiniTokenFactory.sol:ERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "TokenCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "createToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deployedTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeployedTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MiniTokenFactory.sol\":120:698  contract TokenFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MiniTokenFactory.sol\":120:698  contract TokenFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b060530\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x622ae7aa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xec81aadb\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"MiniTokenFactory.sol\":282:577  function createToken(string memory name, string memory symbol, uint256 supply) external {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"MiniTokenFactory.sol\":585:695  function getDeployedTokens() external view returns (address[] memory) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MiniTokenFactory.sol\":149:180  address[] public deployedTokens */\n    tag_5:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2571:2603   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2553:2604   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2541:2543   */\n      0x20\n        /* \"#utility.yul\":2526:2544   */\n      add\n        /* \"MiniTokenFactory.sol\":149:180  address[] public deployedTokens */\n      tag_12\n        /* \"#utility.yul\":2407:2610   */\n      jump\n        /* \"MiniTokenFactory.sol\":282:577  function createToken(string memory name, string memory symbol, uint256 supply) external {... */\n    tag_9:\n        /* \"MiniTokenFactory.sol\":381:400  ERC20Token newToken */\n      0x00\n        /* \"MiniTokenFactory.sol\":418:422  name */\n      dup4\n        /* \"MiniTokenFactory.sol\":424:430  symbol */\n      dup4\n        /* \"MiniTokenFactory.sol\":432:438  supply */\n      dup4\n        /* \"MiniTokenFactory.sol\":440:450  msg.sender */\n      caller\n        /* \"MiniTokenFactory.sol\":403:451  new ERC20Token(name, symbol, supply, msg.sender) */\n      mload(0x40)\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"MiniTokenFactory.sol\":462:476  deployedTokens */\n      0x00\n        /* \"MiniTokenFactory.sol\":462:500  deployedTokens.push(address(newToken)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup1\n      mstore\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"MiniTokenFactory.sol\":516:569  TokenCreated(address(newToken), name, symbol, supply) */\n      mload(0x40)\n        /* \"MiniTokenFactory.sol\":462:500  deployedTokens.push(address(newToken)) */\n      swap1\n      swap2\n      pop\n        /* \"MiniTokenFactory.sol\":516:569  TokenCreated(address(newToken), name, symbol, supply) */\n      0x75d1eb2d61d7e210835bc16e78ac4d0e4f905c108a81852a6b68c4d46b4f40f3\n      swap1\n      tag_27\n      swap1\n        /* \"MiniTokenFactory.sol\":462:500  deployedTokens.push(address(newToken)) */\n      dup4\n      swap1\n        /* \"MiniTokenFactory.sol\":548:552  name */\n      dup8\n      swap1\n        /* \"MiniTokenFactory.sol\":554:560  symbol */\n      dup8\n      swap1\n        /* \"MiniTokenFactory.sol\":562:568  supply */\n      dup8\n      swap1\n        /* \"MiniTokenFactory.sol\":516:569  TokenCreated(address(newToken), name, symbol, supply) */\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"MiniTokenFactory.sol\":370:577  {... */\n      pop\n        /* \"MiniTokenFactory.sol\":282:577  function createToken(string memory name, string memory symbol, uint256 supply) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MiniTokenFactory.sol\":585:695  function getDeployedTokens() external view returns (address[] memory) {... */\n    tag_11:\n        /* \"MiniTokenFactory.sol\":637:653  address[] memory */\n      0x60\n        /* \"MiniTokenFactory.sol\":673:687  deployedTokens */\n      0x00\n        /* \"MiniTokenFactory.sol\":666:687  return deployedTokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_31:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_31\n      jumpi\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MiniTokenFactory.sol\":585:695  function getDeployedTokens() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"MiniTokenFactory.sol\":149:180  address[] public deployedTokens */\n    tag_17:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n    tag_22:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_34:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:872   */\n    tag_35:\n        /* \"#utility.yul\":189:194   */\n      0x00\n        /* \"#utility.yul\":242:245   */\n      dup3\n        /* \"#utility.yul\":235:239   */\n      0x1f\n        /* \"#utility.yul\":227:233   */\n      dup4\n        /* \"#utility.yul\":223:240   */\n      add\n        /* \"#utility.yul\":219:246   */\n      slt\n        /* \"#utility.yul\":209:264   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":260:261   */\n      0x00\n        /* \"#utility.yul\":257:258   */\n      0x00\n        /* \"#utility.yul\":250:262   */\n      revert\n        /* \"#utility.yul\":209:264   */\n    tag_40:\n        /* \"#utility.yul\":300:306   */\n      dup2\n        /* \"#utility.yul\":287:307   */\n      calldataload\n        /* \"#utility.yul\":330:348   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":322:328   */\n      dup2\n        /* \"#utility.yul\":319:349   */\n      gt\n        /* \"#utility.yul\":316:372   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":352:370   */\n      tag_42\n      tag_34\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":401:403   */\n      0x40\n        /* \"#utility.yul\":395:404   */\n      mload\n        /* \"#utility.yul\":493:495   */\n      0x1f\n        /* \"#utility.yul\":455:472   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":451:482   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":484:486   */\n      0x3f\n        /* \"#utility.yul\":447:487   */\n      add\n        /* \"#utility.yul\":443:497   */\n      and\n        /* \"#utility.yul\":431:498   */\n      dup2\n      add\n        /* \"#utility.yul\":528:546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":513:547   */\n      dup2\n      gt\n        /* \"#utility.yul\":549:571   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":510:572   */\n      or\n        /* \"#utility.yul\":507:595   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":575:593   */\n      tag_44\n      tag_34\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":611:613   */\n      0x40\n        /* \"#utility.yul\":604:626   */\n      mstore\n        /* \"#utility.yul\":635:657   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":676:695   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":697:701   */\n      0x20\n        /* \"#utility.yul\":672:702   */\n      add\n        /* \"#utility.yul\":669:708   */\n      dup6\n      lt\n        /* \"#utility.yul\":666:725   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":718:719   */\n      0x00\n        /* \"#utility.yul\":711:723   */\n      revert\n        /* \"#utility.yul\":666:725   */\n    tag_45:\n        /* \"#utility.yul\":785:791   */\n      dup2\n        /* \"#utility.yul\":778:782   */\n      0x20\n        /* \"#utility.yul\":770:776   */\n      dup6\n        /* \"#utility.yul\":766:783   */\n      add\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":751:757   */\n      dup4\n        /* \"#utility.yul\":747:764   */\n      add\n        /* \"#utility.yul\":734:792   */\n      calldatacopy\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":812:831   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":833:837   */\n      0x20\n        /* \"#utility.yul\":808:838   */\n      add\n        /* \"#utility.yul\":801:842   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":816:822   */\n      swap4\n        /* \"#utility.yul\":146:872   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":877:1529   */\n    tag_8:\n        /* \"#utility.yul\":974:980   */\n      0x00\n        /* \"#utility.yul\":982:988   */\n      0x00\n        /* \"#utility.yul\":990:996   */\n      0x00\n        /* \"#utility.yul\":1043:1045   */\n      0x60\n        /* \"#utility.yul\":1031:1040   */\n      dup5\n        /* \"#utility.yul\":1022:1029   */\n      dup7\n        /* \"#utility.yul\":1018:1041   */\n      sub\n        /* \"#utility.yul\":1014:1046   */\n      slt\n        /* \"#utility.yul\":1011:1063   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1059:1060   */\n      0x00\n        /* \"#utility.yul\":1056:1057   */\n      0x00\n        /* \"#utility.yul\":1049:1061   */\n      revert\n        /* \"#utility.yul\":1011:1063   */\n    tag_47:\n        /* \"#utility.yul\":1099:1108   */\n      dup4\n        /* \"#utility.yul\":1086:1109   */\n      calldataload\n        /* \"#utility.yul\":1132:1150   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1124:1130   */\n      dup2\n        /* \"#utility.yul\":1121:1151   */\n      gt\n        /* \"#utility.yul\":1118:1168   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1164:1165   */\n      0x00\n        /* \"#utility.yul\":1161:1162   */\n      0x00\n        /* \"#utility.yul\":1154:1166   */\n      revert\n        /* \"#utility.yul\":1118:1168   */\n    tag_48:\n        /* \"#utility.yul\":1187:1237   */\n      tag_49\n        /* \"#utility.yul\":1229:1236   */\n      dup7\n        /* \"#utility.yul\":1220:1226   */\n      dup3\n        /* \"#utility.yul\":1209:1218   */\n      dup8\n        /* \"#utility.yul\":1205:1227   */\n      add\n        /* \"#utility.yul\":1187:1237   */\n      tag_35\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1177:1237   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":1290:1292   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup5\n        /* \"#utility.yul\":1275:1293   */\n      add\n        /* \"#utility.yul\":1262:1294   */\n      calldataload\n        /* \"#utility.yul\":1319:1337   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1309:1317   */\n      dup2\n        /* \"#utility.yul\":1306:1338   */\n      gt\n        /* \"#utility.yul\":1303:1355   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1351:1352   */\n      0x00\n        /* \"#utility.yul\":1348:1349   */\n      0x00\n        /* \"#utility.yul\":1341:1353   */\n      revert\n        /* \"#utility.yul\":1303:1355   */\n    tag_50:\n        /* \"#utility.yul\":1374:1426   */\n      tag_51\n        /* \"#utility.yul\":1418:1425   */\n      dup7\n        /* \"#utility.yul\":1407:1415   */\n      dup3\n        /* \"#utility.yul\":1396:1405   */\n      dup8\n        /* \"#utility.yul\":1392:1416   */\n      add\n        /* \"#utility.yul\":1374:1426   */\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":877:1529   */\n      swap4\n      swap7\n        /* \"#utility.yul\":1364:1426   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1495:1497   */\n      0x40\n        /* \"#utility.yul\":1480:1498   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1467:1499   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":877:1529   */\n      jump\t// out\n        /* \"#utility.yul\":1534:2171   */\n    tag_13:\n        /* \"#utility.yul\":1724:1726   */\n      0x20\n        /* \"#utility.yul\":1736:1757   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1806:1819   */\n      dup3\n      mload\n        /* \"#utility.yul\":1709:1727   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1828:1850   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1676:1680   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1907:1922   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1866:1884   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1676:1680   */\n      dup4\n        /* \"#utility.yul\":1950:2145   */\n    tag_53:\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1961:1962   */\n      dup2\n        /* \"#utility.yul\":1958:1971   */\n      lt\n        /* \"#utility.yul\":1950:2145   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":2029:2042   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2025:2064   */\n      and\n        /* \"#utility.yul\":2013:2065   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2094:2096   */\n      0x20\n        /* \"#utility.yul\":2120:2135   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2085:2097   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2061:2062   */\n      0x01\n        /* \"#utility.yul\":1979:1988   */\n      add\n        /* \"#utility.yul\":1950:2145   */\n      jump(tag_53)\n    tag_55:\n      pop\n        /* \"#utility.yul\":2162:2165   */\n      swap1\n      swap6\n        /* \"#utility.yul\":1534:2171   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2176:2402   */\n    tag_16:\n        /* \"#utility.yul\":2235:2241   */\n      0x00\n        /* \"#utility.yul\":2288:2290   */\n      0x20\n        /* \"#utility.yul\":2276:2285   */\n      dup3\n        /* \"#utility.yul\":2267:2274   */\n      dup5\n        /* \"#utility.yul\":2263:2286   */\n      sub\n        /* \"#utility.yul\":2259:2291   */\n      slt\n        /* \"#utility.yul\":2256:2308   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2304:2305   */\n      0x00\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2294:2306   */\n      revert\n        /* \"#utility.yul\":2256:2308   */\n    tag_57:\n      pop\n        /* \"#utility.yul\":2349:2372   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2176:2402   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2615:2904   */\n    tag_36:\n        /* \"#utility.yul\":2657:2660   */\n      0x00\n        /* \"#utility.yul\":2695:2700   */\n      dup2\n        /* \"#utility.yul\":2689:2701   */\n      mload\n        /* \"#utility.yul\":2722:2728   */\n      dup1\n        /* \"#utility.yul\":2717:2720   */\n      dup5\n        /* \"#utility.yul\":2710:2729   */\n      mstore\n        /* \"#utility.yul\":2778:2784   */\n      dup1\n        /* \"#utility.yul\":2771:2775   */\n      0x20\n        /* \"#utility.yul\":2764:2769   */\n      dup5\n        /* \"#utility.yul\":2760:2776   */\n      add\n        /* \"#utility.yul\":2753:2757   */\n      0x20\n        /* \"#utility.yul\":2748:2751   */\n      dup7\n        /* \"#utility.yul\":2744:2758   */\n      add\n        /* \"#utility.yul\":2738:2785   */\n      mcopy\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2823:2827   */\n      0x20\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2809:2812   */\n      dup7\n        /* \"#utility.yul\":2805:2821   */\n      add\n        /* \"#utility.yul\":2801:2828   */\n      add\n        /* \"#utility.yul\":2794:2832   */\n      mstore\n        /* \"#utility.yul\":2893:2897   */\n      0x20\n        /* \"#utility.yul\":2886:2888   */\n      0x1f\n        /* \"#utility.yul\":2882:2889   */\n      not\n        /* \"#utility.yul\":2877:2879   */\n      0x1f\n        /* \"#utility.yul\":2869:2875   */\n      dup4\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2861:2890   */\n      and\n        /* \"#utility.yul\":2856:2859   */\n      dup6\n        /* \"#utility.yul\":2852:2891   */\n      add\n        /* \"#utility.yul\":2848:2898   */\n      add\n        /* \"#utility.yul\":2841:2898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2615:2904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3462   */\n    tag_24:\n        /* \"#utility.yul\":3162:3165   */\n      0x80\n        /* \"#utility.yul\":3151:3160   */\n      dup2\n        /* \"#utility.yul\":3144:3166   */\n      mstore\n        /* \"#utility.yul\":3125:3129   */\n      0x00\n        /* \"#utility.yul\":3189:3235   */\n      tag_61\n        /* \"#utility.yul\":3230:3233   */\n      0x80\n        /* \"#utility.yul\":3219:3228   */\n      dup4\n        /* \"#utility.yul\":3215:3234   */\n      add\n        /* \"#utility.yul\":3207:3213   */\n      dup8\n        /* \"#utility.yul\":3189:3235   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":3283:3292   */\n      dup3\n        /* \"#utility.yul\":3275:3281   */\n      dup2\n        /* \"#utility.yul\":3271:3293   */\n      sub\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup5\n        /* \"#utility.yul\":3251:3269   */\n      add\n        /* \"#utility.yul\":3244:3294   */\n      mstore\n        /* \"#utility.yul\":3311:3344   */\n      tag_62\n        /* \"#utility.yul\":3337:3343   */\n      dup2\n        /* \"#utility.yul\":3329:3335   */\n      dup8\n        /* \"#utility.yul\":3311:3344   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":3375:3377   */\n      0x40\n        /* \"#utility.yul\":3360:3378   */\n      dup5\n      add\n        /* \"#utility.yul\":3353:3387   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3423:3455   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3418:3420   */\n      0x60\n        /* \"#utility.yul\":3403:3421   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3396:3456   */\n      mstore\n        /* \"#utility.yul\":3303:3344   */\n      swap3\n        /* \"#utility.yul\":2909:3462   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:4020   */\n    tag_28:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3720:3752   */\n      dup6\n      and\n        /* \"#utility.yul\":3702:3753   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3789:3792   */\n      0x80\n        /* \"#utility.yul\":3784:3786   */\n      0x20\n        /* \"#utility.yul\":3769:3787   */\n      dup3\n      add\n        /* \"#utility.yul\":3762:3793   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":3816:3862   */\n      tag_64\n      swap1\n        /* \"#utility.yul\":3842:3861   */\n      dup4\n      add\n        /* \"#utility.yul\":3834:3840   */\n      dup7\n        /* \"#utility.yul\":3816:3862   */\n      tag_36\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":3910:3919   */\n      dup3\n        /* \"#utility.yul\":3902:3908   */\n      dup2\n        /* \"#utility.yul\":3898:3920   */\n      sub\n        /* \"#utility.yul\":3893:3895   */\n      0x40\n        /* \"#utility.yul\":3882:3891   */\n      dup5\n        /* \"#utility.yul\":3878:3896   */\n      add\n        /* \"#utility.yul\":3871:3921   */\n      mstore\n        /* \"#utility.yul\":3938:3971   */\n      tag_65\n        /* \"#utility.yul\":3964:3970   */\n      dup2\n        /* \"#utility.yul\":3956:3962   */\n      dup7\n        /* \"#utility.yul\":3938:3971   */\n      tag_36\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":3930:3971   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4007:4013   */\n      dup3\n        /* \"#utility.yul\":4002:4004   */\n      0x60\n        /* \"#utility.yul\":3991:4000   */\n      dup4\n        /* \"#utility.yul\":3987:4005   */\n      add\n        /* \"#utility.yul\":3980:4014   */\n      mstore\n        /* \"#utility.yul\":3467:4020   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n          mstore(0x40, 0x80)\n            /* \"MiniTokenFactory.sol\":738:917  constructor(string memory name, string memory symbol, uint256 supply, address owner)... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          add\n          0x40\n          dup2\n          swap1\n          mstore\n          tag_2\n          swap2\n          tag_3\n          jump\t// in\n        tag_2:\n            /* \"MiniTokenFactory.sol\":838:842  name */\n          dup4\n            /* \"MiniTokenFactory.sol\":844:850  symbol */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n          0x03\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n          tag_7\n            /* \"MiniTokenFactory.sol\":838:842  name */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n          tag_8\n          jump\t// in\n        tag_7:\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n          0x04\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n          tag_9\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n          tag_8\n          jump\t// in\n        tag_9:\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n          pop\n          pop\n            /* \"MiniTokenFactory.sol\":868:909  _mint(owner, supply * (10 ** decimals())) */\n          tag_11\n            /* \"MiniTokenFactory.sol\":874:879  owner */\n          dup2\n            /* \"MiniTokenFactory.sol\":897:907  decimals() */\n          tag_12\n            /* \"MiniTokenFactory.sol\":897:905  decimals */\n          shl(0x20, tag_13)\n            /* \"MiniTokenFactory.sol\":897:907  decimals() */\n          0x20\n          shr\n          jump\t// in\n        tag_12:\n            /* \"MiniTokenFactory.sol\":891:907  10 ** decimals() */\n          tag_14\n          swap1\n            /* \"MiniTokenFactory.sol\":891:893  10 */\n          0x0a\n            /* \"MiniTokenFactory.sol\":891:907  10 ** decimals() */\n          tag_15\n          jump\t// in\n        tag_14:\n            /* \"MiniTokenFactory.sol\":881:908  supply * (10 ** decimals()) */\n          tag_16\n          swap1\n            /* \"MiniTokenFactory.sol\":881:887  supply */\n          dup6\n            /* \"MiniTokenFactory.sol\":881:908  supply * (10 ** decimals()) */\n          tag_17\n          jump\t// in\n        tag_16:\n            /* \"MiniTokenFactory.sol\":868:873  _mint */\n          tag_18\n            /* \"MiniTokenFactory.sol\":868:909  _mint(owner, supply * (10 ** decimals())) */\n          jump\t// in\n        tag_11:\n            /* \"MiniTokenFactory.sol\":738:917  constructor(string memory name, string memory symbol, uint256 supply, address owner)... */\n          pop\n          pop\n          pop\n          pop\n            /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n          jump(tag_48)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n        tag_13:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n          0x12\n          swap1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n        tag_18:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n          tag_22\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":6057:6108   */\n          mstore\n            /* \"#utility.yul\":6030:6048   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n        tag_23:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n        tag_22:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n          tag_25\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n          tag_26\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n          jump\t// in\n        tag_25:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n        tag_26:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n          tag_28\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n          dup1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n          0x02\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n          dup3\n          dup3\n          sload\n          tag_29\n          swap2\n          swap1\n          tag_30\n          jump\t// in\n        tag_29:\n          swap1\n          swap2\n          sstore\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n          tag_31\n          swap1\n          pop\n          jump\n        tag_28:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n          dup2\n          dup2\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n          iszero\n          tag_32\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          mload(0x40)\n          shl(0xe2, 0x391434e3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":6469:6501   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":6451:6502   */\n          mstore\n            /* \"#utility.yul\":6518:6536   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":6511:6545   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":6561:6579   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":6554:6588   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":6424:6442   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n          tag_23\n            /* \"#utility.yul\":6249:6594   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n        tag_32:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n          swap1\n          dup3\n          swap1\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n        tag_31:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n          tag_35\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n          0x02\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n          dup1\n          sload\n          dup3\n          swap1\n          sub\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n          jump(tag_36)\n        tag_35:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n          dup1\n          sload\n          dup3\n          add\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n        tag_36:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n          dup2\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n          dup4\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          and\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n          mload(0x40)\n          tag_37\n          swap2\n            /* \"#utility.yul\":6745:6770   */\n          dup2\n          mstore\n            /* \"#utility.yul\":6733:6735   */\n          0x20\n            /* \"#utility.yul\":6718:6736   */\n          add\n          swap1\n            /* \"#utility.yul\":6599:6776   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n        tag_37:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":14:141   */\n        tag_39:\n            /* \"#utility.yul\":75:85   */\n          0x4e487b71\n            /* \"#utility.yul\":70:73   */\n          0xe0\n            /* \"#utility.yul\":66:86   */\n          shl\n            /* \"#utility.yul\":63:64   */\n          0x00\n            /* \"#utility.yul\":56:87   */\n          mstore\n            /* \"#utility.yul\":106:110   */\n          0x41\n            /* \"#utility.yul\":103:104   */\n          0x04\n            /* \"#utility.yul\":96:111   */\n          mstore\n            /* \"#utility.yul\":130:134   */\n          0x24\n            /* \"#utility.yul\":127:128   */\n          0x00\n            /* \"#utility.yul\":120:135   */\n          revert\n            /* \"#utility.yul\":146:869   */\n        tag_40:\n            /* \"#utility.yul\":200:205   */\n          0x00\n            /* \"#utility.yul\":253:256   */\n          dup3\n            /* \"#utility.yul\":246:250   */\n          0x1f\n            /* \"#utility.yul\":238:244   */\n          dup4\n            /* \"#utility.yul\":234:251   */\n          add\n            /* \"#utility.yul\":230:257   */\n          slt\n            /* \"#utility.yul\":220:275   */\n          tag_51\n          jumpi\n            /* \"#utility.yul\":271:272   */\n          0x00\n            /* \"#utility.yul\":268:269   */\n          0x00\n            /* \"#utility.yul\":261:273   */\n          revert\n            /* \"#utility.yul\":220:275   */\n        tag_51:\n            /* \"#utility.yul\":298:311   */\n          dup2\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":323:353   */\n          dup2\n          gt\n            /* \"#utility.yul\":320:376   */\n          iszero\n          tag_53\n          jumpi\n            /* \"#utility.yul\":356:374   */\n          tag_53\n          tag_39\n          jump\t// in\n        tag_53:\n            /* \"#utility.yul\":405:407   */\n          0x40\n            /* \"#utility.yul\":399:408   */\n          mload\n            /* \"#utility.yul\":497:499   */\n          0x1f\n            /* \"#utility.yul\":459:476   */\n          dup3\n          add\n          not(0x1f)\n            /* \"#utility.yul\":455:486   */\n          swap1\n          dup2\n          and\n            /* \"#utility.yul\":488:490   */\n          0x3f\n            /* \"#utility.yul\":451:491   */\n          add\n            /* \"#utility.yul\":447:501   */\n          and\n            /* \"#utility.yul\":435:502   */\n          dup2\n          add\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":517:551   */\n          dup2\n          gt\n            /* \"#utility.yul\":553:575   */\n          dup3\n          dup3\n          lt\n            /* \"#utility.yul\":514:576   */\n          or\n            /* \"#utility.yul\":511:599   */\n          iszero\n          tag_55\n          jumpi\n            /* \"#utility.yul\":579:597   */\n          tag_55\n          tag_39\n          jump\t// in\n        tag_55:\n            /* \"#utility.yul\":615:617   */\n          0x40\n            /* \"#utility.yul\":608:630   */\n          mstore\n            /* \"#utility.yul\":639:661   */\n          dup2\n          dup2\n          mstore\n            /* \"#utility.yul\":680:699   */\n          dup4\n          dup3\n          add\n            /* \"#utility.yul\":701:705   */\n          0x20\n            /* \"#utility.yul\":676:706   */\n          add\n            /* \"#utility.yul\":673:712   */\n          dup6\n          lt\n            /* \"#utility.yul\":670:729   */\n          iszero\n          tag_56\n          jumpi\n            /* \"#utility.yul\":725:726   */\n          0x00\n            /* \"#utility.yul\":722:723   */\n          0x00\n            /* \"#utility.yul\":715:727   */\n          revert\n            /* \"#utility.yul\":670:729   */\n        tag_56:\n            /* \"#utility.yul\":782:788   */\n          dup2\n            /* \"#utility.yul\":775:779   */\n          0x20\n            /* \"#utility.yul\":767:773   */\n          dup6\n            /* \"#utility.yul\":763:780   */\n          add\n            /* \"#utility.yul\":756:760   */\n          0x20\n            /* \"#utility.yul\":748:754   */\n          dup4\n            /* \"#utility.yul\":744:761   */\n          add\n            /* \"#utility.yul\":738:789   */\n          mcopy\n            /* \"#utility.yul\":837:838   */\n          0x00\n            /* \"#utility.yul\":809:828   */\n          swap2\n          dup2\n          add\n            /* \"#utility.yul\":830:834   */\n          0x20\n            /* \"#utility.yul\":805:835   */\n          add\n            /* \"#utility.yul\":798:839   */\n          swap2\n          swap1\n          swap2\n          mstore\n            /* \"#utility.yul\":813:819   */\n          swap4\n            /* \"#utility.yul\":146:869   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":874:1660   */\n        tag_3:\n            /* \"#utility.yul\":991:997   */\n          0x00\n            /* \"#utility.yul\":999:1005   */\n          0x00\n            /* \"#utility.yul\":1007:1013   */\n          0x00\n            /* \"#utility.yul\":1015:1021   */\n          0x00\n            /* \"#utility.yul\":1068:1071   */\n          0x80\n            /* \"#utility.yul\":1056:1065   */\n          dup6\n            /* \"#utility.yul\":1047:1054   */\n          dup8\n            /* \"#utility.yul\":1043:1066   */\n          sub\n            /* \"#utility.yul\":1039:1072   */\n          slt\n            /* \"#utility.yul\":1036:1089   */\n          iszero\n          tag_58\n          jumpi\n            /* \"#utility.yul\":1085:1086   */\n          0x00\n            /* \"#utility.yul\":1082:1083   */\n          0x00\n            /* \"#utility.yul\":1075:1087   */\n          revert\n            /* \"#utility.yul\":1036:1089   */\n        tag_58:\n            /* \"#utility.yul\":1112:1128   */\n          dup5\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":1140:1170   */\n          dup2\n          gt\n            /* \"#utility.yul\":1137:1187   */\n          iszero\n          tag_59\n          jumpi\n            /* \"#utility.yul\":1183:1184   */\n          0x00\n            /* \"#utility.yul\":1180:1181   */\n          0x00\n            /* \"#utility.yul\":1173:1185   */\n          revert\n            /* \"#utility.yul\":1137:1187   */\n        tag_59:\n            /* \"#utility.yul\":1206:1267   */\n          tag_60\n            /* \"#utility.yul\":1259:1266   */\n          dup8\n            /* \"#utility.yul\":1250:1256   */\n          dup3\n            /* \"#utility.yul\":1239:1248   */\n          dup9\n            /* \"#utility.yul\":1235:1257   */\n          add\n            /* \"#utility.yul\":1206:1267   */\n          tag_40\n          jump\t// in\n        tag_60:\n            /* \"#utility.yul\":1313:1315   */\n          0x20\n            /* \"#utility.yul\":1298:1316   */\n          dup8\n          add\n            /* \"#utility.yul\":1292:1317   */\n          mload\n            /* \"#utility.yul\":1196:1267   */\n          swap1\n          swap6\n          pop\n            /* \"#utility.yul\":1292:1317   */\n          swap1\n          pop\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":1329:1361   */\n          dup2\n          gt\n            /* \"#utility.yul\":1326:1378   */\n          iszero\n          tag_61\n          jumpi\n            /* \"#utility.yul\":1374:1375   */\n          0x00\n            /* \"#utility.yul\":1371:1372   */\n          0x00\n            /* \"#utility.yul\":1364:1376   */\n          revert\n            /* \"#utility.yul\":1326:1378   */\n        tag_61:\n            /* \"#utility.yul\":1397:1460   */\n          tag_62\n            /* \"#utility.yul\":1452:1459   */\n          dup8\n            /* \"#utility.yul\":1441:1449   */\n          dup3\n            /* \"#utility.yul\":1430:1439   */\n          dup9\n            /* \"#utility.yul\":1426:1450   */\n          add\n            /* \"#utility.yul\":1397:1460   */\n          tag_40\n          jump\t// in\n        tag_62:\n            /* \"#utility.yul\":1500:1502   */\n          0x40\n            /* \"#utility.yul\":1485:1503   */\n          dup8\n          add\n            /* \"#utility.yul\":1479:1504   */\n          mload\n            /* \"#utility.yul\":1547:1549   */\n          0x60\n            /* \"#utility.yul\":1532:1550   */\n          dup9\n          add\n            /* \"#utility.yul\":1526:1551   */\n          mload\n            /* \"#utility.yul\":1387:1460   */\n          swap2\n          swap6\n          pop\n            /* \"#utility.yul\":1479:1504   */\n          swap4\n          pop\n            /* \"#utility.yul\":1526:1551   */\n          swap1\n          pop\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":1580:1611   */\n          dup2\n          and\n            /* \"#utility.yul\":1570:1612   */\n          dup2\n          eq\n            /* \"#utility.yul\":1560:1630   */\n          tag_63\n          jumpi\n            /* \"#utility.yul\":1626:1627   */\n          0x00\n            /* \"#utility.yul\":1623:1624   */\n          0x00\n            /* \"#utility.yul\":1616:1628   */\n          revert\n            /* \"#utility.yul\":1560:1630   */\n        tag_63:\n            /* \"#utility.yul\":874:1660   */\n          swap4\n          swap7\n          swap3\n          swap6\n          pop\n          swap1\n          swap4\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1665:2045   */\n        tag_41:\n            /* \"#utility.yul\":1744:1745   */\n          0x01\n            /* \"#utility.yul\":1740:1752   */\n          dup2\n          dup2\n          shr\n          swap1\n            /* \"#utility.yul\":1787:1799   */\n          dup3\n          and\n          dup1\n            /* \"#utility.yul\":1808:1869   */\n          tag_65\n          jumpi\n            /* \"#utility.yul\":1862:1866   */\n          0x7f\n            /* \"#utility.yul\":1854:1860   */\n          dup3\n            /* \"#utility.yul\":1850:1867   */\n          and\n            /* \"#utility.yul\":1840:1867   */\n          swap2\n          pop\n            /* \"#utility.yul\":1808:1869   */\n        tag_65:\n            /* \"#utility.yul\":1915:1917   */\n          0x20\n            /* \"#utility.yul\":1907:1913   */\n          dup3\n            /* \"#utility.yul\":1904:1918   */\n          lt\n            /* \"#utility.yul\":1884:1902   */\n          dup2\n            /* \"#utility.yul\":1881:1919   */\n          sub\n            /* \"#utility.yul\":1878:2039   */\n          tag_66\n          jumpi\n            /* \"#utility.yul\":1961:1971   */\n          0x4e487b71\n            /* \"#utility.yul\":1956:1959   */\n          0xe0\n            /* \"#utility.yul\":1952:1972   */\n          shl\n            /* \"#utility.yul\":1949:1950   */\n          0x00\n            /* \"#utility.yul\":1942:1973   */\n          mstore\n            /* \"#utility.yul\":1996:2000   */\n          0x22\n            /* \"#utility.yul\":1993:1994   */\n          0x04\n            /* \"#utility.yul\":1986:2001   */\n          mstore\n            /* \"#utility.yul\":2024:2028   */\n          0x24\n            /* \"#utility.yul\":2021:2022   */\n          0x00\n            /* \"#utility.yul\":2014:2029   */\n          revert\n            /* \"#utility.yul\":1878:2039   */\n        tag_66:\n          pop\n            /* \"#utility.yul\":1665:2045   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2176:2694   */\n        tag_43:\n            /* \"#utility.yul\":2278:2280   */\n          0x1f\n            /* \"#utility.yul\":2273:2276   */\n          dup3\n            /* \"#utility.yul\":2270:2281   */\n          gt\n            /* \"#utility.yul\":2267:2688   */\n          iszero\n          tag_69\n          jumpi\n            /* \"#utility.yul\":2314:2319   */\n          dup1\n            /* \"#utility.yul\":2311:2312   */\n          0x00\n            /* \"#utility.yul\":2304:2320   */\n          mstore\n            /* \"#utility.yul\":2358:2362   */\n          0x20\n            /* \"#utility.yul\":2355:2356   */\n          0x00\n            /* \"#utility.yul\":2345:2363   */\n          keccak256\n            /* \"#utility.yul\":2428:2430   */\n          0x1f\n            /* \"#utility.yul\":2416:2426   */\n          dup5\n            /* \"#utility.yul\":2412:2431   */\n          add\n            /* \"#utility.yul\":2409:2410   */\n          0x05\n            /* \"#utility.yul\":2405:2432   */\n          shr\n            /* \"#utility.yul\":2399:2403   */\n          dup2\n            /* \"#utility.yul\":2395:2433   */\n          add\n            /* \"#utility.yul\":2464:2468   */\n          0x20\n            /* \"#utility.yul\":2452:2462   */\n          dup6\n            /* \"#utility.yul\":2449:2469   */\n          lt\n            /* \"#utility.yul\":2446:2493   */\n          iszero\n          tag_70\n          jumpi\n          pop\n            /* \"#utility.yul\":2487:2491   */\n          dup1\n            /* \"#utility.yul\":2446:2493   */\n        tag_70:\n            /* \"#utility.yul\":2542:2544   */\n          0x1f\n            /* \"#utility.yul\":2537:2540   */\n          dup5\n            /* \"#utility.yul\":2533:2545   */\n          add\n            /* \"#utility.yul\":2530:2531   */\n          0x05\n            /* \"#utility.yul\":2526:2546   */\n          shr\n            /* \"#utility.yul\":2520:2524   */\n          dup3\n            /* \"#utility.yul\":2516:2547   */\n          add\n            /* \"#utility.yul\":2506:2547   */\n          swap2\n          pop\n            /* \"#utility.yul\":2597:2678   */\n        tag_71:\n            /* \"#utility.yul\":2615:2617   */\n          dup2\n            /* \"#utility.yul\":2608:2613   */\n          dup2\n            /* \"#utility.yul\":2605:2618   */\n          lt\n            /* \"#utility.yul\":2597:2678   */\n          iszero\n          tag_73\n          jumpi\n            /* \"#utility.yul\":2674:2675   */\n          0x00\n            /* \"#utility.yul\":2660:2676   */\n          dup2\n          sstore\n            /* \"#utility.yul\":2641:2642   */\n          0x01\n            /* \"#utility.yul\":2630:2643   */\n          add\n            /* \"#utility.yul\":2597:2678   */\n          jump(tag_71)\n        tag_73:\n            /* \"#utility.yul\":2601:2604   */\n          pop\n          pop\n            /* \"#utility.yul\":2267:2688   */\n        tag_69:\n            /* \"#utility.yul\":2176:2694   */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2870:4169   */\n        tag_8:\n            /* \"#utility.yul\":2990:3000   */\n          dup2\n          mload\n          sub(shl(0x40, 0x01), 0x01)\n            /* \"#utility.yul\":3012:3042   */\n          dup2\n          gt\n            /* \"#utility.yul\":3009:3065   */\n          iszero\n          tag_77\n          jumpi\n            /* \"#utility.yul\":3045:3063   */\n          tag_77\n          tag_39\n          jump\t// in\n        tag_77:\n            /* \"#utility.yul\":3074:3171   */\n          tag_78\n            /* \"#utility.yul\":3164:3170   */\n          dup2\n            /* \"#utility.yul\":3124:3162   */\n          tag_79\n            /* \"#utility.yul\":3156:3160   */\n          dup5\n            /* \"#utility.yul\":3150:3161   */\n          sload\n            /* \"#utility.yul\":3124:3162   */\n          tag_41\n          jump\t// in\n        tag_79:\n            /* \"#utility.yul\":3118:3122   */\n          dup5\n            /* \"#utility.yul\":3074:3171   */\n          tag_43\n          jump\t// in\n        tag_78:\n            /* \"#utility.yul\":3220:3224   */\n          0x20\n            /* \"#utility.yul\":3251:3253   */\n          0x1f\n            /* \"#utility.yul\":3240:3254   */\n          dup3\n          gt\n            /* \"#utility.yul\":3268:3269   */\n          0x01\n            /* \"#utility.yul\":3263:3912   */\n          dup2\n          eq\n          tag_81\n          jumpi\n            /* \"#utility.yul\":3956:3957   */\n          0x00\n            /* \"#utility.yul\":3973:3979   */\n          dup4\n            /* \"#utility.yul\":3970:4059   */\n          iszero\n          tag_82\n          jumpi\n          pop\n            /* \"#utility.yul\":4025:4044   */\n          dup5\n          dup3\n          add\n            /* \"#utility.yul\":4019:4045   */\n          mload\n            /* \"#utility.yul\":3970:4059   */\n        tag_82:\n          not(0x00)\n            /* \"#utility.yul\":2827:2828   */\n          0x03\n            /* \"#utility.yul\":2823:2834   */\n          dup6\n          swap1\n          shl\n            /* \"#utility.yul\":2819:2843   */\n          shr\n            /* \"#utility.yul\":2815:2844   */\n          not\n            /* \"#utility.yul\":2805:2845   */\n          and\n            /* \"#utility.yul\":2851:2852   */\n          0x01\n            /* \"#utility.yul\":2847:2858   */\n          dup5\n          swap1\n          shl\n            /* \"#utility.yul\":2802:2859   */\n          or\n            /* \"#utility.yul\":4072:4153   */\n          dup5\n          sstore\n            /* \"#utility.yul\":3233:4163   */\n          jump(tag_73)\n            /* \"#utility.yul\":3263:3912   */\n        tag_81:\n            /* \"#utility.yul\":2123:2124   */\n          0x00\n            /* \"#utility.yul\":2116:2130   */\n          dup5\n          dup2\n          mstore\n            /* \"#utility.yul\":2160:2164   */\n          0x20\n            /* \"#utility.yul\":2147:2165   */\n          dup2\n          keccak256\n          not(0x1f)\n            /* \"#utility.yul\":3299:3319   */\n          dup6\n          and\n          swap2\n            /* \"#utility.yul\":3417:3639   */\n        tag_85:\n            /* \"#utility.yul\":3431:3438   */\n          dup3\n            /* \"#utility.yul\":3428:3429   */\n          dup2\n            /* \"#utility.yul\":3425:3439   */\n          lt\n            /* \"#utility.yul\":3417:3639   */\n          iszero\n          tag_87\n          jumpi\n            /* \"#utility.yul\":3513:3532   */\n          dup8\n          dup6\n          add\n            /* \"#utility.yul\":3507:3533   */\n          mload\n            /* \"#utility.yul\":3492:3534   */\n          dup3\n          sstore\n            /* \"#utility.yul\":3620:3624   */\n          0x20\n            /* \"#utility.yul\":3605:3625   */\n          swap5\n          dup6\n          add\n          swap5\n            /* \"#utility.yul\":3573:3574   */\n          0x01\n            /* \"#utility.yul\":3561:3575   */\n          swap1\n          swap3\n          add\n          swap2\n            /* \"#utility.yul\":3447:3459   */\n          add\n            /* \"#utility.yul\":3417:3639   */\n          jump(tag_85)\n        tag_87:\n            /* \"#utility.yul\":3421:3424   */\n          pop\n            /* \"#utility.yul\":3667:3673   */\n          dup5\n            /* \"#utility.yul\":3658:3665   */\n          dup3\n            /* \"#utility.yul\":3655:3674   */\n          lt\n            /* \"#utility.yul\":3652:3853   */\n          iszero\n          tag_88\n          jumpi\n            /* \"#utility.yul\":3728:3747   */\n          dup7\n          dup5\n          add\n            /* \"#utility.yul\":3722:3748   */\n          mload\n          not(0x00)\n            /* \"#utility.yul\":3811:3812   */\n          0x03\n            /* \"#utility.yul\":3807:3821   */\n          dup8\n          swap1\n          shl\n            /* \"#utility.yul\":3823:3826   */\n          0xf8\n            /* \"#utility.yul\":3803:3827   */\n          and\n            /* \"#utility.yul\":3799:3836   */\n          shr\n            /* \"#utility.yul\":3795:3837   */\n          not\n            /* \"#utility.yul\":3780:3838   */\n          and\n            /* \"#utility.yul\":3765:3839   */\n          dup2\n          sstore\n            /* \"#utility.yul\":3652:3853   */\n        tag_88:\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":3899:3900   */\n          0x01\n            /* \"#utility.yul\":3883:3897   */\n          swap1\n          dup2\n          shl\n            /* \"#utility.yul\":3879:3901   */\n          add\n            /* \"#utility.yul\":3866:3902   */\n          swap1\n          sstore\n          pop\n            /* \"#utility.yul\":2870:4169   */\n          jump\t// out\n            /* \"#utility.yul\":4174:4301   */\n        tag_45:\n            /* \"#utility.yul\":4235:4245   */\n          0x4e487b71\n            /* \"#utility.yul\":4230:4233   */\n          0xe0\n            /* \"#utility.yul\":4226:4246   */\n          shl\n            /* \"#utility.yul\":4223:4224   */\n          0x00\n            /* \"#utility.yul\":4216:4247   */\n          mstore\n            /* \"#utility.yul\":4266:4270   */\n          0x11\n            /* \"#utility.yul\":4263:4264   */\n          0x04\n            /* \"#utility.yul\":4256:4271   */\n          mstore\n            /* \"#utility.yul\":4290:4294   */\n          0x24\n            /* \"#utility.yul\":4287:4288   */\n          0x00\n            /* \"#utility.yul\":4280:4295   */\n          revert\n            /* \"#utility.yul\":4306:4681   */\n        tag_46:\n            /* \"#utility.yul\":4394:4395   */\n          0x01\n            /* \"#utility.yul\":4412:4417   */\n          dup2\n            /* \"#utility.yul\":4426:4675   */\n        tag_91:\n            /* \"#utility.yul\":4447:4448   */\n          0x01\n            /* \"#utility.yul\":4437:4445   */\n          dup5\n            /* \"#utility.yul\":4434:4449   */\n          gt\n            /* \"#utility.yul\":4426:4675   */\n          iszero\n          tag_93\n          jumpi\n            /* \"#utility.yul\":4497:4501   */\n          dup1\n            /* \"#utility.yul\":4492:4495   */\n          dup6\n            /* \"#utility.yul\":4488:4502   */\n          div\n            /* \"#utility.yul\":4482:4486   */\n          dup2\n            /* \"#utility.yul\":4479:4503   */\n          gt\n            /* \"#utility.yul\":4476:4526   */\n          iszero\n          tag_95\n          jumpi\n            /* \"#utility.yul\":4506:4524   */\n          tag_95\n          tag_45\n          jump\t// in\n        tag_95:\n            /* \"#utility.yul\":4556:4557   */\n          0x01\n            /* \"#utility.yul\":4546:4554   */\n          dup5\n            /* \"#utility.yul\":4542:4558   */\n          and\n            /* \"#utility.yul\":4539:4588   */\n          iszero\n          tag_96\n          jumpi\n            /* \"#utility.yul\":4570:4586   */\n          swap1\n          dup2\n          mul\n          swap1\n            /* \"#utility.yul\":4539:4588   */\n        tag_96:\n            /* \"#utility.yul\":4653:4654   */\n          0x01\n            /* \"#utility.yul\":4649:4665   */\n          swap4\n          swap1\n          swap4\n          shr\n          swap3\n            /* \"#utility.yul\":4609:4624   */\n          dup1\n          mul\n            /* \"#utility.yul\":4426:4675   */\n          jump(tag_91)\n        tag_93:\n            /* \"#utility.yul\":4306:4681   */\n          swap4\n          pop\n          swap4\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4686:5588   */\n        tag_47:\n            /* \"#utility.yul\":4735:4740   */\n          0x00\n            /* \"#utility.yul\":4765:4773   */\n          dup3\n            /* \"#utility.yul\":4755:4835   */\n          tag_98\n          jumpi\n          pop\n            /* \"#utility.yul\":4806:4807   */\n          0x01\n            /* \"#utility.yul\":4820:4825   */\n          jump(tag_97)\n            /* \"#utility.yul\":4755:4835   */\n        tag_98:\n            /* \"#utility.yul\":4854:4858   */\n          dup2\n            /* \"#utility.yul\":4844:4920   */\n          tag_99\n          jumpi\n          pop\n            /* \"#utility.yul\":4891:4892   */\n          0x00\n            /* \"#utility.yul\":4905:4910   */\n          jump(tag_97)\n            /* \"#utility.yul\":4844:4920   */\n        tag_99:\n            /* \"#utility.yul\":4936:4940   */\n          dup2\n            /* \"#utility.yul\":4954:4955   */\n          0x01\n            /* \"#utility.yul\":4949:5008   */\n          dup2\n          eq\n          tag_101\n          jumpi\n            /* \"#utility.yul\":5022:5023   */\n          0x02\n            /* \"#utility.yul\":5017:5191   */\n          dup2\n          eq\n          tag_102\n          jumpi\n            /* \"#utility.yul\":4929:5191   */\n          jump(tag_100)\n            /* \"#utility.yul\":4949:5008   */\n        tag_101:\n            /* \"#utility.yul\":4979:4980   */\n          0x01\n            /* \"#utility.yul\":4970:4980   */\n          swap2\n          pop\n            /* \"#utility.yul\":4993:4998   */\n          pop\n          jump(tag_97)\n            /* \"#utility.yul\":5017:5191   */\n        tag_102:\n            /* \"#utility.yul\":5054:5057   */\n          0xff\n            /* \"#utility.yul\":5044:5052   */\n          dup5\n            /* \"#utility.yul\":5041:5058   */\n          gt\n            /* \"#utility.yul\":5038:5081   */\n          iszero\n          tag_104\n          jumpi\n            /* \"#utility.yul\":5061:5079   */\n          tag_104\n          tag_45\n          jump\t// in\n        tag_104:\n          pop\n          pop\n            /* \"#utility.yul\":5117:5118   */\n          0x01\n            /* \"#utility.yul\":5103:5119   */\n          dup3\n          shl\n            /* \"#utility.yul\":5176:5181   */\n          jump(tag_97)\n            /* \"#utility.yul\":4929:5191   */\n        tag_100:\n          pop\n            /* \"#utility.yul\":5275:5277   */\n          0x20\n            /* \"#utility.yul\":5265:5273   */\n          dup4\n            /* \"#utility.yul\":5262:5278   */\n          lt\n            /* \"#utility.yul\":5256:5259   */\n          0x0133\n            /* \"#utility.yul\":5250:5254   */\n          dup4\n            /* \"#utility.yul\":5247:5260   */\n          lt\n            /* \"#utility.yul\":5243:5279   */\n          and\n            /* \"#utility.yul\":5237:5239   */\n          0x4e\n            /* \"#utility.yul\":5227:5235   */\n          dup5\n            /* \"#utility.yul\":5224:5240   */\n          lt\n            /* \"#utility.yul\":5219:5221   */\n          0x0b\n            /* \"#utility.yul\":5213:5217   */\n          dup5\n            /* \"#utility.yul\":5210:5222   */\n          lt\n            /* \"#utility.yul\":5206:5241   */\n          and\n            /* \"#utility.yul\":5203:5280   */\n          or\n            /* \"#utility.yul\":5200:5403   */\n          iszero\n          tag_105\n          jumpi\n          pop\n            /* \"#utility.yul\":5312:5331   */\n          dup2\n          dup2\n          exp\n            /* \"#utility.yul\":5388:5393   */\n          jump(tag_97)\n            /* \"#utility.yul\":5200:5403   */\n        tag_105:\n            /* \"#utility.yul\":5435:5477   */\n          tag_106\n          not(0x00)\n            /* \"#utility.yul\":5460:5468   */\n          dup5\n            /* \"#utility.yul\":5454:5458   */\n          dup5\n            /* \"#utility.yul\":5435:5477   */\n          tag_46\n          jump\t// in\n        tag_106:\n            /* \"#utility.yul\":5513:5519   */\n          dup1\n            /* \"#utility.yul\":5509:5510   */\n          0x00\n            /* \"#utility.yul\":5505:5511   */\n          not\n            /* \"#utility.yul\":5501:5520   */\n          div\n            /* \"#utility.yul\":5492:5499   */\n          dup3\n            /* \"#utility.yul\":5489:5521   */\n          gt\n            /* \"#utility.yul\":5486:5544   */\n          iszero\n          tag_108\n          jumpi\n            /* \"#utility.yul\":5524:5542   */\n          tag_108\n          tag_45\n          jump\t// in\n        tag_108:\n            /* \"#utility.yul\":5562:5582   */\n          mul\n          swap1\n          pop\n            /* \"#utility.yul\":4686:5588   */\n        tag_97:\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5593:5733   */\n        tag_15:\n            /* \"#utility.yul\":5651:5656   */\n          0x00\n            /* \"#utility.yul\":5680:5727   */\n          tag_110\n            /* \"#utility.yul\":5721:5725   */\n          0xff\n            /* \"#utility.yul\":5711:5719   */\n          dup5\n            /* \"#utility.yul\":5707:5726   */\n          and\n            /* \"#utility.yul\":5701:5705   */\n          dup4\n            /* \"#utility.yul\":5680:5727   */\n          tag_47\n          jump\t// in\n        tag_110:\n            /* \"#utility.yul\":5671:5727   */\n          swap4\n            /* \"#utility.yul\":5593:5733   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5738:5906   */\n        tag_17:\n            /* \"#utility.yul\":5811:5820   */\n          dup1\n          dup3\n          mul\n            /* \"#utility.yul\":5842:5851   */\n          dup2\n          iszero\n            /* \"#utility.yul\":5859:5874   */\n          dup3\n          dup3\n          div\n            /* \"#utility.yul\":5853:5875   */\n          dup5\n          eq\n            /* \"#utility.yul\":5839:5876   */\n          or\n            /* \"#utility.yul\":5829:5900   */\n          tag_97\n          jumpi\n            /* \"#utility.yul\":5880:5898   */\n          tag_97\n          tag_45\n          jump\t// in\n            /* \"#utility.yul\":6119:6244   */\n        tag_30:\n            /* \"#utility.yul\":6184:6193   */\n          dup1\n          dup3\n          add\n            /* \"#utility.yul\":6205:6215   */\n          dup1\n          dup3\n          gt\n            /* \"#utility.yul\":6202:6238   */\n          iszero\n          tag_97\n          jumpi\n            /* \"#utility.yul\":6218:6236   */\n          tag_97\n          tag_45\n          jump\t// in\n            /* \"#utility.yul\":6599:6776   */\n        tag_48:\n            /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"MiniTokenFactory.sol\":702:920  contract ERC20Token is ERC20 {... */\n              mstore(0x40, 0x80)\n              callvalue\n              dup1\n              iszero\n              tag_1\n              jumpi\n              revert(0x00, 0x00)\n            tag_1:\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x313ce567\n              gt\n              tag_12\n              jumpi\n              dup1\n              0x313ce567\n              eq\n              tag_7\n              jumpi\n              dup1\n              0x70a08231\n              eq\n              tag_8\n              jumpi\n              dup1\n              0x95d89b41\n              eq\n              tag_9\n              jumpi\n              dup1\n              0xa9059cbb\n              eq\n              tag_10\n              jumpi\n              dup1\n              0xdd62ed3e\n              eq\n              tag_11\n              jumpi\n              revert(0x00, 0x00)\n            tag_12:\n              dup1\n              0x06fdde03\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x095ea7b3\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x18160ddd\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x23b872dd\n              eq\n              tag_6\n              jumpi\n            tag_2:\n              revert(0x00, 0x00)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n            tag_3:\n              tag_13\n              tag_14\n              jump\t// in\n            tag_13:\n              mload(0x40)\n              tag_15\n              swap2\n              swap1\n              tag_16\n              jump\t// in\n            tag_15:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_4:\n              tag_17\n              tag_18\n              calldatasize\n              0x04\n              tag_19\n              jump\t// in\n            tag_18:\n              tag_20\n              jump\t// in\n            tag_17:\n              mload(0x40)\n                /* \"#utility.yul\":1085:1099   */\n              swap1\n              iszero\n                /* \"#utility.yul\":1078:1100   */\n              iszero\n                /* \"#utility.yul\":1060:1101   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1048:1050   */\n              0x20\n                /* \"#utility.yul\":1033:1051   */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n              tag_15\n                /* \"#utility.yul\":920:1107   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n            tag_5:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n              sload(0x02)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n            tag_23:\n              mload(0x40)\n                /* \"#utility.yul\":1258:1283   */\n              swap1\n              dup2\n              mstore\n                /* \"#utility.yul\":1246:1248   */\n              0x20\n                /* \"#utility.yul\":1231:1249   */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n              tag_15\n                /* \"#utility.yul\":1112:1289   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n            tag_6:\n              tag_17\n              tag_28\n              calldatasize\n              0x04\n              tag_29\n              jump\t// in\n            tag_28:\n              tag_30\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n            tag_7:\n              mload(0x40)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n              0x12\n                /* \"#utility.yul\":1815:1851   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1803:1805   */\n              0x20\n                /* \"#utility.yul\":1788:1806   */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n              tag_15\n                /* \"#utility.yul\":1673:1857   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n            tag_8:\n              tag_23\n              tag_37\n              calldatasize\n              0x04\n              tag_38\n              jump\t// in\n            tag_37:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              swap1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n            tag_9:\n              tag_13\n              tag_42\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n            tag_10:\n              tag_17\n              tag_45\n              calldatasize\n              0x04\n              tag_19\n              jump\t// in\n            tag_45:\n              tag_46\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n            tag_11:\n              tag_23\n              tag_49\n              calldatasize\n              0x04\n              tag_50\n              jump\t// in\n            tag_49:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              swap2\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              swap1\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n              swap4\n              swap1\n              swap5\n              and\n              dup3\n              mstore\n              swap2\n              swap1\n              swap2\n              mstore\n              keccak256\n              sload\n              swap1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n            tag_14:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n              0x60\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n              0x03\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n              dup1\n              sload\n              tag_54\n              swap1\n              tag_55\n              jump\t// in\n            tag_54:\n              dup1\n              0x1f\n              add\n              0x20\n              dup1\n              swap2\n              div\n              mul\n              0x20\n              add\n              mload(0x40)\n              swap1\n              dup2\n              add\n              0x40\n              mstore\n              dup1\n              swap3\n              swap2\n              swap1\n              dup2\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup1\n              sload\n              tag_56\n              swap1\n              tag_55\n              jump\t// in\n            tag_56:\n              dup1\n              iszero\n              tag_57\n              jumpi\n              dup1\n              0x1f\n              lt\n              tag_58\n              jumpi\n              0x0100\n              dup1\n              dup4\n              sload\n              div\n              mul\n              dup4\n              mstore\n              swap2\n              0x20\n              add\n              swap2\n              jump(tag_57)\n            tag_58:\n              dup3\n              add\n              swap2\n              swap1\n              0x00\n              mstore\n              keccak256(0x00, 0x20)\n              swap1\n            tag_59:\n              dup2\n              sload\n              dup2\n              mstore\n              swap1\n              0x01\n              add\n              swap1\n              0x20\n              add\n              dup1\n              dup4\n              gt\n              tag_59\n              jumpi\n              dup3\n              swap1\n              sub\n              0x1f\n              and\n              dup3\n              add\n              swap2\n            tag_57:\n              pop\n              pop\n              pop\n              pop\n              pop\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_20:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n              tag_63\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n              tag_64\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n              jump\t// in\n            tag_63:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n              swap2\n              pop\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n            tag_60:\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n            tag_30:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n              tag_68\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n              dup6\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n              tag_69\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n              jump\t// in\n            tag_68:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n              tag_70\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n              tag_71\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n              jump\t// in\n            tag_70:\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n              0x01\n              swap5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n              swap4\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n            tag_42:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n              0x60\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n              0x04\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n              dup1\n              sload\n              tag_54\n              swap1\n              tag_55\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n            tag_46:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n              tag_63\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n              tag_71\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n            tag_64:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n              tag_86\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n              tag_87\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n              jump\t// in\n            tag_86:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n            tag_69:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              dup4\n              dup2\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              swap1\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n              swap4\n              dup7\n              and\n              dup4\n              mstore\n              swap3\n              swap1\n              mstore\n              keccak256\n              sload\n              not(0x00)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n              dup2\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n              iszero\n              tag_94\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n              iszero\n              tag_91\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n              mload(0x40)\n              shl(0xe1, 0x7dc7a0d9)\n              dup2\n              mstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":2923:2955   */\n              dup5\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":2905:2956   */\n              mstore\n                /* \"#utility.yul\":2972:2990   */\n              0x24\n              dup2\n              add\n                /* \"#utility.yul\":2965:2999   */\n              dup3\n              swap1\n              mstore\n                /* \"#utility.yul\":3015:3033   */\n              0x44\n              dup2\n              add\n                /* \"#utility.yul\":3008:3042   */\n              dup4\n              swap1\n              mstore\n                /* \"#utility.yul\":2878:2896   */\n              0x64\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n            tag_92:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n            tag_91:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n              tag_94\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n              sub\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n              tag_87\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n              jump\t// in\n            tag_94:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n            tag_71:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n              tag_96\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n              mload(0x40)\n              shl(0xe1, 0x4b637e8f)\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":3199:3250   */\n              mstore\n                /* \"#utility.yul\":3172:3190   */\n              0x24\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n              tag_92\n                /* \"#utility.yul\":3053:3256   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n            tag_96:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n              tag_99\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0xec442f05)\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":3199:3250   */\n              mstore\n                /* \"#utility.yul\":3172:3190   */\n              0x24\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n              tag_92\n                /* \"#utility.yul\":3053:3256   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n            tag_99:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n              tag_86\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n              tag_102\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n              jump\t// in\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n            tag_87:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n              dup5\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n              tag_104\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n              mload(0x40)\n              shl(0xe0, 0xe602df05)\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":3199:3250   */\n              mstore\n                /* \"#utility.yul\":3172:3190   */\n              0x24\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n              tag_92\n                /* \"#utility.yul\":3053:3256   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n            tag_104:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n              tag_106\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n              mload(0x40)\n              shl(0xe1, 0x4a1406b1)\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":3199:3250   */\n              mstore\n                /* \"#utility.yul\":3172:3190   */\n              0x24\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n              tag_92\n                /* \"#utility.yul\":3053:3256   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n            tag_106:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n              dup1\n              dup6\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n              swap4\n              dup8\n              and\n              dup4\n              mstore\n              swap3\n              swap1\n              mstore\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n              dup3\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n              dup1\n              iszero\n              tag_94\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n              dup3\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n              dup5\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              and\n              0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n              mload(0x40)\n              tag_109\n              swap2\n                /* \"#utility.yul\":1258:1283   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1246:1248   */\n              0x20\n                /* \"#utility.yul\":1231:1249   */\n              add\n              swap1\n                /* \"#utility.yul\":1112:1289   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n            tag_109:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n            tag_102:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n              tag_111\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n              dup1\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n              0x02\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n              dup3\n              dup3\n              sload\n              tag_112\n              swap2\n              swap1\n              tag_113\n              jump\t// in\n            tag_112:\n              swap1\n              swap2\n              sstore\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n              tag_114\n              swap1\n              pop\n              jump\n            tag_111:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n              dup4\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n              dup2\n              dup2\n              lt\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n              iszero\n              tag_115\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n              mload(0x40)\n              shl(0xe2, 0x391434e3)\n              dup2\n              mstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":2923:2955   */\n              dup6\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n              0x04\n              dup3\n              add\n                /* \"#utility.yul\":2905:2956   */\n              mstore\n                /* \"#utility.yul\":2972:2990   */\n              0x24\n              dup2\n              add\n                /* \"#utility.yul\":2965:2999   */\n              dup3\n              swap1\n              mstore\n                /* \"#utility.yul\":3015:3033   */\n              0x44\n              dup2\n              add\n                /* \"#utility.yul\":3008:3042   */\n              dup4\n              swap1\n              mstore\n                /* \"#utility.yul\":2878:2896   */\n              0x64\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n              tag_92\n                /* \"#utility.yul\":2703:3048   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n            tag_115:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n              dup5\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n              swap1\n              dup3\n              swap1\n              sub\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n            tag_114:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n              tag_117\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n              0x02\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n              dup1\n              sload\n              dup3\n              swap1\n              sub\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n              jump(tag_118)\n            tag_117:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n              dup3\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n              swap1\n              dup2\n              mstore\n              0x20\n              dup2\n              swap1\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n              dup1\n              sload\n              dup3\n              add\n              swap1\n              sstore\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n            tag_118:\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n              dup2\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              and\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n              dup4\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              and\n              0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n              mload(0x40)\n              tag_119\n              swap2\n                /* \"#utility.yul\":1258:1283   */\n              dup2\n              mstore\n                /* \"#utility.yul\":1246:1248   */\n              0x20\n                /* \"#utility.yul\":1231:1249   */\n              add\n              swap1\n                /* \"#utility.yul\":1112:1289   */\n              jump\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n            tag_119:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":14:432   */\n            tag_16:\n                /* \"#utility.yul\":163:165   */\n              0x20\n                /* \"#utility.yul\":152:161   */\n              dup2\n                /* \"#utility.yul\":145:166   */\n              mstore\n                /* \"#utility.yul\":126:130   */\n              0x00\n                /* \"#utility.yul\":195:201   */\n              dup3\n                /* \"#utility.yul\":189:202   */\n              mload\n                /* \"#utility.yul\":238:244   */\n              dup1\n                /* \"#utility.yul\":233:235   */\n              0x20\n                /* \"#utility.yul\":222:231   */\n              dup5\n                /* \"#utility.yul\":218:236   */\n              add\n                /* \"#utility.yul\":211:245   */\n              mstore\n                /* \"#utility.yul\":297:303   */\n              dup1\n                /* \"#utility.yul\":292:294   */\n              0x20\n                /* \"#utility.yul\":284:290   */\n              dup6\n                /* \"#utility.yul\":280:295   */\n              add\n                /* \"#utility.yul\":275:277   */\n              0x40\n                /* \"#utility.yul\":264:273   */\n              dup6\n                /* \"#utility.yul\":260:278   */\n              add\n                /* \"#utility.yul\":254:304   */\n              mcopy\n                /* \"#utility.yul\":353:354   */\n              0x00\n                /* \"#utility.yul\":348:350   */\n              0x40\n                /* \"#utility.yul\":339:345   */\n              dup3\n                /* \"#utility.yul\":328:337   */\n              dup6\n                /* \"#utility.yul\":324:346   */\n              add\n                /* \"#utility.yul\":320:351   */\n              add\n                /* \"#utility.yul\":313:355   */\n              mstore\n                /* \"#utility.yul\":423:425   */\n              0x40\n                /* \"#utility.yul\":416:418   */\n              0x1f\n                /* \"#utility.yul\":412:419   */\n              not\n                /* \"#utility.yul\":407:409   */\n              0x1f\n                /* \"#utility.yul\":399:405   */\n              dup4\n                /* \"#utility.yul\":395:410   */\n              add\n                /* \"#utility.yul\":391:420   */\n              and\n                /* \"#utility.yul\":380:389   */\n              dup5\n                /* \"#utility.yul\":376:421   */\n              add\n                /* \"#utility.yul\":372:426   */\n              add\n                /* \"#utility.yul\":364:426   */\n              swap2\n              pop\n              pop\n                /* \"#utility.yul\":14:432   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":437:610   */\n            tag_120:\n                /* \"#utility.yul\":505:525   */\n              dup1\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"#utility.yul\":554:585   */\n              dup2\n              and\n                /* \"#utility.yul\":544:586   */\n              dup2\n              eq\n                /* \"#utility.yul\":534:604   */\n              tag_124\n              jumpi\n                /* \"#utility.yul\":600:601   */\n              0x00\n                /* \"#utility.yul\":597:598   */\n              0x00\n                /* \"#utility.yul\":590:602   */\n              revert\n                /* \"#utility.yul\":534:604   */\n            tag_124:\n                /* \"#utility.yul\":437:610   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":615:915   */\n            tag_19:\n                /* \"#utility.yul\":683:689   */\n              0x00\n                /* \"#utility.yul\":691:697   */\n              0x00\n                /* \"#utility.yul\":744:746   */\n              0x40\n                /* \"#utility.yul\":732:741   */\n              dup4\n                /* \"#utility.yul\":723:730   */\n              dup6\n                /* \"#utility.yul\":719:742   */\n              sub\n                /* \"#utility.yul\":715:747   */\n              slt\n                /* \"#utility.yul\":712:764   */\n              iszero\n              tag_126\n              jumpi\n                /* \"#utility.yul\":760:761   */\n              0x00\n                /* \"#utility.yul\":757:758   */\n              0x00\n                /* \"#utility.yul\":750:762   */\n              revert\n                /* \"#utility.yul\":712:764   */\n            tag_126:\n                /* \"#utility.yul\":783:812   */\n              tag_127\n                /* \"#utility.yul\":802:811   */\n              dup4\n                /* \"#utility.yul\":783:812   */\n              tag_120\n              jump\t// in\n            tag_127:\n                /* \"#utility.yul\":773:812   */\n              swap5\n                /* \"#utility.yul\":881:883   */\n              0x20\n                /* \"#utility.yul\":866:884   */\n              swap4\n              swap1\n              swap4\n              add\n                /* \"#utility.yul\":853:885   */\n              calldataload\n              swap4\n              pop\n              pop\n              pop\n                /* \"#utility.yul\":615:915   */\n              jump\t// out\n                /* \"#utility.yul\":1294:1668   */\n            tag_29:\n                /* \"#utility.yul\":1371:1377   */\n              0x00\n                /* \"#utility.yul\":1379:1385   */\n              0x00\n                /* \"#utility.yul\":1387:1393   */\n              0x00\n                /* \"#utility.yul\":1440:1442   */\n              0x60\n                /* \"#utility.yul\":1428:1437   */\n              dup5\n                /* \"#utility.yul\":1419:1426   */\n              dup7\n                /* \"#utility.yul\":1415:1438   */\n              sub\n                /* \"#utility.yul\":1411:1443   */\n              slt\n                /* \"#utility.yul\":1408:1460   */\n              iszero\n              tag_131\n              jumpi\n                /* \"#utility.yul\":1456:1457   */\n              0x00\n                /* \"#utility.yul\":1453:1454   */\n              0x00\n                /* \"#utility.yul\":1446:1458   */\n              revert\n                /* \"#utility.yul\":1408:1460   */\n            tag_131:\n                /* \"#utility.yul\":1479:1508   */\n              tag_132\n                /* \"#utility.yul\":1498:1507   */\n              dup5\n                /* \"#utility.yul\":1479:1508   */\n              tag_120\n              jump\t// in\n            tag_132:\n                /* \"#utility.yul\":1469:1508   */\n              swap3\n              pop\n                /* \"#utility.yul\":1527:1565   */\n              tag_133\n                /* \"#utility.yul\":1561:1563   */\n              0x20\n                /* \"#utility.yul\":1550:1559   */\n              dup6\n                /* \"#utility.yul\":1546:1564   */\n              add\n                /* \"#utility.yul\":1527:1565   */\n              tag_120\n              jump\t// in\n            tag_133:\n                /* \"#utility.yul\":1294:1668   */\n              swap3\n              swap6\n                /* \"#utility.yul\":1517:1565   */\n              swap3\n              swap5\n              pop\n              pop\n              pop\n                /* \"#utility.yul\":1634:1636   */\n              0x40\n                /* \"#utility.yul\":1619:1637   */\n              swap2\n              swap1\n              swap2\n              add\n                /* \"#utility.yul\":1606:1638   */\n              calldataload\n              swap1\n                /* \"#utility.yul\":1294:1668   */\n              jump\t// out\n                /* \"#utility.yul\":1862:2048   */\n            tag_38:\n                /* \"#utility.yul\":1921:1927   */\n              0x00\n                /* \"#utility.yul\":1974:1976   */\n              0x20\n                /* \"#utility.yul\":1962:1971   */\n              dup3\n                /* \"#utility.yul\":1953:1960   */\n              dup5\n                /* \"#utility.yul\":1949:1972   */\n              sub\n                /* \"#utility.yul\":1945:1977   */\n              slt\n                /* \"#utility.yul\":1942:1994   */\n              iszero\n              tag_136\n              jumpi\n                /* \"#utility.yul\":1990:1991   */\n              0x00\n                /* \"#utility.yul\":1987:1988   */\n              0x00\n                /* \"#utility.yul\":1980:1992   */\n              revert\n                /* \"#utility.yul\":1942:1994   */\n            tag_136:\n                /* \"#utility.yul\":2013:2042   */\n              tag_137\n                /* \"#utility.yul\":2032:2041   */\n              dup3\n                /* \"#utility.yul\":2013:2042   */\n              tag_120\n              jump\t// in\n            tag_137:\n                /* \"#utility.yul\":2003:2042   */\n              swap4\n                /* \"#utility.yul\":1862:2048   */\n              swap3\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2053:2313   */\n            tag_50:\n                /* \"#utility.yul\":2121:2127   */\n              0x00\n                /* \"#utility.yul\":2129:2135   */\n              0x00\n                /* \"#utility.yul\":2182:2184   */\n              0x40\n                /* \"#utility.yul\":2170:2179   */\n              dup4\n                /* \"#utility.yul\":2161:2168   */\n              dup6\n                /* \"#utility.yul\":2157:2180   */\n              sub\n                /* \"#utility.yul\":2153:2185   */\n              slt\n                /* \"#utility.yul\":2150:2202   */\n              iszero\n              tag_139\n              jumpi\n                /* \"#utility.yul\":2198:2199   */\n              0x00\n                /* \"#utility.yul\":2195:2196   */\n              0x00\n                /* \"#utility.yul\":2188:2200   */\n              revert\n                /* \"#utility.yul\":2150:2202   */\n            tag_139:\n                /* \"#utility.yul\":2221:2250   */\n              tag_140\n                /* \"#utility.yul\":2240:2249   */\n              dup4\n                /* \"#utility.yul\":2221:2250   */\n              tag_120\n              jump\t// in\n            tag_140:\n                /* \"#utility.yul\":2211:2250   */\n              swap2\n              pop\n                /* \"#utility.yul\":2269:2307   */\n              tag_141\n                /* \"#utility.yul\":2303:2305   */\n              0x20\n                /* \"#utility.yul\":2292:2301   */\n              dup5\n                /* \"#utility.yul\":2288:2306   */\n              add\n                /* \"#utility.yul\":2269:2307   */\n              tag_120\n              jump\t// in\n            tag_141:\n                /* \"#utility.yul\":2259:2307   */\n              swap1\n              pop\n                /* \"#utility.yul\":2053:2313   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2318:2698   */\n            tag_55:\n                /* \"#utility.yul\":2397:2398   */\n              0x01\n                /* \"#utility.yul\":2393:2405   */\n              dup2\n              dup2\n              shr\n              swap1\n                /* \"#utility.yul\":2440:2452   */\n              dup3\n              and\n              dup1\n                /* \"#utility.yul\":2461:2522   */\n              tag_143\n              jumpi\n                /* \"#utility.yul\":2515:2519   */\n              0x7f\n                /* \"#utility.yul\":2507:2513   */\n              dup3\n                /* \"#utility.yul\":2503:2520   */\n              and\n                /* \"#utility.yul\":2493:2520   */\n              swap2\n              pop\n                /* \"#utility.yul\":2461:2522   */\n            tag_143:\n                /* \"#utility.yul\":2568:2570   */\n              0x20\n                /* \"#utility.yul\":2560:2566   */\n              dup3\n                /* \"#utility.yul\":2557:2571   */\n              lt\n                /* \"#utility.yul\":2537:2555   */\n              dup2\n                /* \"#utility.yul\":2534:2572   */\n              sub\n                /* \"#utility.yul\":2531:2692   */\n              tag_144\n              jumpi\n                /* \"#utility.yul\":2614:2624   */\n              0x4e487b71\n                /* \"#utility.yul\":2609:2612   */\n              0xe0\n                /* \"#utility.yul\":2605:2625   */\n              shl\n                /* \"#utility.yul\":2602:2603   */\n              0x00\n                /* \"#utility.yul\":2595:2626   */\n              mstore\n                /* \"#utility.yul\":2649:2653   */\n              0x22\n                /* \"#utility.yul\":2646:2647   */\n              0x04\n                /* \"#utility.yul\":2639:2654   */\n              mstore\n                /* \"#utility.yul\":2677:2681   */\n              0x24\n                /* \"#utility.yul\":2674:2675   */\n              0x00\n                /* \"#utility.yul\":2667:2682   */\n              revert\n                /* \"#utility.yul\":2531:2692   */\n            tag_144:\n              pop\n                /* \"#utility.yul\":2318:2698   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3261:3483   */\n            tag_113:\n                /* \"#utility.yul\":3326:3335   */\n              dup1\n              dup3\n              add\n                /* \"#utility.yul\":3347:3357   */\n              dup1\n              dup3\n              gt\n                /* \"#utility.yul\":3344:3477   */\n              iszero\n              tag_60\n              jumpi\n                /* \"#utility.yul\":3399:3409   */\n              0x4e487b71\n                /* \"#utility.yul\":3394:3397   */\n              0xe0\n                /* \"#utility.yul\":3390:3410   */\n              shl\n                /* \"#utility.yul\":3387:3388   */\n              0x00\n                /* \"#utility.yul\":3380:3411   */\n              mstore\n                /* \"#utility.yul\":3434:3438   */\n              0x11\n                /* \"#utility.yul\":3431:3432   */\n              0x04\n                /* \"#utility.yul\":3424:3439   */\n              mstore\n                /* \"#utility.yul\":3462:3466   */\n              0x24\n                /* \"#utility.yul\":3459:3460   */\n              0x00\n                /* \"#utility.yul\":3452:3467   */\n              revert\n\n            auxdata: 0xa26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220f3746969b98b3b7ee3d642eeaff7bc3a3cf9bf49ac0caebf9952570eb1b3cd3464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x10D4 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B060530 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x622AE7AA EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xEC81AADB EQ PUSH2 0x76 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x299 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH2 0xBF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH32 0x75D1EB2D61D7E210835BC16E78AC4D0E4F905C108A81852A6B68C4D46B4F40F3 SWAP1 PUSH2 0x159 SWAP1 DUP4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC7A DUP1 PUSH2 0x425 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x266 JUMPI PUSH2 0x266 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x27D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2CD DUP7 DUP3 DUP8 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2F5 DUP7 DUP3 DUP8 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x320 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x362 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x3A9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x369 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3BB DUP2 DUP8 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x400 SWAP1 DUP4 ADD DUP7 PUSH2 0x369 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x412 DUP2 DUP7 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC7A CODESIZE SUB DUP1 PUSH2 0xC7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x286 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x397 JUMP JUMPDEST POP POP POP PUSH2 0x78 DUP2 PUSH2 0x5E PUSH2 0x81 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x69 SWAP1 PUSH1 0xA PUSH2 0x54A JUMP JUMPDEST PUSH2 0x73 SWAP1 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST POP POP POP POP PUSH2 0x589 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF PUSH0 DUP4 DUP4 PUSH2 0xC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x179 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x197 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x225 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x253 JUMPI PUSH2 0x253 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2BA DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2E3 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x308 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x327 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x345 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x392 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x370 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x3BE DUP5 SLOAD PUSH2 0x313 JUMP JUMPDEST DUP5 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3DF JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x38F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x442 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4A0 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x492 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x469 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4B6 JUMPI POP PUSH1 0x1 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH2 0x4C2 JUMPI POP PUSH0 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4E2 JUMPI PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x544 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F3 PUSH2 0x451 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x544 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x521 JUMPI POP DUP2 DUP2 EXP PUSH2 0x544 JUMP JUMPDEST PUSH2 0x52D PUSH0 NOT DUP5 DUP5 PUSH2 0x465 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x540 JUMPI PUSH2 0x540 PUSH2 0x451 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x558 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x6E4 DUP1 PUSH2 0x596 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x458 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5BE DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E7 DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F5 PUSH1 0x20 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x640 DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP PUSH2 0x64E PUSH1 0x20 DUP5 ADD PUSH2 0x589 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x66B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x689 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BASEFEE DUP10 0xDE PUSH1 0xD5 0x4C EQ PUSH23 0x29951E9B4E19EB6AA3E6772C1A1B845B7A1DFD6A951D86 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH21 0x6969B98B3B7EE3D642EEAFF7BC3A3CF9BF49AC0CAE 0xBF SWAP10 MSTORE JUMPI 0xE 0xB1 0xB3 0xCD CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "120:578:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createToken_843": {
									"entryPoint": 161,
									"id": 843,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@deployedTokens_791": {
									"entryPoint": 454,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDeployedTokens_852": {
									"entryPoint": 359,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4022:6",
										"nodeType": "YulBlock",
										"src": "0:4022:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "199:673:6",
													"nodeType": "YulBlock",
													"src": "199:673:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "248:16:6",
																"nodeType": "YulBlock",
																"src": "248:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "257:1:6",
																					"nodeType": "YulLiteral",
																					"src": "257:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "260:1:6",
																					"nodeType": "YulLiteral",
																					"src": "260:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "250:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "250:6:6"
																			},
																			"nativeSrc": "250:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "250:12:6"
																		},
																		"nativeSrc": "250:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "250:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "227:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "227:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "235:4:6",
																						"nodeType": "YulLiteral",
																						"src": "235:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "223:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "223:3:6"
																				},
																				"nativeSrc": "223:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "223:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "242:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "219:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "219:3:6"
																		},
																		"nativeSrc": "219:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "219:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "212:6:6"
																},
																"nativeSrc": "212:35:6",
																"nodeType": "YulFunctionCall",
																"src": "212:35:6"
															},
															"nativeSrc": "209:55:6",
															"nodeType": "YulIf",
															"src": "209:55:6"
														},
														{
															"nativeSrc": "273:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "273:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "287:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "287:12:6"
																},
																"nativeSrc": "287:20:6",
																"nodeType": "YulFunctionCall",
																"src": "287:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "277:6:6",
																	"nodeType": "YulTypedName",
																	"src": "277:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "350:22:6",
																"nodeType": "YulBlock",
																"src": "350:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "352:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "352:16:6"
																			},
																			"nativeSrc": "352:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "352:18:6"
																		},
																		"nativeSrc": "352:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "352:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "322:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "330:18:6",
																		"nodeType": "YulLiteral",
																		"src": "330:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "319:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "319:2:6"
																},
																"nativeSrc": "319:30:6",
																"nodeType": "YulFunctionCall",
																"src": "319:30:6"
															},
															"nativeSrc": "316:56:6",
															"nodeType": "YulIf",
															"src": "316:56:6"
														},
														{
															"nativeSrc": "381:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "381:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "401:2:6",
																		"nodeType": "YulLiteral",
																		"src": "401:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "395:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:6"
																},
																"nativeSrc": "395:9:6",
																"nodeType": "YulFunctionCall",
																"src": "395:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "385:6:6",
																	"nodeType": "YulTypedName",
																	"src": "385:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "413:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "413:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "435:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "435:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "459:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "459:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "467:4:6",
																										"nodeType": "YulLiteral",
																										"src": "467:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "455:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "455:3:6"
																								},
																								"nativeSrc": "455:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "455:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "478:2:6",
																										"nodeType": "YulLiteral",
																										"src": "478:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "474:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "474:3:6"
																								},
																								"nativeSrc": "474:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "474:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "451:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:6"
																						},
																						"nativeSrc": "451:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "451:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "484:2:6",
																						"nodeType": "YulLiteral",
																						"src": "484:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "447:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "447:3:6"
																				},
																				"nativeSrc": "447:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "447:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "493:2:6",
																						"nodeType": "YulLiteral",
																						"src": "493:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "489:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "489:3:6"
																				},
																				"nativeSrc": "489:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "489:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:6"
																		},
																		"nativeSrc": "443:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "443:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "431:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "431:3:6"
																},
																"nativeSrc": "431:67:6",
																"nodeType": "YulFunctionCall",
																"src": "431:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "417:10:6",
																	"nodeType": "YulTypedName",
																	"src": "417:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "573:22:6",
																"nodeType": "YulBlock",
																"src": "573:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "575:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "575:16:6"
																			},
																			"nativeSrc": "575:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "575:18:6"
																		},
																		"nativeSrc": "575:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "575:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "516:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "516:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "528:18:6",
																				"nodeType": "YulLiteral",
																				"src": "528:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "513:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "513:2:6"
																		},
																		"nativeSrc": "513:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "513:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "552:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "552:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "564:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "549:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "549:2:6"
																		},
																		"nativeSrc": "549:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "549:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "510:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "510:2:6"
																},
																"nativeSrc": "510:62:6",
																"nodeType": "YulFunctionCall",
																"src": "510:62:6"
															},
															"nativeSrc": "507:88:6",
															"nodeType": "YulIf",
															"src": "507:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "611:2:6",
																		"nodeType": "YulLiteral",
																		"src": "611:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "615:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "615:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "604:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "604:6:6"
																},
																"nativeSrc": "604:22:6",
																"nodeType": "YulFunctionCall",
																"src": "604:22:6"
															},
															"nativeSrc": "604:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "604:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "642:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "650:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "635:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:6"
																},
																"nativeSrc": "635:22:6",
																"nodeType": "YulFunctionCall",
																"src": "635:22:6"
															},
															"nativeSrc": "635:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "635:22:6"
														},
														{
															"body": {
																"nativeSrc": "709:16:6",
																"nodeType": "YulBlock",
																"src": "709:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "718:1:6",
																					"nodeType": "YulLiteral",
																					"src": "718:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:6",
																					"nodeType": "YulLiteral",
																					"src": "721:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "711:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "711:6:6"
																			},
																			"nativeSrc": "711:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "711:12:6"
																		},
																		"nativeSrc": "711:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "711:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "680:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "680:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "688:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "688:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "676:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "676:3:6"
																				},
																				"nativeSrc": "676:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "676:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "697:4:6",
																				"nodeType": "YulLiteral",
																				"src": "697:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "672:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nativeSrc": "672:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "672:30:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "704:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "704:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "669:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "669:2:6"
																},
																"nativeSrc": "669:39:6",
																"nodeType": "YulFunctionCall",
																"src": "669:39:6"
															},
															"nativeSrc": "666:59:6",
															"nodeType": "YulIf",
															"src": "666:59:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "751:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:6",
																				"nodeType": "YulLiteral",
																				"src": "759:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "747:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:6"
																		},
																		"nativeSrc": "747:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "747:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "770:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "778:4:6",
																				"nodeType": "YulLiteral",
																				"src": "778:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "766:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:6"
																		},
																		"nativeSrc": "766:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "785:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "734:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "734:12:6"
																},
																"nativeSrc": "734:58:6",
																"nodeType": "YulFunctionCall",
																"src": "734:58:6"
															},
															"nativeSrc": "734:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "734:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "816:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "816:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "824:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "824:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "812:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "812:3:6"
																				},
																				"nativeSrc": "812:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "812:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "833:4:6",
																				"nodeType": "YulLiteral",
																				"src": "833:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:6"
																		},
																		"nativeSrc": "808:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "808:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:6",
																		"nodeType": "YulLiteral",
																		"src": "840:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:6"
																},
																"nativeSrc": "801:41:6",
																"nodeType": "YulFunctionCall",
																"src": "801:41:6"
															},
															"nativeSrc": "801:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "801:41:6"
														},
														{
															"nativeSrc": "851:15:6",
															"nodeType": "YulAssignment",
															"src": "851:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "860:6:6",
																"nodeType": "YulIdentifier",
																"src": "860:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "851:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "851:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "146:726:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "173:6:6",
														"nodeType": "YulTypedName",
														"src": "173:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "181:3:6",
														"nodeType": "YulTypedName",
														"src": "181:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "189:5:6",
														"nodeType": "YulTypedName",
														"src": "189:5:6",
														"type": ""
													}
												],
												"src": "146:726:6"
											},
											{
												"body": {
													"nativeSrc": "1001:528:6",
													"nodeType": "YulBlock",
													"src": "1001:528:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1047:16:6",
																"nodeType": "YulBlock",
																"src": "1047:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1056:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1056:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1059:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1059:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1049:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1049:6:6"
																			},
																			"nativeSrc": "1049:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1049:12:6"
																		},
																		"nativeSrc": "1049:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1049:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1022:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1022:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1031:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1031:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:6"
																		},
																		"nativeSrc": "1018:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1018:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1043:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1014:3:6"
																},
																"nativeSrc": "1014:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1014:32:6"
															},
															"nativeSrc": "1011:52:6",
															"nodeType": "YulIf",
															"src": "1011:52:6"
														},
														{
															"nativeSrc": "1072:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1072:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1099:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1086:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1086:12:6"
																},
																"nativeSrc": "1086:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1086:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1076:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1076:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1152:16:6",
																"nodeType": "YulBlock",
																"src": "1152:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1164:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1154:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1154:6:6"
																			},
																			"nativeSrc": "1154:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1154:12:6"
																		},
																		"nativeSrc": "1154:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1154:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1124:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1124:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1132:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1121:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:2:6"
																},
																"nativeSrc": "1121:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1121:30:6"
															},
															"nativeSrc": "1118:50:6",
															"nodeType": "YulIf",
															"src": "1118:50:6"
														},
														{
															"nativeSrc": "1177:60:6",
															"nodeType": "YulAssignment",
															"src": "1177:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1209:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1220:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1220:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1205:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:6"
																		},
																		"nativeSrc": "1205:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1205:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1229:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1229:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1187:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1187:17:6"
																},
																"nativeSrc": "1187:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1187:50:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1177:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:6"
																}
															]
														},
														{
															"nativeSrc": "1246:48:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1246:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1290:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1290:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:6"
																		},
																		"nativeSrc": "1275:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1275:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1262:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1262:12:6"
																},
																"nativeSrc": "1262:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1250:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1250:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1339:16:6",
																"nodeType": "YulBlock",
																"src": "1339:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1348:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1348:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1351:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1351:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1341:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1341:6:6"
																			},
																			"nativeSrc": "1341:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1341:12:6"
																		},
																		"nativeSrc": "1341:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1341:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1309:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1309:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1319:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1319:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1306:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1306:2:6"
																},
																"nativeSrc": "1306:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1306:32:6"
															},
															"nativeSrc": "1303:52:6",
															"nodeType": "YulIf",
															"src": "1303:52:6"
														},
														{
															"nativeSrc": "1364:62:6",
															"nodeType": "YulAssignment",
															"src": "1364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1396:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1407:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1407:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1392:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:6"
																		},
																		"nativeSrc": "1392:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1392:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1418:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1418:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1374:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1374:17:6"
																},
																"nativeSrc": "1374:52:6",
																"nodeType": "YulFunctionCall",
																"src": "1374:52:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1364:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:6"
																}
															]
														},
														{
															"nativeSrc": "1435:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1435:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1448:1:6",
																"nodeType": "YulLiteral",
																"src": "1448:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1439:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1439:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1458:41:6",
															"nodeType": "YulAssignment",
															"src": "1458:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1484:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1495:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1495:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1480:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:6"
																		},
																		"nativeSrc": "1480:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1480:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1467:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1467:12:6"
																},
																"nativeSrc": "1467:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1467:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1458:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1458:5:6"
																}
															]
														},
														{
															"nativeSrc": "1508:15:6",
															"nodeType": "YulAssignment",
															"src": "1508:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1518:5:6",
																"nodeType": "YulIdentifier",
																"src": "1518:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1508:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "877:652:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "951:9:6",
														"nodeType": "YulTypedName",
														"src": "951:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "962:7:6",
														"nodeType": "YulTypedName",
														"src": "962:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "974:6:6",
														"nodeType": "YulTypedName",
														"src": "974:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "982:6:6",
														"nodeType": "YulTypedName",
														"src": "982:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "990:6:6",
														"nodeType": "YulTypedName",
														"src": "990:6:6",
														"type": ""
													}
												],
												"src": "877:652:6"
											},
											{
												"body": {
													"nativeSrc": "1685:486:6",
													"nodeType": "YulBlock",
													"src": "1685:486:6",
													"statements": [
														{
															"nativeSrc": "1695:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1695:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1713:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1713:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1724:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1724:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1709:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:6"
																},
																"nativeSrc": "1709:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1709:18:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1699:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1699:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1743:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1754:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1754:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1736:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:6"
																},
																"nativeSrc": "1736:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1736:21:6"
															},
															"nativeSrc": "1736:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1736:21:6"
														},
														{
															"nativeSrc": "1766:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1766:17:6",
															"value": {
																"name": "tail_1",
																"nativeSrc": "1777:6:6",
																"nodeType": "YulIdentifier",
																"src": "1777:6:6"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1770:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1770:3:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1792:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1792:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1812:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1806:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1806:5:6"
																},
																"nativeSrc": "1806:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1806:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1796:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1796:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "1835:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1843:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1843:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1828:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:6"
																},
																"nativeSrc": "1828:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1828:22:6"
															},
															"nativeSrc": "1828:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1828:22:6"
														},
														{
															"nativeSrc": "1859:25:6",
															"nodeType": "YulAssignment",
															"src": "1859:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1870:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1881:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:6"
																},
																"nativeSrc": "1866:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1866:18:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:6"
																}
															]
														},
														{
															"nativeSrc": "1893:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1893:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1911:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1911:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1919:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1919:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1907:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:6"
																},
																"nativeSrc": "1907:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1907:15:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1897:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1897:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1931:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1931:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1940:1:6",
																"nodeType": "YulLiteral",
																"src": "1940:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1935:1:6",
																	"nodeType": "YulTypedName",
																	"src": "1935:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1999:146:6",
																"nodeType": "YulBlock",
																"src": "1999:146:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2020:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2020:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2035:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2035:6:6"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2029:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2029:5:6"
																							},
																							"nativeSrc": "2029:13:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2029:13:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2052:3:6",
																											"nodeType": "YulLiteral",
																											"src": "2052:3:6",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2057:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2057:1:6",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2048:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2048:3:6"
																									},
																									"nativeSrc": "2048:11:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2048:11:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2061:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2061:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2044:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2044:3:6"
																							},
																							"nativeSrc": "2044:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2044:19:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2025:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2025:3:6"
																					},
																					"nativeSrc": "2025:39:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2025:39:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2013:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:6"
																			},
																			"nativeSrc": "2013:52:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2013:52:6"
																		},
																		"nativeSrc": "2013:52:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:52:6"
																	},
																	{
																		"nativeSrc": "2078:19:6",
																		"nodeType": "YulAssignment",
																		"src": "2078:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2089:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2089:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2094:2:6",
																					"nodeType": "YulLiteral",
																					"src": "2094:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2085:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2085:3:6"
																			},
																			"nativeSrc": "2085:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2085:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2078:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2078:3:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2110:25:6",
																		"nodeType": "YulAssignment",
																		"src": "2110:25:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2124:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2124:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2132:2:6",
																					"nodeType": "YulLiteral",
																					"src": "2132:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2120:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2120:3:6"
																			},
																			"nativeSrc": "2120:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2110:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1961:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1961:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1964:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1958:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1958:2:6"
																},
																"nativeSrc": "1958:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1958:13:6"
															},
															"nativeSrc": "1950:195:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1972:18:6",
																"nodeType": "YulBlock",
																"src": "1972:18:6",
																"statements": [
																	{
																		"nativeSrc": "1974:14:6",
																		"nodeType": "YulAssignment",
																		"src": "1974:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1983:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "1983:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1986:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1979:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1979:3:6"
																			},
																			"nativeSrc": "1979:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1979:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1974:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "1974:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1954:3:6",
																"nodeType": "YulBlock",
																"src": "1954:3:6",
																"statements": []
															},
															"src": "1950:195:6"
														},
														{
															"nativeSrc": "2154:11:6",
															"nodeType": "YulAssignment",
															"src": "2154:11:6",
															"value": {
																"name": "pos",
																"nativeSrc": "2162:3:6",
																"nodeType": "YulIdentifier",
																"src": "2162:3:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2154:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1534:637:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1654:9:6",
														"nodeType": "YulTypedName",
														"src": "1654:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1665:6:6",
														"nodeType": "YulTypedName",
														"src": "1665:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1676:4:6",
														"nodeType": "YulTypedName",
														"src": "1676:4:6",
														"type": ""
													}
												],
												"src": "1534:637:6"
											},
											{
												"body": {
													"nativeSrc": "2246:156:6",
													"nodeType": "YulBlock",
													"src": "2246:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2292:16:6",
																"nodeType": "YulBlock",
																"src": "2292:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2301:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2301:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2304:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2294:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2294:6:6"
																			},
																			"nativeSrc": "2294:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2294:12:6"
																		},
																		"nativeSrc": "2294:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2294:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2267:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2267:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2276:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2276:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2263:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:6"
																		},
																		"nativeSrc": "2263:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2288:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2288:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2259:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:6"
																},
																"nativeSrc": "2259:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2259:32:6"
															},
															"nativeSrc": "2256:52:6",
															"nodeType": "YulIf",
															"src": "2256:52:6"
														},
														{
															"nativeSrc": "2317:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2317:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2330:1:6",
																"nodeType": "YulLiteral",
																"src": "2330:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2321:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2321:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2340:32:6",
															"nodeType": "YulAssignment",
															"src": "2340:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2362:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2362:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2349:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:12:6"
																},
																"nativeSrc": "2349:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2349:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2340:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2340:5:6"
																}
															]
														},
														{
															"nativeSrc": "2381:15:6",
															"nodeType": "YulAssignment",
															"src": "2381:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2391:5:6",
																"nodeType": "YulIdentifier",
																"src": "2391:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2381:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2176:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2212:9:6",
														"nodeType": "YulTypedName",
														"src": "2212:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2223:7:6",
														"nodeType": "YulTypedName",
														"src": "2223:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2235:6:6",
														"nodeType": "YulTypedName",
														"src": "2235:6:6",
														"type": ""
													}
												],
												"src": "2176:226:6"
											},
											{
												"body": {
													"nativeSrc": "2508:102:6",
													"nodeType": "YulBlock",
													"src": "2508:102:6",
													"statements": [
														{
															"nativeSrc": "2518:26:6",
															"nodeType": "YulAssignment",
															"src": "2518:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2530:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2541:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2526:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2526:3:6"
																},
																"nativeSrc": "2526:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2526:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2518:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2518:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2560:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2560:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2575:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2591:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2591:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2596:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2596:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2587:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2587:3:6"
																						},
																						"nativeSrc": "2587:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2587:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2600:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2600:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2583:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2583:3:6"
																				},
																				"nativeSrc": "2583:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2583:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2571:3:6"
																		},
																		"nativeSrc": "2571:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2571:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:6"
																},
																"nativeSrc": "2553:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2553:51:6"
															},
															"nativeSrc": "2553:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2553:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2407:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2488:6:6",
														"nodeType": "YulTypedName",
														"src": "2488:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2499:4:6",
														"nodeType": "YulTypedName",
														"src": "2499:4:6",
														"type": ""
													}
												],
												"src": "2407:203:6"
											},
											{
												"body": {
													"nativeSrc": "2665:239:6",
													"nodeType": "YulBlock",
													"src": "2665:239:6",
													"statements": [
														{
															"nativeSrc": "2675:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2675:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2695:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2695:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2689:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2689:5:6"
																},
																"nativeSrc": "2689:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2689:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2679:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2679:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2717:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2717:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2722:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2722:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2710:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:6"
																},
																"nativeSrc": "2710:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2710:19:6"
															},
															"nativeSrc": "2710:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2710:19:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2748:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2748:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2753:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2753:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:6"
																		},
																		"nativeSrc": "2744:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2764:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2771:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2771:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:6"
																		},
																		"nativeSrc": "2760:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:16:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2778:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2778:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2738:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2738:5:6"
																},
																"nativeSrc": "2738:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2738:47:6"
															},
															"nativeSrc": "2738:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2738:47:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2809:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2809:3:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2814:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2814:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2805:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:6"
																				},
																				"nativeSrc": "2805:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2805:16:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2823:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2823:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2801:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:6"
																		},
																		"nativeSrc": "2801:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:27:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2830:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2794:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:6"
																},
																"nativeSrc": "2794:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2794:38:6"
															},
															"nativeSrc": "2794:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "2794:38:6"
														},
														{
															"nativeSrc": "2841:57:6",
															"nodeType": "YulAssignment",
															"src": "2841:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2856:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2856:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2869:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "2869:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2877:2:6",
																								"nodeType": "YulLiteral",
																								"src": "2877:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2865:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2865:3:6"
																						},
																						"nativeSrc": "2865:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2865:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2886:2:6",
																								"nodeType": "YulLiteral",
																								"src": "2886:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2882:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2882:3:6"
																						},
																						"nativeSrc": "2882:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2882:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2861:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2861:3:6"
																				},
																				"nativeSrc": "2861:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2861:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:6"
																		},
																		"nativeSrc": "2852:39:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:39:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2893:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2893:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2848:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:6"
																},
																"nativeSrc": "2848:50:6",
																"nodeType": "YulFunctionCall",
																"src": "2848:50:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2841:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "2615:289:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2642:5:6",
														"nodeType": "YulTypedName",
														"src": "2642:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2649:3:6",
														"nodeType": "YulTypedName",
														"src": "2649:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2657:3:6",
														"nodeType": "YulTypedName",
														"src": "2657:3:6",
														"type": ""
													}
												],
												"src": "2615:289:6"
											},
											{
												"body": {
													"nativeSrc": "3134:328:6",
													"nodeType": "YulBlock",
													"src": "3134:328:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3151:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3162:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3162:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:6"
																},
																"nativeSrc": "3144:22:6",
																"nodeType": "YulFunctionCall",
																"src": "3144:22:6"
															},
															"nativeSrc": "3144:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "3144:22:6"
														},
														{
															"nativeSrc": "3175:60:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3175:60:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3207:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3207:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3219:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3219:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3230:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3230:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3215:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:6"
																		},
																		"nativeSrc": "3215:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3189:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3189:17:6"
																},
																"nativeSrc": "3189:46:6",
																"nodeType": "YulFunctionCall",
																"src": "3189:46:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3255:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3266:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3266:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3251:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:6"
																		},
																		"nativeSrc": "3251:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3275:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3275:6:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3283:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3283:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3271:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3271:3:6"
																		},
																		"nativeSrc": "3271:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3271:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3244:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:6"
																},
																"nativeSrc": "3244:50:6",
																"nodeType": "YulFunctionCall",
																"src": "3244:50:6"
															},
															"nativeSrc": "3244:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "3244:50:6"
														},
														{
															"nativeSrc": "3303:41:6",
															"nodeType": "YulAssignment",
															"src": "3303:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3329:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3329:6:6"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3337:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3337:6:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3311:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3311:17:6"
																},
																"nativeSrc": "3311:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3311:33:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3303:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3303:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3364:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3364:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3375:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3375:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3360:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:6"
																		},
																		"nativeSrc": "3360:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3360:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3380:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3353:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:6"
																},
																"nativeSrc": "3353:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3353:34:6"
															},
															"nativeSrc": "3353:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3353:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3407:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3418:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3418:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3403:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:6"
																		},
																		"nativeSrc": "3403:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "3427:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3427:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3443:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3443:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3448:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3448:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3439:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3439:3:6"
																						},
																						"nativeSrc": "3439:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3439:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3452:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3452:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3435:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3435:3:6"
																				},
																				"nativeSrc": "3435:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3435:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3423:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:6"
																		},
																		"nativeSrc": "3423:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3423:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3396:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:6"
																},
																"nativeSrc": "3396:60:6",
																"nodeType": "YulFunctionCall",
																"src": "3396:60:6"
															},
															"nativeSrc": "3396:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "3396:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "2909:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3079:9:6",
														"nodeType": "YulTypedName",
														"src": "3079:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3090:6:6",
														"nodeType": "YulTypedName",
														"src": "3090:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3098:6:6",
														"nodeType": "YulTypedName",
														"src": "3098:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3106:6:6",
														"nodeType": "YulTypedName",
														"src": "3106:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3114:6:6",
														"nodeType": "YulTypedName",
														"src": "3114:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3125:4:6",
														"nodeType": "YulTypedName",
														"src": "3125:4:6",
														"type": ""
													}
												],
												"src": "2909:553:6"
											},
											{
												"body": {
													"nativeSrc": "3692:328:6",
													"nodeType": "YulBlock",
													"src": "3692:328:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3709:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3709:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3724:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3724:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3740:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3740:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3745:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3745:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3736:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3736:3:6"
																						},
																						"nativeSrc": "3736:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3736:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3749:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3749:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3732:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3732:3:6"
																				},
																				"nativeSrc": "3732:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3732:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3720:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:6"
																		},
																		"nativeSrc": "3720:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3720:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:6"
																},
																"nativeSrc": "3702:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3702:51:6"
															},
															"nativeSrc": "3702:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3702:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3784:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:6"
																		},
																		"nativeSrc": "3769:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3789:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3789:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:6"
																},
																"nativeSrc": "3762:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3762:31:6"
															},
															"nativeSrc": "3762:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3762:31:6"
														},
														{
															"nativeSrc": "3802:60:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3802:60:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3846:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3846:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3857:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3857:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3842:3:6"
																		},
																		"nativeSrc": "3842:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3842:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3816:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3816:17:6"
																},
																"nativeSrc": "3816:46:6",
																"nodeType": "YulFunctionCall",
																"src": "3816:46:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3806:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3806:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3882:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3893:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3878:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:6"
																		},
																		"nativeSrc": "3878:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3902:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3902:6:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3910:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3898:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3898:3:6"
																		},
																		"nativeSrc": "3898:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:6"
																},
																"nativeSrc": "3871:50:6",
																"nodeType": "YulFunctionCall",
																"src": "3871:50:6"
															},
															"nativeSrc": "3871:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "3871:50:6"
														},
														{
															"nativeSrc": "3930:41:6",
															"nodeType": "YulAssignment",
															"src": "3930:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3956:6:6"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3964:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3964:6:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3938:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3938:17:6"
																},
																"nativeSrc": "3938:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3938:33:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3930:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3930:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3991:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3991:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4002:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4002:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:6"
																		},
																		"nativeSrc": "3987:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:18:6"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4007:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4007:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3980:6:6"
																},
																"nativeSrc": "3980:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3980:34:6"
															},
															"nativeSrc": "3980:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3980:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "3467:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3637:9:6",
														"nodeType": "YulTypedName",
														"src": "3637:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3648:6:6",
														"nodeType": "YulTypedName",
														"src": "3648:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3656:6:6",
														"nodeType": "YulTypedName",
														"src": "3656:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3664:6:6",
														"nodeType": "YulTypedName",
														"src": "3664:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3672:6:6",
														"nodeType": "YulTypedName",
														"src": "3672:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3683:4:6",
														"nodeType": "YulTypedName",
														"src": "3683:4:6",
														"type": ""
													}
												],
												"src": "3467:553:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80635b06053014610043578063622ae7aa14610058578063ec81aadb14610076575b5f5ffd5b610056610051366004610299565b6100a1565b005b610060610167565b60405161006d9190610307565b60405180910390f35b610089610084366004610352565b6101c6565b6040516001600160a01b03909116815260200161006d565b5f838383336040516100b2906101ed565b6100bf9493929190610397565b604051809103905ff0801580156100d8573d5f5f3e3d5ffd5b505f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383161790556040519091507f75d1eb2d61d7e210835bc16e78ac4d0e4f905c108a81852a6b68c4d46b4f40f3906101599083908790879087906103dd565b60405180910390a150505050565b60605f8054806020026020016040519081016040528092919081815260200182805480156101bc57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161019e575b5050505050905090565b5f81815481106101d4575f80fd5b5f918252602090912001546001600160a01b0316905081565b610c7a8061042583390190565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261021d575f5ffd5b813567ffffffffffffffff811115610237576102376101fa565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610266576102666101fa565b60405281815283820160200185101561027d575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156102ab575f5ffd5b833567ffffffffffffffff8111156102c1575f5ffd5b6102cd8682870161020e565b935050602084013567ffffffffffffffff8111156102e9575f5ffd5b6102f58682870161020e565b93969395505050506040919091013590565b602080825282518282018190525f918401906040840190835b818110156103475783516001600160a01b0316835260209384019390920191600101610320565b509095945050505050565b5f60208284031215610362575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b608081525f6103a96080830187610369565b82810360208401526103bb8187610369565b604084019590955250506001600160a01b039190911660609091015292915050565b6001600160a01b03851681526080602082018190525f9061040090830186610369565b82810360408401526104128186610369565b9150508260608301529594505050505056fe608060405234801561000f575f5ffd5b50604051610c7a380380610c7a83398101604081905261002e91610286565b8383600361003c8382610397565b5060046100498282610397565b5050506100788161005e61008160201b60201c565b61006990600a61054a565b610073908561055f565b610086565b50505050610589565b601290565b6001600160a01b0382166100b45760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6100bf5f83836100c3565b5050565b6001600160a01b0383166100ed578060025f8282546100e29190610576565b9091555061015d9050565b6001600160a01b0383165f908152602081905260409020548181101561013f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ab565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661017957600280548290039055610197565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101dc91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261020c575f5ffd5b81516001600160401b03811115610225576102256101e9565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610253576102536101e9565b60405281815283820160200185101561026a575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610299575f5ffd5b84516001600160401b038111156102ae575f5ffd5b6102ba878288016101fd565b602087015190955090506001600160401b038111156102d7575f5ffd5b6102e3878288016101fd565b60408701516060880151919550935090506001600160a01b0381168114610308575f5ffd5b939692955090935050565b600181811c9082168061032757607f821691505b60208210810361034557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561039257805f5260205f20601f840160051c810160208510156103705750805b601f840160051c820191505b8181101561038f575f815560010161037c565b50505b505050565b81516001600160401b038111156103b0576103b06101e9565b6103c4816103be8454610313565b8461034b565b6020601f8211600181146103f6575f83156103df5750848201515b5f19600385901b1c1916600184901b17845561038f565b5f84815260208120601f198516915b828110156104255787850151825560209485019460019092019101610405565b508482101561044257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156104a05780850481111561048457610484610451565b600184161561049257908102905b60019390931c928002610469565b935093915050565b5f826104b657506001610544565b816104c257505f610544565b81600181146104d857600281146104e2576104fe565b6001915050610544565b60ff8411156104f3576104f3610451565b50506001821b610544565b5060208310610133831016604e8410600b8410161715610521575081810a610544565b61052d5f198484610465565b805f190482111561054057610540610451565b0290505b92915050565b5f61055860ff8416836104a8565b9392505050565b808202811582820484141761054457610544610451565b8082018082111561054457610544610451565b6106e4806105965f395ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f5ffd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f5ffd5b61009c610184565b6040516100a99190610554565b60405180910390f35b6100c56100c03660046105a4565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105cc565b61022d565b604051601281526020016100a9565b6100d9610117366004610606565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105a4565b61025f565b6100d961015a366004610626565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461019390610657565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610657565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102ff565b506001949350505050565b60606004805461019390610657565b5f336102218185856102ff565b610279838383600161035c565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156102f957818110156102eb57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f984848484035f61035c565b50505050565b6001600160a01b03831661032857604051634b637e8f60e11b81525f60048201526024016102e2565b6001600160a01b0382166103515760405163ec442f0560e01b81525f60048201526024016102e2565b61027983838361042e565b6001600160a01b0384166103855760405163e602df0560e01b81525f60048201526024016102e2565b6001600160a01b0383166103ae57604051634a1406b160e11b81525f60048201526024016102e2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042091815260200190565b60405180910390a350505050565b6001600160a01b038316610458578060025f82825461044d919061068f565b909155506104c89050565b6001600160a01b0383165f90815260208190526040902054818110156104aa5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e457600280548290039055610502565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054791815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461059f575f5ffd5b919050565b5f5f604083850312156105b5575f5ffd5b6105be83610589565b946020939093013593505050565b5f5f5f606084860312156105de575f5ffd5b6105e784610589565b92506105f560208501610589565b929592945050506040919091013590565b5f60208284031215610616575f5ffd5b61061f82610589565b9392505050565b5f5f60408385031215610637575f5ffd5b61064083610589565b915061064e60208401610589565b90509250929050565b600181811c9082168061066b57607f821691505b60208210810361068957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033a2646970667358221220f3746969b98b3b7ee3d642eeaff7bc3a3cf9bf49ac0caebf9952570eb1b3cd3464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B060530 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x622AE7AA EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xEC81AADB EQ PUSH2 0x76 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x51 CALLDATASIZE PUSH1 0x4 PUSH2 0x299 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH2 0xBF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH32 0x75D1EB2D61D7E210835BC16E78AC4D0E4F905C108A81852A6B68C4D46B4F40F3 SWAP1 PUSH2 0x159 SWAP1 DUP4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC7A DUP1 PUSH2 0x425 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x266 JUMPI PUSH2 0x266 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x27D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2CD DUP7 DUP3 DUP8 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2F5 DUP7 DUP3 DUP8 ADD PUSH2 0x20E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x320 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x362 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x3A9 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x369 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3BB DUP2 DUP8 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x400 SWAP1 DUP4 ADD DUP7 PUSH2 0x369 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x412 DUP2 DUP7 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC7A CODESIZE SUB DUP1 PUSH2 0xC7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x286 JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x397 JUMP JUMPDEST POP POP POP PUSH2 0x78 DUP2 PUSH2 0x5E PUSH2 0x81 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x69 SWAP1 PUSH1 0xA PUSH2 0x54A JUMP JUMPDEST PUSH2 0x73 SWAP1 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST POP POP POP POP PUSH2 0x589 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF PUSH0 DUP4 DUP4 PUSH2 0xC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x179 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x197 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x225 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x253 JUMPI PUSH2 0x253 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2BA DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2E3 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x308 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x327 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x345 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x392 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x370 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x3BE DUP5 SLOAD PUSH2 0x313 JUMP JUMPDEST DUP5 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3DF JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x38F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x442 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4A0 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x492 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x469 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4B6 JUMPI POP PUSH1 0x1 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH2 0x4C2 JUMPI POP PUSH0 PUSH2 0x544 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4E2 JUMPI PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x544 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F3 PUSH2 0x451 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x544 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x521 JUMPI POP DUP2 DUP2 EXP PUSH2 0x544 JUMP JUMPDEST PUSH2 0x52D PUSH0 NOT DUP5 DUP5 PUSH2 0x465 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x540 JUMPI PUSH2 0x540 PUSH2 0x451 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x558 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x6E4 DUP1 PUSH2 0x596 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x657 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x458 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x68F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x547 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x59F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5BE DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E7 DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F5 PUSH1 0x20 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61F DUP3 PUSH2 0x589 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x640 DUP4 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP PUSH2 0x64E PUSH1 0x20 DUP5 ADD PUSH2 0x589 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x66B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x689 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BASEFEE DUP10 0xDE PUSH1 0xD5 0x4C EQ PUSH23 0x29951E9B4E19EB6AA3E6772C1A1B845B7A1DFD6A951D86 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH21 0x6969B98B3B7EE3D642EEAFF7BC3A3CF9BF49AC0CAE 0xBF SWAP10 MSTORE JUMPI 0xE 0xB1 0xB3 0xCD CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "120:578:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;282:295;;;;;;:::i;:::-;;:::i;:::-;;585:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;149:31;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2571:32:6;;;2553:51;;2541:2;2526:18;149:31:5;2407:203:6;282:295:5;381:19;418:4;424:6;432;440:10;403:48;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;462:14:5;:38;;;;;;;;;;;;;;-1:-1:-1;;;;;;462:38:5;-1:-1:-1;;;;;462:38:5;;;;;516:53;;462:38;;-1:-1:-1;516:53:5;;;;462:38;;548:4;;554:6;;562;;516:53;:::i;:::-;;;;;;;;370:207;282:295;;;:::o;585:110::-;637:16;673:14;666:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:21:5;;;;;;;;;;;;;;;;;;;;;;;585:110;:::o;149:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;149:31:5;;-1:-1:-1;149:31:5;:::o;-1:-1:-1:-;;;;;;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:726;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;300:6;287:20;330:18;322:6;319:30;316:56;;;352:18;;:::i;:::-;401:2;395:9;493:2;455:17;;-1:-1:-1;;451:31:6;;;484:2;447:40;443:54;431:67;;528:18;513:34;;549:22;;;510:62;507:88;;;575:18;;:::i;:::-;611:2;604:22;635;;;676:19;;;697:4;672:30;669:39;-1:-1:-1;666:59:6;;;721:1;718;711:12;666:59;785:6;778:4;770:6;766:17;759:4;751:6;747:17;734:58;840:1;812:19;;;833:4;808:30;801:41;;;;816:6;146:726;-1:-1:-1;;;146:726:6:o;877:652::-;974:6;982;990;1043:2;1031:9;1022:7;1018:23;1014:32;1011:52;;;1059:1;1056;1049:12;1011:52;1099:9;1086:23;1132:18;1124:6;1121:30;1118:50;;;1164:1;1161;1154:12;1118:50;1187;1229:7;1220:6;1209:9;1205:22;1187:50;:::i;:::-;1177:60;;;1290:2;1279:9;1275:18;1262:32;1319:18;1309:8;1306:32;1303:52;;;1351:1;1348;1341:12;1303:52;1374;1418:7;1407:8;1396:9;1392:24;1374:52;:::i;:::-;877:652;;1364:62;;-1:-1:-1;;;;1495:2:6;1480:18;;;;1467:32;;877:652::o;1534:637::-;1724:2;1736:21;;;1806:13;;1709:18;;;1828:22;;;1676:4;;1907:15;;;1881:2;1866:18;;;1676:4;1950:195;1964:6;1961:1;1958:13;1950:195;;;2029:13;;-1:-1:-1;;;;;2025:39:6;2013:52;;2094:2;2120:15;;;;2085:12;;;;2061:1;1979:9;1950:195;;;-1:-1:-1;2162:3:6;;1534:637;-1:-1:-1;;;;;1534:637:6:o;2176:226::-;2235:6;2288:2;2276:9;2267:7;2263:23;2259:32;2256:52;;;2304:1;2301;2294:12;2256:52;-1:-1:-1;2349:23:6;;2176:226;-1:-1:-1;2176:226:6:o;2615:289::-;2657:3;2695:5;2689:12;2722:6;2717:3;2710:19;2778:6;2771:4;2764:5;2760:16;2753:4;2748:3;2744:14;2738:47;2830:1;2823:4;2814:6;2809:3;2805:16;2801:27;2794:38;2893:4;2886:2;2882:7;2877:2;2869:6;2865:15;2861:29;2856:3;2852:39;2848:50;2841:57;;;2615:289;;;;:::o;2909:553::-;3162:3;3151:9;3144:22;3125:4;3189:46;3230:3;3219:9;3215:19;3207:6;3189:46;:::i;:::-;3283:9;3275:6;3271:22;3266:2;3255:9;3251:18;3244:50;3311:33;3337:6;3329;3311:33;:::i;:::-;3375:2;3360:18;;3353:34;;;;-1:-1:-1;;;;;;;3423:32:6;;;;3418:2;3403:18;;;3396:60;3303:41;2909:553;-1:-1:-1;;2909:553:6:o;3467:::-;-1:-1:-1;;;;;3720:32:6;;3702:51;;3789:3;3784:2;3769:18;;3762:31;;;-1:-1:-1;;3816:46:6;;3842:19;;3834:6;3816:46;:::i;:::-;3910:9;3902:6;3898:22;3893:2;3882:9;3878:18;3871:50;3938:33;3964:6;3956;3938:33;:::i;:::-;3930:41;;;4007:6;4002:2;3991:9;3987:18;3980:34;3467:553;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "861600",
								"executionCost": "894",
								"totalCost": "862494"
							},
							"external": {
								"createToken(string,string,uint256)": "infinite",
								"deployedTokens(uint256)": "4632",
								"getDeployedTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 120,
									"end": 698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 698,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3746969b98b3b7ee3d642eeaff7bc3a3cf9bf49ac0caebf9952570eb1b3cd3464736f6c634300081e0033",
									".code": [
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "5B060530"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "622AE7AA"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "EC81AADB"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 698,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 282,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 282,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 149,
											"end": 180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 149,
											"end": 180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2407,
											"end": 2610,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 282,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 282,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 432,
											"end": 438,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 440,
											"end": 450,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 403,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "CREATE",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 403,
											"end": 451,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 462,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 462,
											"end": 500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 462,
											"end": 500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 569,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 516,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "75D1EB2D61D7E210835BC16E78AC4D0E4F905C108A81852A6B68C4D46B4F40F3"
										},
										{
											"begin": 516,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 516,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 462,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 548,
											"end": 552,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 548,
											"end": 552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 554,
											"end": 560,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 554,
											"end": 560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 562,
											"end": 568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 516,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 516,
											"end": 569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 569,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 516,
											"end": 569,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 370,
											"end": 577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 282,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 637,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 673,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 666,
											"end": 687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 666,
											"end": 687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 149,
											"end": 180,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 149,
											"end": 180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 149,
											"end": 180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 146,
											"end": 872,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 146,
											"end": 872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 189,
											"end": 194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 223,
											"end": 240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 219,
											"end": 246,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 260,
											"end": 261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 262,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 209,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 300,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 287,
											"end": 307,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 319,
											"end": 349,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 316,
											"end": 372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 316,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 316,
											"end": 372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 352,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 352,
											"end": 370,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 455,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 455,
											"end": 472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 451,
											"end": 482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 482,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 484,
											"end": 486,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 431,
											"end": 498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 431,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 513,
											"end": 547,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 549,
											"end": 571,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 510,
											"end": 572,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 507,
											"end": 595,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 595,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 575,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 575,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 575,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 593,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 575,
											"end": 593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 635,
											"end": 657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 635,
											"end": 657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 635,
											"end": 657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 676,
											"end": 695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 676,
											"end": 695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 669,
											"end": 708,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 666,
											"end": 725,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 666,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 666,
											"end": 725,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 723,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 666,
											"end": 725,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 666,
											"end": 725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 776,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 766,
											"end": 783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 747,
											"end": 764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 734,
											"end": 792,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 812,
											"end": 831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 812,
											"end": 831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 146,
											"end": 872,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 146,
											"end": 872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 877,
											"end": 1529,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 877,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1045,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1029,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1041,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1046,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1011,
											"end": 1063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1061,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1063,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1011,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1099,
											"end": 1108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1109,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1124,
											"end": 1130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1151,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1166,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1118,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1229,
											"end": 1236,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1187,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1187,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1237,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1303,
											"end": 1355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1355,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1303,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1374,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 1529,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 877,
											"end": 1529,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1426,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1499,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1534,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1971,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2042,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2065,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1979,
											"end": 1988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2165,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 2171,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2176,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2274,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2308,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2256,
											"end": 2308,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2306,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2308,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2256,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2701,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2720,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2729,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2757,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2751,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2785,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2812,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2879,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2909,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3189,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3311,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3344,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3311,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3360,
											"end": 3378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3387,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3387,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3420,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3344,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 3462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3720,
											"end": 3752,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3752,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3753,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3792,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3816,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3816,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3816,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 3891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3938,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3938,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH",
													"source": 5,
													"value": "80"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "CALLVALUE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "ISZERO",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "1"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "JUMPI",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "REVERT",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "tag",
													"source": 5,
													"value": "1"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "MLOAD",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSHSIZE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "CODESIZE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "SUB",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSHSIZE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "CODECOPY",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "ADD",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH",
													"source": 5,
													"value": "40"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "MSTORE",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "2"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "SWAP2",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "3"
												},
												{
													"begin": 738,
													"end": 917,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "tag",
													"source": 5,
													"value": "2"
												},
												{
													"begin": 738,
													"end": 917,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 838,
													"end": 842,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 844,
													"end": 850,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 1648,
													"end": 1653,
													"name": "PUSH",
													"source": 1,
													"value": "3"
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "7"
												},
												{
													"begin": 838,
													"end": 842,
													"name": "DUP4",
													"source": 5
												},
												{
													"begin": 1648,
													"end": 1653,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 1648,
													"end": 1661,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "tag",
													"source": 1,
													"value": "7"
												},
												{
													"begin": 1648,
													"end": 1661,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1671,
													"end": 1678,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 1681,
													"end": 1688,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1671,
													"end": 1678,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 1671,
													"end": 1688,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "tag",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1671,
													"end": 1688,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1582,
													"end": 1695,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 868,
													"end": 909,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "11"
												},
												{
													"begin": 874,
													"end": 879,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 897,
													"end": 907,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "12"
												},
												{
													"begin": 897,
													"end": 905,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "13"
												},
												{
													"begin": 897,
													"end": 905,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 897,
													"end": 905,
													"modifierDepth": 1,
													"name": "SHL",
													"source": 5
												},
												{
													"begin": 897,
													"end": 907,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 5,
													"value": "20"
												},
												{
													"begin": 897,
													"end": 907,
													"modifierDepth": 1,
													"name": "SHR",
													"source": 5
												},
												{
													"begin": 897,
													"end": 907,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 897,
													"end": 907,
													"modifierDepth": 1,
													"name": "tag",
													"source": 5,
													"value": "12"
												},
												{
													"begin": 897,
													"end": 907,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 891,
													"end": 907,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "14"
												},
												{
													"begin": 891,
													"end": 907,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 891,
													"end": 893,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 5,
													"value": "A"
												},
												{
													"begin": 891,
													"end": 907,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "15"
												},
												{
													"begin": 891,
													"end": 907,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 891,
													"end": 907,
													"modifierDepth": 1,
													"name": "tag",
													"source": 5,
													"value": "14"
												},
												{
													"begin": 891,
													"end": 907,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 881,
													"end": 908,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "16"
												},
												{
													"begin": 881,
													"end": 908,
													"name": "SWAP1",
													"source": 5
												},
												{
													"begin": 881,
													"end": 887,
													"name": "DUP6",
													"source": 5
												},
												{
													"begin": 881,
													"end": 908,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "17"
												},
												{
													"begin": 881,
													"end": 908,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 881,
													"end": 908,
													"modifierDepth": 1,
													"name": "tag",
													"source": 5,
													"value": "16"
												},
												{
													"begin": 881,
													"end": 908,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 868,
													"end": 873,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "18"
												},
												{
													"begin": 868,
													"end": 909,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 868,
													"end": 909,
													"modifierDepth": 1,
													"name": "tag",
													"source": 5,
													"value": "11"
												},
												{
													"begin": 868,
													"end": 909,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 738,
													"end": 917,
													"name": "POP",
													"source": 5
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH [tag]",
													"source": 5,
													"value": "48"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "JUMP",
													"source": 5
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "tag",
													"source": 1,
													"value": "13"
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2761,
													"end": 2763,
													"name": "PUSH",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 2761,
													"end": 2763,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2688,
													"end": 2770,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "tag",
													"source": 1,
													"value": "18"
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7432,
													"end": 7453,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7432,
													"end": 7453,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 7505,
													"end": 7506,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 6057,
													"end": 6108,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 6030,
													"end": 6048,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 6030,
													"end": 6048,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "tag",
													"source": 1,
													"value": "23"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 7476,
													"end": 7508,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "tag",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 7428,
													"end": 7519,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 7544,
													"end": 7545,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 7548,
													"end": 7555,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 7557,
													"end": 7562,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 7528,
													"end": 7535,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "26"
												},
												{
													"begin": 7528,
													"end": 7563,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "tag",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 7528,
													"end": 7563,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7362,
													"end": 7570,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7362,
													"end": 7570,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "tag",
													"source": 1,
													"value": "26"
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6001,
													"end": 6019,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6001,
													"end": 6019,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "28"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6153,
													"end": 6158,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6149,
													"name": "PUSH",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 6137,
													"end": 6149,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 6137,
													"end": 6158,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "tag",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6137,
													"end": 6158,
													"name": "SSTORE",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "tag",
													"source": 1,
													"value": "28"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6189,
													"end": 6208,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "KECCAK256",
													"source": 1
												},
												{
													"begin": 6211,
													"end": 6226,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6244,
													"end": 6263,
													"name": "LT",
													"source": 1
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "391434E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6469,
													"end": 6501,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 6469,
													"end": 6501,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 6451,
													"end": 6502,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 6518,
													"end": 6536,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 6518,
													"end": 6536,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 6518,
													"end": 6536,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 6511,
													"end": 6545,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 6511,
													"end": 6545,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 6511,
													"end": 6545,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 6561,
													"end": 6579,
													"name": "PUSH",
													"source": 6,
													"value": "44"
												},
												{
													"begin": 6561,
													"end": 6579,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 6561,
													"end": 6579,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 6554,
													"end": 6588,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 6554,
													"end": 6588,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 6554,
													"end": 6588,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 6424,
													"end": 6442,
													"name": "PUSH",
													"source": 6,
													"value": "64"
												},
												{
													"begin": 6424,
													"end": 6442,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 6290,
													"end": 6340,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "23"
												},
												{
													"begin": 6249,
													"end": 6594,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "tag",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 6240,
													"end": 6355,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6484,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6490,
													"name": "KECCAK256",
													"source": 1
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6493,
													"end": 6512,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6512,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6475,
													"end": 6512,
													"name": "SSTORE",
													"source": 1
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "tag",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 5997,
													"end": 6537,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6551,
													"end": 6567,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6551,
													"end": 6567,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6726,
													"name": "PUSH",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6714,
													"end": 6735,
													"name": "SSTORE",
													"source": 1
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "36"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "tag",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6934,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6938,
													"name": "KECCAK256",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6925,
													"end": 6947,
													"name": "SSTORE",
													"source": 1
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "tag",
													"source": 1,
													"value": "36"
												},
												{
													"begin": 6547,
													"end": 6972,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7002,
													"end": 7004,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6996,
													"end": 7000,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 1,
													"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
												},
												{
													"begin": 7006,
													"end": 7011,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6745,
													"end": 6770,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 6745,
													"end": 6770,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 6733,
													"end": 6735,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 6718,
													"end": 6736,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 6718,
													"end": 6736,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 6599,
													"end": 6776,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "tag",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6987,
													"end": 7012,
													"name": "LOG3",
													"source": 1
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5912,
													"end": 7019,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5912,
													"end": 7019,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 14,
													"end": 141,
													"name": "tag",
													"source": 6,
													"value": "39"
												},
												{
													"begin": 14,
													"end": 141,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 75,
													"end": 85,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 70,
													"end": 73,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 66,
													"end": 86,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 63,
													"end": 64,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 56,
													"end": 87,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 106,
													"end": 110,
													"name": "PUSH",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 103,
													"end": 104,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 96,
													"end": 111,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 130,
													"end": 134,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 127,
													"end": 128,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 120,
													"end": 135,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 146,
													"end": 869,
													"name": "tag",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 146,
													"end": 869,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 200,
													"end": 205,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 253,
													"end": 256,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 246,
													"end": 250,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 238,
													"end": 244,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 234,
													"end": 251,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 230,
													"end": 257,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 220,
													"end": 275,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 220,
													"end": 275,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 271,
													"end": 272,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 268,
													"end": 269,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 261,
													"end": 273,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 220,
													"end": 275,
													"name": "tag",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 220,
													"end": 275,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 298,
													"end": 311,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 298,
													"end": 311,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 323,
													"end": 353,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 323,
													"end": 353,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 320,
													"end": 376,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 320,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 320,
													"end": 376,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 356,
													"end": 374,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 356,
													"end": 374,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "39"
												},
												{
													"begin": 356,
													"end": 374,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 356,
													"end": 374,
													"name": "tag",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 356,
													"end": 374,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 405,
													"end": 407,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 399,
													"end": 408,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 497,
													"end": 499,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 459,
													"end": 476,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 459,
													"end": 476,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 455,
													"end": 486,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 455,
													"end": 486,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 455,
													"end": 486,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 488,
													"end": 490,
													"name": "PUSH",
													"source": 6,
													"value": "3F"
												},
												{
													"begin": 451,
													"end": 491,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 447,
													"end": 501,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 435,
													"end": 502,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 435,
													"end": 502,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 517,
													"end": 551,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 517,
													"end": 551,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 553,
													"end": 575,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 553,
													"end": 575,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 553,
													"end": 575,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 514,
													"end": 576,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 511,
													"end": 599,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 511,
													"end": 599,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 511,
													"end": 599,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 579,
													"end": 597,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 579,
													"end": 597,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "39"
												},
												{
													"begin": 579,
													"end": 597,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 579,
													"end": 597,
													"name": "tag",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 579,
													"end": 597,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 615,
													"end": 617,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 608,
													"end": 630,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 639,
													"end": 661,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 639,
													"end": 661,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 639,
													"end": 661,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 680,
													"end": 699,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 680,
													"end": 699,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 680,
													"end": 699,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 701,
													"end": 705,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 676,
													"end": 706,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 673,
													"end": 712,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "LT",
													"source": -1
												},
												{
													"begin": 670,
													"end": 729,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 670,
													"end": 729,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "56"
												},
												{
													"begin": 670,
													"end": 729,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 725,
													"end": 726,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 722,
													"end": 723,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 715,
													"end": 727,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 670,
													"end": 729,
													"name": "tag",
													"source": 6,
													"value": "56"
												},
												{
													"begin": 670,
													"end": 729,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 782,
													"end": 788,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 775,
													"end": 779,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 767,
													"end": 773,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 763,
													"end": 780,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 756,
													"end": 760,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 748,
													"end": 754,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 744,
													"end": 761,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 738,
													"end": 789,
													"name": "MCOPY",
													"source": 6
												},
												{
													"begin": 837,
													"end": 838,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 809,
													"end": 828,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 809,
													"end": 828,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 809,
													"end": 828,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 830,
													"end": 834,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 805,
													"end": 835,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 798,
													"end": 839,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 798,
													"end": 839,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 798,
													"end": 839,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 798,
													"end": 839,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 813,
													"end": 819,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 146,
													"end": 869,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 146,
													"end": 869,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "tag",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 991,
													"end": 997,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 999,
													"end": 1005,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1007,
													"end": 1013,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1015,
													"end": 1021,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1068,
													"end": 1071,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 1056,
													"end": 1065,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 1047,
													"end": 1054,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 1043,
													"end": 1066,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 1039,
													"end": 1072,
													"name": "SLT",
													"source": 6
												},
												{
													"begin": 1036,
													"end": 1089,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1036,
													"end": 1089,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "58"
												},
												{
													"begin": 1036,
													"end": 1089,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1085,
													"end": 1086,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1082,
													"end": 1083,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1075,
													"end": 1087,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1036,
													"end": 1089,
													"name": "tag",
													"source": 6,
													"value": "58"
												},
												{
													"begin": 1036,
													"end": 1089,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1112,
													"end": 1128,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 1112,
													"end": 1128,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1140,
													"end": 1170,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1140,
													"end": 1170,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 1137,
													"end": 1187,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1137,
													"end": 1187,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "59"
												},
												{
													"begin": 1137,
													"end": 1187,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1183,
													"end": 1184,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1180,
													"end": 1181,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1173,
													"end": 1185,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1137,
													"end": 1187,
													"name": "tag",
													"source": 6,
													"value": "59"
												},
												{
													"begin": 1137,
													"end": 1187,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1206,
													"end": 1267,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 1259,
													"end": 1266,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 1250,
													"end": 1256,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1239,
													"end": 1248,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 1235,
													"end": 1257,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1206,
													"end": 1267,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 1206,
													"end": 1267,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1206,
													"end": 1267,
													"name": "tag",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 1206,
													"end": 1267,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1313,
													"end": 1315,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 1298,
													"end": 1316,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 1298,
													"end": 1316,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1292,
													"end": 1317,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 1196,
													"end": 1267,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1196,
													"end": 1267,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1292,
													"end": 1317,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1329,
													"end": 1361,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1329,
													"end": 1361,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 1326,
													"end": 1378,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 1326,
													"end": 1378,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "61"
												},
												{
													"begin": 1326,
													"end": 1378,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1374,
													"end": 1375,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1371,
													"end": 1372,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1364,
													"end": 1376,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1326,
													"end": 1378,
													"name": "tag",
													"source": 6,
													"value": "61"
												},
												{
													"begin": 1326,
													"end": 1378,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1397,
													"end": 1460,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "62"
												},
												{
													"begin": 1452,
													"end": 1459,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 1441,
													"end": 1449,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1430,
													"end": 1439,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 1426,
													"end": 1450,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1397,
													"end": 1460,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 1397,
													"end": 1460,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1397,
													"end": 1460,
													"name": "tag",
													"source": 6,
													"value": "62"
												},
												{
													"begin": 1397,
													"end": 1460,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1500,
													"end": 1502,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 1485,
													"end": 1503,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 1485,
													"end": 1503,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1479,
													"end": 1504,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 1547,
													"end": 1549,
													"name": "PUSH",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 1532,
													"end": 1550,
													"name": "DUP9",
													"source": 6
												},
												{
													"begin": 1532,
													"end": 1550,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 1526,
													"end": 1551,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 1387,
													"end": 1460,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1387,
													"end": 1460,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1479,
													"end": 1504,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1526,
													"end": 1551,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1580,
													"end": 1611,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1580,
													"end": 1611,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 1570,
													"end": 1612,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1570,
													"end": 1612,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 1560,
													"end": 1630,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "63"
												},
												{
													"begin": 1560,
													"end": 1630,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1626,
													"end": 1627,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1623,
													"end": 1624,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1616,
													"end": 1628,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1560,
													"end": 1630,
													"name": "tag",
													"source": 6,
													"value": "63"
												},
												{
													"begin": 1560,
													"end": 1630,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP7",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP6",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 874,
													"end": 1660,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 874,
													"end": 1660,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1665,
													"end": 2045,
													"name": "tag",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 1665,
													"end": 2045,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1744,
													"end": 1745,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 1740,
													"end": 1752,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1740,
													"end": 1752,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1740,
													"end": 1752,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 1740,
													"end": 1752,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1787,
													"end": 1799,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1787,
													"end": 1799,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 1787,
													"end": 1799,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 1808,
													"end": 1869,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "65"
												},
												{
													"begin": 1808,
													"end": 1869,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1862,
													"end": 1866,
													"name": "PUSH",
													"source": 6,
													"value": "7F"
												},
												{
													"begin": 1854,
													"end": 1860,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1850,
													"end": 1867,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 1840,
													"end": 1867,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1840,
													"end": 1867,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1808,
													"end": 1869,
													"name": "tag",
													"source": 6,
													"value": "65"
												},
												{
													"begin": 1808,
													"end": 1869,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1915,
													"end": 1917,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 1907,
													"end": 1913,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1904,
													"end": 1918,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 1884,
													"end": 1902,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 1881,
													"end": 1919,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 1878,
													"end": 2039,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 1878,
													"end": 2039,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 1961,
													"end": 1971,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 1956,
													"end": 1959,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 1952,
													"end": 1972,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 1949,
													"end": 1950,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 1942,
													"end": 1973,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 1996,
													"end": 2000,
													"name": "PUSH",
													"source": 6,
													"value": "22"
												},
												{
													"begin": 1993,
													"end": 1994,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 1986,
													"end": 2001,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 2024,
													"end": 2028,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 2021,
													"end": 2022,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 2014,
													"end": 2029,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1878,
													"end": 2039,
													"name": "tag",
													"source": 6,
													"value": "66"
												},
												{
													"begin": 1878,
													"end": 2039,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1878,
													"end": 2039,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1665,
													"end": 2045,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 1665,
													"end": 2045,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1665,
													"end": 2045,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1665,
													"end": 2045,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2176,
													"end": 2694,
													"name": "tag",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 2176,
													"end": 2694,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2278,
													"end": 2280,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 2273,
													"end": 2276,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 2270,
													"end": 2281,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 2267,
													"end": 2688,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 2267,
													"end": 2688,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "69"
												},
												{
													"begin": 2267,
													"end": 2688,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 2314,
													"end": 2319,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 2311,
													"end": 2312,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 2304,
													"end": 2320,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 2358,
													"end": 2362,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 2355,
													"end": 2356,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 2345,
													"end": 2363,
													"name": "KECCAK256",
													"source": 6
												},
												{
													"begin": 2428,
													"end": 2430,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 2416,
													"end": 2426,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 2412,
													"end": 2431,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 2409,
													"end": 2410,
													"name": "PUSH",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 2405,
													"end": 2432,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 2399,
													"end": 2403,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2395,
													"end": 2433,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 2464,
													"end": 2468,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 2452,
													"end": 2462,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 2449,
													"end": 2469,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 2446,
													"end": 2493,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 2446,
													"end": 2493,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "70"
												},
												{
													"begin": 2446,
													"end": 2493,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2487,
													"end": 2491,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 2446,
													"end": 2493,
													"name": "tag",
													"source": 6,
													"value": "70"
												},
												{
													"begin": 2446,
													"end": 2493,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2542,
													"end": 2544,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 2537,
													"end": 2540,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 2533,
													"end": 2545,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 2530,
													"end": 2531,
													"name": "PUSH",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 2526,
													"end": 2546,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 2520,
													"end": 2524,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 2516,
													"end": 2547,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 2506,
													"end": 2547,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 2506,
													"end": 2547,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "tag",
													"source": 6,
													"value": "71"
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2615,
													"end": 2617,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2608,
													"end": 2613,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2605,
													"end": 2618,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "73"
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 2674,
													"end": 2675,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 2660,
													"end": 2676,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2660,
													"end": 2676,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 2641,
													"end": 2642,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 2630,
													"end": 2643,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "71"
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "tag",
													"source": 6,
													"value": "73"
												},
												{
													"begin": 2597,
													"end": 2678,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2601,
													"end": 2604,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2601,
													"end": 2604,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2267,
													"end": 2688,
													"name": "tag",
													"source": 6,
													"value": "69"
												},
												{
													"begin": 2267,
													"end": 2688,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2176,
													"end": 2694,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2176,
													"end": 2694,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2176,
													"end": 2694,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 2176,
													"end": 2694,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2870,
													"end": 4169,
													"name": "tag",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 2870,
													"end": 4169,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2990,
													"end": 3000,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2990,
													"end": 3000,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "40"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3012,
													"end": 3042,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3012,
													"end": 3042,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 3009,
													"end": 3065,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 3009,
													"end": 3065,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "77"
												},
												{
													"begin": 3009,
													"end": 3065,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3045,
													"end": 3063,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "77"
												},
												{
													"begin": 3045,
													"end": 3063,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "39"
												},
												{
													"begin": 3045,
													"end": 3063,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3045,
													"end": 3063,
													"name": "tag",
													"source": 6,
													"value": "77"
												},
												{
													"begin": 3045,
													"end": 3063,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3074,
													"end": 3171,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "78"
												},
												{
													"begin": 3164,
													"end": 3170,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3124,
													"end": 3162,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "79"
												},
												{
													"begin": 3156,
													"end": 3160,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 3150,
													"end": 3161,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 3124,
													"end": 3162,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "41"
												},
												{
													"begin": 3124,
													"end": 3162,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3124,
													"end": 3162,
													"name": "tag",
													"source": 6,
													"value": "79"
												},
												{
													"begin": 3124,
													"end": 3162,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3118,
													"end": 3122,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 3074,
													"end": 3171,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "43"
												},
												{
													"begin": 3074,
													"end": 3171,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3074,
													"end": 3171,
													"name": "tag",
													"source": 6,
													"value": "78"
												},
												{
													"begin": 3074,
													"end": 3171,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3220,
													"end": 3224,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 3251,
													"end": 3253,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 3240,
													"end": 3254,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 3240,
													"end": 3254,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 3268,
													"end": 3269,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "81"
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3956,
													"end": 3957,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3973,
													"end": 3979,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 3970,
													"end": 4059,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 3970,
													"end": 4059,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "82"
												},
												{
													"begin": 3970,
													"end": 4059,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4025,
													"end": 4044,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 4025,
													"end": 4044,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4025,
													"end": 4044,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 4019,
													"end": 4045,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 3970,
													"end": 4059,
													"name": "tag",
													"source": 6,
													"value": "82"
												},
												{
													"begin": 3970,
													"end": 4059,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 2827,
													"end": 2828,
													"name": "PUSH",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 2823,
													"end": 2834,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 2823,
													"end": 2834,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 2823,
													"end": 2834,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 2819,
													"end": 2843,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 2815,
													"end": 2844,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 2805,
													"end": 2845,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 2851,
													"end": 2852,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 2847,
													"end": 2858,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 2847,
													"end": 2858,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 2847,
													"end": 2858,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 2802,
													"end": 2859,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 4072,
													"end": 4153,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 4072,
													"end": 4153,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 3233,
													"end": 4163,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "73"
												},
												{
													"begin": 3233,
													"end": 4163,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "tag",
													"source": 6,
													"value": "81"
												},
												{
													"begin": 3263,
													"end": 3912,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 2123,
													"end": 2124,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 2116,
													"end": 2130,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 2116,
													"end": 2130,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2116,
													"end": 2130,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 2160,
													"end": 2164,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 2147,
													"end": 2165,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 2147,
													"end": 2165,
													"name": "KECCAK256",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3299,
													"end": 3319,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 3299,
													"end": 3319,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3299,
													"end": 3319,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "tag",
													"source": 6,
													"value": "85"
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3431,
													"end": 3438,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 3428,
													"end": 3429,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3425,
													"end": 3439,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3513,
													"end": 3532,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 3513,
													"end": 3532,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 3513,
													"end": 3532,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3507,
													"end": 3533,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 3492,
													"end": 3534,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 3492,
													"end": 3534,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 3620,
													"end": 3624,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 3605,
													"end": 3625,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 3605,
													"end": 3625,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 3605,
													"end": 3625,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3605,
													"end": 3625,
													"name": "SWAP5",
													"source": 6
												},
												{
													"begin": 3573,
													"end": 3574,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 3561,
													"end": 3575,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 3561,
													"end": 3575,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 3561,
													"end": 3575,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3561,
													"end": 3575,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 3447,
													"end": 3459,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "85"
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "tag",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 3417,
													"end": 3639,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3421,
													"end": 3424,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 3667,
													"end": 3673,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 3658,
													"end": 3665,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 3655,
													"end": 3674,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 3652,
													"end": 3853,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 3652,
													"end": 3853,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "88"
												},
												{
													"begin": 3652,
													"end": 3853,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3728,
													"end": 3747,
													"name": "DUP7",
													"source": 6
												},
												{
													"begin": 3728,
													"end": 3747,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 3728,
													"end": 3747,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3722,
													"end": 3748,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3811,
													"end": 3812,
													"name": "PUSH",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 3807,
													"end": 3821,
													"name": "DUP8",
													"source": 6
												},
												{
													"begin": 3807,
													"end": 3821,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 3807,
													"end": 3821,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 3823,
													"end": 3826,
													"name": "PUSH",
													"source": 6,
													"value": "F8"
												},
												{
													"begin": 3803,
													"end": 3827,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3799,
													"end": 3836,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 3795,
													"end": 3837,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 3780,
													"end": 3838,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3765,
													"end": 3839,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3765,
													"end": 3839,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 3652,
													"end": 3853,
													"name": "tag",
													"source": 6,
													"value": "88"
												},
												{
													"begin": 3652,
													"end": 3853,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3899,
													"end": 3900,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 3883,
													"end": 3897,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 3883,
													"end": 3897,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3883,
													"end": 3897,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 3879,
													"end": 3901,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3866,
													"end": 3902,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 3866,
													"end": 3902,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2870,
													"end": 4169,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4174,
													"end": 4301,
													"name": "tag",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 4174,
													"end": 4301,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4235,
													"end": 4245,
													"name": "PUSH",
													"source": 6,
													"value": "4E487B71"
												},
												{
													"begin": 4230,
													"end": 4233,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 4226,
													"end": 4246,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 4223,
													"end": 4224,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 4216,
													"end": 4247,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 4266,
													"end": 4270,
													"name": "PUSH",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 4263,
													"end": 4264,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 4256,
													"end": 4271,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 4290,
													"end": 4294,
													"name": "PUSH",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 4287,
													"end": 4288,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 4280,
													"end": 4295,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "tag",
													"source": 6,
													"value": "46"
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4394,
													"end": 4395,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4412,
													"end": 4417,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "tag",
													"source": 6,
													"value": "91"
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4447,
													"end": 4448,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4437,
													"end": 4445,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 4434,
													"end": 4449,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "93"
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4497,
													"end": 4501,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 4492,
													"end": 4495,
													"name": "DUP6",
													"source": 6
												},
												{
													"begin": 4488,
													"end": 4502,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 4482,
													"end": 4486,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4479,
													"end": 4503,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 4476,
													"end": 4526,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 4476,
													"end": 4526,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "95"
												},
												{
													"begin": 4476,
													"end": 4526,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4506,
													"end": 4524,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "95"
												},
												{
													"begin": 4506,
													"end": 4524,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 4506,
													"end": 4524,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4506,
													"end": 4524,
													"name": "tag",
													"source": 6,
													"value": "95"
												},
												{
													"begin": 4506,
													"end": 4524,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4556,
													"end": 4557,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4546,
													"end": 4554,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 4542,
													"end": 4558,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 4539,
													"end": 4588,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 4539,
													"end": 4588,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "96"
												},
												{
													"begin": 4539,
													"end": 4588,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4570,
													"end": 4586,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4570,
													"end": 4586,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4570,
													"end": 4586,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 4570,
													"end": 4586,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4539,
													"end": 4588,
													"name": "tag",
													"source": 6,
													"value": "96"
												},
												{
													"begin": 4539,
													"end": 4588,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4653,
													"end": 4654,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4649,
													"end": 4665,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 4649,
													"end": 4665,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4649,
													"end": 4665,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 4649,
													"end": 4665,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 4649,
													"end": 4665,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 4609,
													"end": 4624,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 4609,
													"end": 4624,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "91"
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "tag",
													"source": 6,
													"value": "93"
												},
												{
													"begin": 4426,
													"end": 4675,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4306,
													"end": 4681,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "tag",
													"source": 6,
													"value": "47"
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4735,
													"end": 4740,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 4765,
													"end": 4773,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4755,
													"end": 4835,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "98"
												},
												{
													"begin": 4755,
													"end": 4835,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4806,
													"end": 4807,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4820,
													"end": 4825,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 4820,
													"end": 4825,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4755,
													"end": 4835,
													"name": "tag",
													"source": 6,
													"value": "98"
												},
												{
													"begin": 4755,
													"end": 4835,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4854,
													"end": 4858,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4844,
													"end": 4920,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "99"
												},
												{
													"begin": 4844,
													"end": 4920,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4891,
													"end": 4892,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 4905,
													"end": 4910,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 4905,
													"end": 4910,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4844,
													"end": 4920,
													"name": "tag",
													"source": 6,
													"value": "99"
												},
												{
													"begin": 4844,
													"end": 4920,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4936,
													"end": 4940,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4954,
													"end": 4955,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "101"
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 5022,
													"end": 5023,
													"name": "PUSH",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "102"
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4929,
													"end": 5191,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 4929,
													"end": 5191,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "tag",
													"source": 6,
													"value": "101"
												},
												{
													"begin": 4949,
													"end": 5008,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4979,
													"end": 4980,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 4970,
													"end": 4980,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4970,
													"end": 4980,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4993,
													"end": 4998,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4993,
													"end": 4998,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 4993,
													"end": 4998,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "tag",
													"source": 6,
													"value": "102"
												},
												{
													"begin": 5017,
													"end": 5191,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5054,
													"end": 5057,
													"name": "PUSH",
													"source": 6,
													"value": "FF"
												},
												{
													"begin": 5044,
													"end": 5052,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5041,
													"end": 5058,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 5038,
													"end": 5081,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 5038,
													"end": 5081,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "104"
												},
												{
													"begin": 5038,
													"end": 5081,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 5061,
													"end": 5079,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "104"
												},
												{
													"begin": 5061,
													"end": 5079,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 5061,
													"end": 5079,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5061,
													"end": 5079,
													"name": "tag",
													"source": 6,
													"value": "104"
												},
												{
													"begin": 5061,
													"end": 5079,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5117,
													"end": 5118,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 5103,
													"end": 5119,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 5103,
													"end": 5119,
													"name": "SHL",
													"source": 6
												},
												{
													"begin": 5176,
													"end": 5181,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 5176,
													"end": 5181,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4929,
													"end": 5191,
													"name": "tag",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 4929,
													"end": 5191,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4929,
													"end": 5191,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 5275,
													"end": 5277,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 5265,
													"end": 5273,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 5262,
													"end": 5278,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 5256,
													"end": 5259,
													"name": "PUSH",
													"source": 6,
													"value": "133"
												},
												{
													"begin": 5250,
													"end": 5254,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 5247,
													"end": 5260,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 5243,
													"end": 5279,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 5237,
													"end": 5239,
													"name": "PUSH",
													"source": 6,
													"value": "4E"
												},
												{
													"begin": 5227,
													"end": 5235,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5224,
													"end": 5240,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 5219,
													"end": 5221,
													"name": "PUSH",
													"source": 6,
													"value": "B"
												},
												{
													"begin": 5213,
													"end": 5217,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5210,
													"end": 5222,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 5206,
													"end": 5241,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 5203,
													"end": 5280,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 5200,
													"end": 5403,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 5200,
													"end": 5403,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "105"
												},
												{
													"begin": 5200,
													"end": 5403,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5312,
													"end": 5331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 5312,
													"end": 5331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 5312,
													"end": 5331,
													"name": "EXP",
													"source": 6
												},
												{
													"begin": 5388,
													"end": 5393,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 5388,
													"end": 5393,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5200,
													"end": 5403,
													"name": "tag",
													"source": 6,
													"value": "105"
												},
												{
													"begin": 5200,
													"end": 5403,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5435,
													"end": 5477,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "106"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 5460,
													"end": 5468,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5454,
													"end": 5458,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5435,
													"end": 5477,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "46"
												},
												{
													"begin": 5435,
													"end": 5477,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5435,
													"end": 5477,
													"name": "tag",
													"source": 6,
													"value": "106"
												},
												{
													"begin": 5435,
													"end": 5477,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5513,
													"end": 5519,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 5509,
													"end": 5510,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 5505,
													"end": 5511,
													"name": "NOT",
													"source": 6
												},
												{
													"begin": 5501,
													"end": 5520,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 5492,
													"end": 5499,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 5489,
													"end": 5521,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 5486,
													"end": 5544,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 5486,
													"end": 5544,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "108"
												},
												{
													"begin": 5486,
													"end": 5544,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 5524,
													"end": 5542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "108"
												},
												{
													"begin": 5524,
													"end": 5542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 5524,
													"end": 5542,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5524,
													"end": 5542,
													"name": "tag",
													"source": 6,
													"value": "108"
												},
												{
													"begin": 5524,
													"end": 5542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5562,
													"end": 5582,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 5562,
													"end": 5582,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "tag",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4686,
													"end": 5588,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5593,
													"end": 5733,
													"name": "tag",
													"source": 6,
													"value": "15"
												},
												{
													"begin": 5593,
													"end": 5733,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5651,
													"end": 5656,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 5680,
													"end": 5727,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "110"
												},
												{
													"begin": 5721,
													"end": 5725,
													"name": "PUSH",
													"source": 6,
													"value": "FF"
												},
												{
													"begin": 5711,
													"end": 5719,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5707,
													"end": 5726,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 5701,
													"end": 5705,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 5680,
													"end": 5727,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "47"
												},
												{
													"begin": 5680,
													"end": 5727,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5680,
													"end": 5727,
													"name": "tag",
													"source": 6,
													"value": "110"
												},
												{
													"begin": 5680,
													"end": 5727,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5671,
													"end": 5727,
													"name": "SWAP4",
													"source": 6
												},
												{
													"begin": 5593,
													"end": 5733,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5593,
													"end": 5733,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 5738,
													"end": 5906,
													"name": "tag",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 5738,
													"end": 5906,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 5811,
													"end": 5820,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 5811,
													"end": 5820,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 5811,
													"end": 5820,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 5842,
													"end": 5851,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 5842,
													"end": 5851,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 5859,
													"end": 5874,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 5859,
													"end": 5874,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 5859,
													"end": 5874,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 5853,
													"end": 5875,
													"name": "DUP5",
													"source": 6
												},
												{
													"begin": 5853,
													"end": 5875,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 5839,
													"end": 5876,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 5829,
													"end": 5900,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 5829,
													"end": 5900,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 5880,
													"end": 5898,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 5880,
													"end": 5898,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 5880,
													"end": 5898,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 6119,
													"end": 6244,
													"name": "tag",
													"source": 6,
													"value": "30"
												},
												{
													"begin": 6119,
													"end": 6244,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 6184,
													"end": 6193,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 6184,
													"end": 6193,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 6184,
													"end": 6193,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 6205,
													"end": 6215,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 6205,
													"end": 6215,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 6205,
													"end": 6215,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 6202,
													"end": 6238,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 6202,
													"end": 6238,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 6202,
													"end": 6238,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 6218,
													"end": 6236,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "97"
												},
												{
													"begin": 6218,
													"end": 6236,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 6218,
													"end": 6236,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 6599,
													"end": 6776,
													"name": "tag",
													"source": 6,
													"value": "48"
												},
												{
													"begin": 6599,
													"end": 6776,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH #[$]",
													"source": 5,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "DUP1",
													"source": 5
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH [$]",
													"source": 5,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "CODECOPY",
													"source": 5
												},
												{
													"begin": 702,
													"end": 920,
													"name": "PUSH",
													"source": 5,
													"value": "0"
												},
												{
													"begin": 702,
													"end": 920,
													"name": "RETURN",
													"source": 5
												}
											],
											".data": {
												"0": {
													".auxdata": "a26469706673582212209d4889de60d54c147629951e9b4e19eb6aa3e6772c1a1b845b7a1dfd6a951d8664736f6c634300081e0033",
													".code": [
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "80"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "40"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "MSTORE",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "CALLVALUE",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "ISZERO",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "1"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "REVERT",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "tag",
															"source": 5,
															"value": "1"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPDEST",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "4"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "CALLDATASIZE",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "LT",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "2"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "CALLDATALOAD",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "E0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "SHR",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "313CE567"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "GT",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "12"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "313CE567"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "7"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "70A08231"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "8"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "95D89B41"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "9"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "A9059CBB"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "10"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "DD62ED3E"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "11"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "REVERT",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "tag",
															"source": 5,
															"value": "12"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPDEST",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "6FDDE03"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "3"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "95EA7B3"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "4"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "18160DDD"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "5"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "23B872DD"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "EQ",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "6"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "tag",
															"source": 5,
															"value": "2"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "JUMPDEST",
															"source": 5
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 702,
															"end": 920,
															"name": "REVERT",
															"source": 5
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 1,
															"value": "3"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "13"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "14"
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 1,
															"value": "13"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "15"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "16"
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 1,
															"value": "15"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "RETURN",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "17"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "18"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "CALLDATASIZE",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "19"
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 1,
															"value": "18"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 1,
															"value": "17"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 1085,
															"end": 1099,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1085,
															"end": 1099,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 1078,
															"end": 1100,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 1060,
															"end": 1101,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 1060,
															"end": 1101,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 1048,
															"end": 1050,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1033,
															"end": 1051,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "15"
														},
														{
															"begin": 920,
															"end": 1107,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "tag",
															"source": 1,
															"value": "5"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "PUSH",
															"source": 1,
															"value": "2"
														},
														{
															"begin": 2881,
															"end": 2893,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "tag",
															"source": 1,
															"value": "23"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 1246,
															"end": 1248,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1231,
															"end": 1249,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 2803,
															"end": 2900,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "15"
														},
														{
															"begin": 1112,
															"end": 1289,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 1,
															"value": "6"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "17"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "28"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "CALLDATASIZE",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "29"
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 1,
															"value": "28"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "30"
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 2688,
															"end": 2770,
															"name": "tag",
															"source": 1,
															"value": "7"
														},
														{
															"begin": 2688,
															"end": 2770,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 2688,
															"end": 2770,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 2688,
															"end": 2770,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 2761,
															"end": 2763,
															"name": "PUSH",
															"source": 1,
															"value": "12"
														},
														{
															"begin": 1815,
															"end": 1851,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 1815,
															"end": 1851,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 1803,
															"end": 1805,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1788,
															"end": 1806,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 2688,
															"end": 2770,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "15"
														},
														{
															"begin": 1673,
															"end": 1857,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "tag",
															"source": 1,
															"value": "8"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "23"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "37"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "CALLDATASIZE",
															"source": 1
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "38"
														},
														{
															"begin": 2933,
															"end": 3049,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "tag",
															"source": 1,
															"value": "37"
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 2998,
															"end": 3005,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 3024,
															"end": 3042,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 2933,
															"end": 3049,
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "tag",
															"source": 1,
															"value": "9"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "13"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "42"
														},
														{
															"begin": 1962,
															"end": 2055,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 1,
															"value": "10"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "17"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "45"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "CALLDATASIZE",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "19"
														},
														{
															"begin": 3244,
															"end": 3422,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 1,
															"value": "45"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "46"
														},
														{
															"begin": 3244,
															"end": 3422,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "tag",
															"source": 1,
															"value": "11"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "23"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "49"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "CALLDATASIZE",
															"source": 1
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "50"
														},
														{
															"begin": 3455,
															"end": 3595,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "tag",
															"source": 1,
															"value": "49"
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 3535,
															"end": 3542,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3572,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP5",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3455,
															"end": 3595,
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "tag",
															"source": 1,
															"value": "14"
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1805,
															"end": 1818,
															"name": "PUSH",
															"source": 1,
															"value": "60"
														},
														{
															"begin": 1837,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "3"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "54"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "55"
														},
														{
															"begin": 1830,
															"end": 1842,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 1,
															"value": "54"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DIV",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MUL",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP3",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "56"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "55"
														},
														{
															"begin": 1830,
															"end": 1842,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 1,
															"value": "56"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ISZERO",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "57"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "LT",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "58"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "100"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DIV",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MUL",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "57"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 1,
															"value": "58"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 1,
															"value": "59"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "GT",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "59"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "PUSH",
															"source": 1,
															"value": "1F"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "tag",
															"source": 1,
															"value": "57"
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1830,
															"end": 1842,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 1760,
															"end": 1849,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3975,
															"end": 3979,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 4
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "63"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP2",
															"source": 4
														},
														{
															"begin": 4045,
															"end": 4052,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4054,
															"end": 4059,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4029,
															"end": 4037,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "64"
														},
														{
															"begin": 4029,
															"end": 4060,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "tag",
															"source": 1,
															"value": "63"
														},
														{
															"begin": 4029,
															"end": 4060,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 4077,
															"end": 4081,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 4070,
															"end": 4081,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "tag",
															"source": 1,
															"value": "60"
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "SWAP3",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 3902,
															"end": 4088,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "tag",
															"source": 1,
															"value": "30"
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 4767,
															"end": 4771,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 4
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "68"
														},
														{
															"begin": 4839,
															"end": 4843,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP3",
															"source": 4
														},
														{
															"begin": 4854,
															"end": 4859,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4823,
															"end": 4838,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "69"
														},
														{
															"begin": 4823,
															"end": 4860,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "tag",
															"source": 1,
															"value": "68"
														},
														{
															"begin": 4823,
															"end": 4860,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "70"
														},
														{
															"begin": 4880,
															"end": 4884,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4886,
															"end": 4888,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4890,
															"end": 4895,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 4870,
															"end": 4879,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "71"
														},
														{
															"begin": 4870,
															"end": 4896,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "tag",
															"source": 1,
															"value": "70"
														},
														{
															"begin": 4870,
															"end": 4896,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 4913,
															"end": 4917,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 4913,
															"end": 4917,
															"name": "SWAP5",
															"source": 1
														},
														{
															"begin": 4680,
															"end": 4924,
															"name": "SWAP4",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 4680,
															"end": 4924,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "tag",
															"source": 1,
															"value": "42"
														},
														{
															"begin": 1962,
															"end": 2055,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 2009,
															"end": 2022,
															"name": "PUSH",
															"source": 1,
															"value": "60"
														},
														{
															"begin": 2041,
															"end": 2048,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "54"
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 2034,
															"end": 2048,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "55"
														},
														{
															"begin": 2034,
															"end": 2048,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "tag",
															"source": 1,
															"value": "46"
														},
														{
															"begin": 3244,
															"end": 3422,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 3313,
															"end": 3317,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 4
														},
														{
															"begin": 3367,
															"end": 3394,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "63"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "DUP2",
															"source": 4
														},
														{
															"begin": 3384,
															"end": 3386,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 3388,
															"end": 3393,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 3367,
															"end": 3376,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "71"
														},
														{
															"begin": 3367,
															"end": 3394,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "tag",
															"source": 1,
															"value": "64"
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "86"
														},
														{
															"begin": 8723,
															"end": 8728,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 8730,
															"end": 8737,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 8739,
															"end": 8744,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 8746,
															"end": 8750,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 8714,
															"end": 8722,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "87"
														},
														{
															"begin": 8714,
															"end": 8751,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "tag",
															"source": 1,
															"value": "86"
														},
														{
															"begin": 8714,
															"end": 8751,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 8630,
															"end": 8758,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 8630,
															"end": 8758,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "tag",
															"source": 1,
															"value": "69"
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 10418,
															"end": 10442,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3572,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3579,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "DUP7",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP3",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 3561,
															"end": 3588,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT",
															"source": -1
														},
														{
															"begin": 10484,
															"end": 10520,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 10484,
															"end": 10520,
															"name": "LT",
															"source": 1
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "ISZERO",
															"source": 1
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "94"
														},
														{
															"begin": 10480,
															"end": 10789,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 10559,
															"end": 10564,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 10540,
															"end": 10556,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 10540,
															"end": 10564,
															"name": "LT",
															"source": 1
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "ISZERO",
															"source": 1
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "91"
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "7DC7A0D9"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 2923,
															"end": 2955,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 2923,
															"end": 2955,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 2905,
															"end": 2956,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "PUSH",
															"source": 6,
															"value": "44"
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2878,
															"end": 2896,
															"name": "PUSH",
															"source": 6,
															"value": "64"
														},
														{
															"begin": 2878,
															"end": 2896,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "tag",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 10591,
															"end": 10651,
															"name": "REVERT",
															"source": 1
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "tag",
															"source": 1,
															"value": "91"
														},
														{
															"begin": 10536,
															"end": 10666,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "94"
														},
														{
															"begin": 10716,
															"end": 10721,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 10723,
															"end": 10730,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 10751,
															"end": 10756,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 10732,
															"end": 10748,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 10732,
															"end": 10756,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 10758,
															"end": 10763,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 10707,
															"end": 10715,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "87"
														},
														{
															"begin": 10707,
															"end": 10764,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "tag",
															"source": 1,
															"value": "94"
														},
														{
															"begin": 10707,
															"end": 10764,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 10408,
															"end": 10795,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 10319,
															"end": 10795,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 10319,
															"end": 10795,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 5297,
															"end": 5597,
															"name": "tag",
															"source": 1,
															"value": "71"
														},
														{
															"begin": 5297,
															"end": 5597,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 5380,
															"end": 5398,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 5380,
															"end": 5398,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "96"
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "4B637E8F"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 5448,
															"end": 5449,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 3199,
															"end": 3250,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 5421,
															"end": 5451,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 3053,
															"end": 3256,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "tag",
															"source": 1,
															"value": "96"
														},
														{
															"begin": 5376,
															"end": 5462,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 5475,
															"end": 5491,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 5475,
															"end": 5491,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "99"
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "EC442F05"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 5543,
															"end": 5544,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 3199,
															"end": 3250,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 5514,
															"end": 5546,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 3053,
															"end": 3256,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "tag",
															"source": 1,
															"value": "99"
														},
														{
															"begin": 5471,
															"end": 5557,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 5566,
															"end": 5590,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "86"
														},
														{
															"begin": 5574,
															"end": 5578,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 5580,
															"end": 5582,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 5584,
															"end": 5589,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 5566,
															"end": 5573,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "102"
														},
														{
															"begin": 5566,
															"end": 5590,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "tag",
															"source": 1,
															"value": "87"
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9717,
															"end": 9736,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 9717,
															"end": 9736,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "104"
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E602DF05"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9788,
															"end": 9789,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 3199,
															"end": 3250,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 9759,
															"end": 9791,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 3053,
															"end": 3256,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "tag",
															"source": 1,
															"value": "104"
														},
														{
															"begin": 9713,
															"end": 9802,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9815,
															"end": 9836,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 9815,
															"end": 9836,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "106"
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "4A1406B1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9887,
															"end": 9888,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 3199,
															"end": 3250,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 3172,
															"end": 3190,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 9859,
															"end": 9890,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 3053,
															"end": 3256,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "tag",
															"source": 1,
															"value": "106"
														},
														{
															"begin": 9811,
															"end": 9901,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP6",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9921,
															"name": "PUSH",
															"source": 1,
															"value": "1"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9928,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP4",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "DUP8",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP3",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9937,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 9910,
															"end": 9945,
															"name": "SSTORE",
															"source": 1
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "ISZERO",
															"source": 1
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "94"
														},
														{
															"begin": 9955,
															"end": 10031,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 10005,
															"end": 10012,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9998,
															"end": 10003,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 1,
															"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
														},
														{
															"begin": 10014,
															"end": 10019,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "109"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 1246,
															"end": 1248,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1231,
															"end": 1249,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 1231,
															"end": 1249,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1112,
															"end": 1289,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "tag",
															"source": 1,
															"value": "109"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 9989,
															"end": 10020,
															"name": "LOG3",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 9605,
															"end": 10037,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "tag",
															"source": 1,
															"value": "102"
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6001,
															"end": 6019,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 6001,
															"end": 6019,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "111"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 6153,
															"end": 6158,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6149,
															"name": "PUSH",
															"source": 1,
															"value": "2"
														},
														{
															"begin": 6137,
															"end": 6149,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "112"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "113"
														},
														{
															"begin": 6137,
															"end": 6158,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "tag",
															"source": 1,
															"value": "112"
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 6137,
															"end": 6158,
															"name": "SSTORE",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "114"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "tag",
															"source": 1,
															"value": "111"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6189,
															"end": 6208,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 6211,
															"end": 6226,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6244,
															"end": 6263,
															"name": "LT",
															"source": 1
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "ISZERO",
															"source": 1
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "115"
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "391434E3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "E2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 2923,
															"end": 2955,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 2923,
															"end": 2955,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH",
															"source": 1,
															"value": "4"
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 2905,
															"end": 2956,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 2972,
															"end": 2990,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2965,
															"end": 2999,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "PUSH",
															"source": 6,
															"value": "44"
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 3015,
															"end": 3033,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 3008,
															"end": 3042,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2878,
															"end": 2896,
															"name": "PUSH",
															"source": 6,
															"value": "64"
														},
														{
															"begin": 2878,
															"end": 2896,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 6290,
															"end": 6340,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "92"
														},
														{
															"begin": 2703,
															"end": 3048,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "tag",
															"source": 1,
															"value": "115"
														},
														{
															"begin": 6240,
															"end": 6355,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP5",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6484,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6490,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6493,
															"end": 6512,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6512,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6475,
															"end": 6512,
															"name": "SSTORE",
															"source": 1
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "tag",
															"source": 1,
															"value": "114"
														},
														{
															"begin": 5997,
															"end": 6537,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6551,
															"end": 6567,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6551,
															"end": 6567,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "117"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPI",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6726,
															"name": "PUSH",
															"source": 1,
															"value": "2"
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6714,
															"end": 6735,
															"name": "SSTORE",
															"source": 1
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "118"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "tag",
															"source": 1,
															"value": "117"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6934,
															"name": "PUSH",
															"source": 1,
															"value": "0"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "PUSH",
															"source": 1,
															"value": "20"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "MSTORE",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6938,
															"name": "KECCAK256",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SLOAD",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "DUP3",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "ADD",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6925,
															"end": 6947,
															"name": "SSTORE",
															"source": 1
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "tag",
															"source": 1,
															"value": "118"
														},
														{
															"begin": 6547,
															"end": 6972,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 7002,
															"end": 7004,
															"name": "DUP2",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6996,
															"end": 7000,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "AND",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 1,
															"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
														},
														{
															"begin": 7006,
															"end": 7011,
															"name": "DUP4",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH [tag]",
															"source": 1,
															"value": "119"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 1258,
															"end": 1283,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 1246,
															"end": 1248,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1231,
															"end": 1249,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 1231,
															"end": 1249,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1112,
															"end": 1289,
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "tag",
															"source": 1,
															"value": "119"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "JUMPDEST",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "PUSH",
															"source": 1,
															"value": "40"
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "MLOAD",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "DUP1",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP2",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SUB",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "SWAP1",
															"source": 1
														},
														{
															"begin": 6987,
															"end": 7012,
															"name": "LOG3",
															"source": 1
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 5912,
															"end": 7019,
															"name": "POP",
															"source": 1
														},
														{
															"begin": 5912,
															"end": 7019,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 1
														},
														{
															"begin": 14,
															"end": 432,
															"name": "tag",
															"source": 6,
															"value": "16"
														},
														{
															"begin": 14,
															"end": 432,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 163,
															"end": 165,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 152,
															"end": 161,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 145,
															"end": 166,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 126,
															"end": 130,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 195,
															"end": 201,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 189,
															"end": 202,
															"name": "MLOAD",
															"source": 6
														},
														{
															"begin": 238,
															"end": 244,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 233,
															"end": 235,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 222,
															"end": 231,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 218,
															"end": 236,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 211,
															"end": 245,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 297,
															"end": 303,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 292,
															"end": 294,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 284,
															"end": 290,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 280,
															"end": 295,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 275,
															"end": 277,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 264,
															"end": 273,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 260,
															"end": 278,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 254,
															"end": 304,
															"name": "MCOPY",
															"source": 6
														},
														{
															"begin": 353,
															"end": 354,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 348,
															"end": 350,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 339,
															"end": 345,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 328,
															"end": 337,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 324,
															"end": 346,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 320,
															"end": 351,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 313,
															"end": 355,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 423,
															"end": 425,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 416,
															"end": 418,
															"name": "PUSH",
															"source": 6,
															"value": "1F"
														},
														{
															"begin": 412,
															"end": 419,
															"name": "NOT",
															"source": 6
														},
														{
															"begin": 407,
															"end": 409,
															"name": "PUSH",
															"source": 6,
															"value": "1F"
														},
														{
															"begin": 399,
															"end": 405,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 395,
															"end": 410,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 391,
															"end": 420,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 380,
															"end": 389,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 376,
															"end": 421,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 372,
															"end": 426,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 364,
															"end": 426,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 364,
															"end": 426,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 364,
															"end": 426,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 14,
															"end": 432,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 14,
															"end": 432,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 14,
															"end": 432,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 14,
															"end": 432,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 14,
															"end": 432,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 437,
															"end": 610,
															"name": "tag",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 437,
															"end": 610,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 505,
															"end": 525,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 505,
															"end": 525,
															"name": "CALLDATALOAD",
															"source": 6
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"source": -1,
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB",
															"source": -1
														},
														{
															"begin": 554,
															"end": 585,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 554,
															"end": 585,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 544,
															"end": 586,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 544,
															"end": 586,
															"name": "EQ",
															"source": 6
														},
														{
															"begin": 534,
															"end": 604,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "124"
														},
														{
															"begin": 534,
															"end": 604,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 600,
															"end": 601,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 597,
															"end": 598,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 590,
															"end": 602,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 534,
															"end": 604,
															"name": "tag",
															"source": 6,
															"value": "124"
														},
														{
															"begin": 534,
															"end": 604,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 437,
															"end": 610,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 437,
															"end": 610,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 437,
															"end": 610,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 437,
															"end": 610,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 615,
															"end": 915,
															"name": "tag",
															"source": 6,
															"value": "19"
														},
														{
															"begin": 615,
															"end": 915,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 683,
															"end": 689,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 691,
															"end": 697,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 744,
															"end": 746,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 732,
															"end": 741,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 723,
															"end": 730,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 719,
															"end": 742,
															"name": "SUB",
															"source": 6
														},
														{
															"begin": 715,
															"end": 747,
															"name": "SLT",
															"source": 6
														},
														{
															"begin": 712,
															"end": 764,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 712,
															"end": 764,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "126"
														},
														{
															"begin": 712,
															"end": 764,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 760,
															"end": 761,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 757,
															"end": 758,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 750,
															"end": 762,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 712,
															"end": 764,
															"name": "tag",
															"source": 6,
															"value": "126"
														},
														{
															"begin": 712,
															"end": 764,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 783,
															"end": 812,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "127"
														},
														{
															"begin": 802,
															"end": 811,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 783,
															"end": 812,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 783,
															"end": 812,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 783,
															"end": 812,
															"name": "tag",
															"source": 6,
															"value": "127"
														},
														{
															"begin": 783,
															"end": 812,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 773,
															"end": 812,
															"name": "SWAP5",
															"source": 6
														},
														{
															"begin": 881,
															"end": 883,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 866,
															"end": 884,
															"name": "SWAP4",
															"source": 6
														},
														{
															"begin": 866,
															"end": 884,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 866,
															"end": 884,
															"name": "SWAP4",
															"source": 6
														},
														{
															"begin": 866,
															"end": 884,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 853,
															"end": 885,
															"name": "CALLDATALOAD",
															"source": 6
														},
														{
															"begin": 853,
															"end": 885,
															"name": "SWAP4",
															"source": 6
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 615,
															"end": 915,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 1294,
															"end": 1668,
															"name": "tag",
															"source": 6,
															"value": "29"
														},
														{
															"begin": 1294,
															"end": 1668,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1371,
															"end": 1377,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1379,
															"end": 1385,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1387,
															"end": 1393,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1440,
															"end": 1442,
															"name": "PUSH",
															"source": 6,
															"value": "60"
														},
														{
															"begin": 1428,
															"end": 1437,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 1419,
															"end": 1426,
															"name": "DUP7",
															"source": 6
														},
														{
															"begin": 1415,
															"end": 1438,
															"name": "SUB",
															"source": 6
														},
														{
															"begin": 1411,
															"end": 1443,
															"name": "SLT",
															"source": 6
														},
														{
															"begin": 1408,
															"end": 1460,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 1408,
															"end": 1460,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "131"
														},
														{
															"begin": 1408,
															"end": 1460,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 1456,
															"end": 1457,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1453,
															"end": 1454,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1446,
															"end": 1458,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 1408,
															"end": 1460,
															"name": "tag",
															"source": 6,
															"value": "131"
														},
														{
															"begin": 1408,
															"end": 1460,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1479,
															"end": 1508,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "132"
														},
														{
															"begin": 1498,
															"end": 1507,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 1479,
															"end": 1508,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 1479,
															"end": 1508,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 1479,
															"end": 1508,
															"name": "tag",
															"source": 6,
															"value": "132"
														},
														{
															"begin": 1479,
															"end": 1508,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1469,
															"end": 1508,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 1469,
															"end": 1508,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 1527,
															"end": 1565,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "133"
														},
														{
															"begin": 1561,
															"end": 1563,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1550,
															"end": 1559,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 1546,
															"end": 1564,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 1527,
															"end": 1565,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 1527,
															"end": 1565,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 1527,
															"end": 1565,
															"name": "tag",
															"source": 6,
															"value": "133"
														},
														{
															"begin": 1527,
															"end": 1565,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1294,
															"end": 1668,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 1294,
															"end": 1668,
															"name": "SWAP6",
															"source": 6
														},
														{
															"begin": 1517,
															"end": 1565,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 1517,
															"end": 1565,
															"name": "SWAP5",
															"source": 6
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 1634,
															"end": 1636,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 1619,
															"end": 1637,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 1619,
															"end": 1637,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1619,
															"end": 1637,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 1619,
															"end": 1637,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 1606,
															"end": 1638,
															"name": "CALLDATALOAD",
															"source": 6
														},
														{
															"begin": 1606,
															"end": 1638,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 1294,
															"end": 1668,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 1862,
															"end": 2048,
															"name": "tag",
															"source": 6,
															"value": "38"
														},
														{
															"begin": 1862,
															"end": 2048,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 1921,
															"end": 1927,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1974,
															"end": 1976,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 1962,
															"end": 1971,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 1953,
															"end": 1960,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 1949,
															"end": 1972,
															"name": "SUB",
															"source": 6
														},
														{
															"begin": 1945,
															"end": 1977,
															"name": "SLT",
															"source": 6
														},
														{
															"begin": 1942,
															"end": 1994,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 1942,
															"end": 1994,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "136"
														},
														{
															"begin": 1942,
															"end": 1994,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 1990,
															"end": 1991,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1987,
															"end": 1988,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 1980,
															"end": 1992,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 1942,
															"end": 1994,
															"name": "tag",
															"source": 6,
															"value": "136"
														},
														{
															"begin": 1942,
															"end": 1994,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2013,
															"end": 2042,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "137"
														},
														{
															"begin": 2032,
															"end": 2041,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2013,
															"end": 2042,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 2013,
															"end": 2042,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2013,
															"end": 2042,
															"name": "tag",
															"source": 6,
															"value": "137"
														},
														{
															"begin": 2013,
															"end": 2042,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2003,
															"end": 2042,
															"name": "SWAP4",
															"source": 6
														},
														{
															"begin": 1862,
															"end": 2048,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP",
															"source": -1
														},
														{
															"begin": 1862,
															"end": 2048,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "tag",
															"source": 6,
															"value": "50"
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2121,
															"end": 2127,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2129,
															"end": 2135,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2182,
															"end": 2184,
															"name": "PUSH",
															"source": 6,
															"value": "40"
														},
														{
															"begin": 2170,
															"end": 2179,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 2161,
															"end": 2168,
															"name": "DUP6",
															"source": 6
														},
														{
															"begin": 2157,
															"end": 2180,
															"name": "SUB",
															"source": 6
														},
														{
															"begin": 2153,
															"end": 2185,
															"name": "SLT",
															"source": 6
														},
														{
															"begin": 2150,
															"end": 2202,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 2150,
															"end": 2202,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "139"
														},
														{
															"begin": 2150,
															"end": 2202,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 2198,
															"end": 2199,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2195,
															"end": 2196,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2188,
															"end": 2200,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 2150,
															"end": 2202,
															"name": "tag",
															"source": 6,
															"value": "139"
														},
														{
															"begin": 2150,
															"end": 2202,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2221,
															"end": 2250,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "140"
														},
														{
															"begin": 2240,
															"end": 2249,
															"name": "DUP4",
															"source": 6
														},
														{
															"begin": 2221,
															"end": 2250,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 2221,
															"end": 2250,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2221,
															"end": 2250,
															"name": "tag",
															"source": 6,
															"value": "140"
														},
														{
															"begin": 2221,
															"end": 2250,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2211,
															"end": 2250,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 2211,
															"end": 2250,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2269,
															"end": 2307,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "141"
														},
														{
															"begin": 2303,
															"end": 2305,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 2292,
															"end": 2301,
															"name": "DUP5",
															"source": 6
														},
														{
															"begin": 2288,
															"end": 2306,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 2269,
															"end": 2307,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "120"
														},
														{
															"begin": 2269,
															"end": 2307,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2269,
															"end": 2307,
															"name": "tag",
															"source": 6,
															"value": "141"
														},
														{
															"begin": 2269,
															"end": 2307,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2259,
															"end": 2307,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2259,
															"end": 2307,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "SWAP3",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2053,
															"end": 2313,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 2318,
															"end": 2698,
															"name": "tag",
															"source": 6,
															"value": "55"
														},
														{
															"begin": 2318,
															"end": 2698,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2397,
															"end": 2398,
															"name": "PUSH",
															"source": 6,
															"value": "1"
														},
														{
															"begin": 2393,
															"end": 2405,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 2393,
															"end": 2405,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 2393,
															"end": 2405,
															"name": "SHR",
															"source": 6
														},
														{
															"begin": 2393,
															"end": 2405,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2440,
															"end": 2452,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2440,
															"end": 2452,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 2440,
															"end": 2452,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 2461,
															"end": 2522,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "143"
														},
														{
															"begin": 2461,
															"end": 2522,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 2515,
															"end": 2519,
															"name": "PUSH",
															"source": 6,
															"value": "7F"
														},
														{
															"begin": 2507,
															"end": 2513,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2503,
															"end": 2520,
															"name": "AND",
															"source": 6
														},
														{
															"begin": 2493,
															"end": 2520,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 2493,
															"end": 2520,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2461,
															"end": 2522,
															"name": "tag",
															"source": 6,
															"value": "143"
														},
														{
															"begin": 2461,
															"end": 2522,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2568,
															"end": 2570,
															"name": "PUSH",
															"source": 6,
															"value": "20"
														},
														{
															"begin": 2560,
															"end": 2566,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 2557,
															"end": 2571,
															"name": "LT",
															"source": 6
														},
														{
															"begin": 2537,
															"end": 2555,
															"name": "DUP2",
															"source": 6
														},
														{
															"begin": 2534,
															"end": 2572,
															"name": "SUB",
															"source": 6
														},
														{
															"begin": 2531,
															"end": 2692,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "144"
														},
														{
															"begin": 2531,
															"end": 2692,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 2614,
															"end": 2624,
															"name": "PUSH",
															"source": 6,
															"value": "4E487B71"
														},
														{
															"begin": 2609,
															"end": 2612,
															"name": "PUSH",
															"source": 6,
															"value": "E0"
														},
														{
															"begin": 2605,
															"end": 2625,
															"name": "SHL",
															"source": 6
														},
														{
															"begin": 2602,
															"end": 2603,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2595,
															"end": 2626,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2649,
															"end": 2653,
															"name": "PUSH",
															"source": 6,
															"value": "22"
														},
														{
															"begin": 2646,
															"end": 2647,
															"name": "PUSH",
															"source": 6,
															"value": "4"
														},
														{
															"begin": 2639,
															"end": 2654,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 2677,
															"end": 2681,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 2674,
															"end": 2675,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 2667,
															"end": 2682,
															"name": "REVERT",
															"source": 6
														},
														{
															"begin": 2531,
															"end": 2692,
															"name": "tag",
															"source": 6,
															"value": "144"
														},
														{
															"begin": 2531,
															"end": 2692,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 2531,
															"end": 2692,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2318,
															"end": 2698,
															"name": "SWAP2",
															"source": 6
														},
														{
															"begin": 2318,
															"end": 2698,
															"name": "SWAP1",
															"source": 6
														},
														{
															"begin": 2318,
															"end": 2698,
															"name": "POP",
															"source": 6
														},
														{
															"begin": 2318,
															"end": 2698,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 6
														},
														{
															"begin": 3261,
															"end": 3483,
															"name": "tag",
															"source": 6,
															"value": "113"
														},
														{
															"begin": 3261,
															"end": 3483,
															"name": "JUMPDEST",
															"source": 6
														},
														{
															"begin": 3326,
															"end": 3335,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 3326,
															"end": 3335,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 3326,
															"end": 3335,
															"name": "ADD",
															"source": 6
														},
														{
															"begin": 3347,
															"end": 3357,
															"name": "DUP1",
															"source": 6
														},
														{
															"begin": 3347,
															"end": 3357,
															"name": "DUP3",
															"source": 6
														},
														{
															"begin": 3347,
															"end": 3357,
															"name": "GT",
															"source": 6
														},
														{
															"begin": 3344,
															"end": 3477,
															"name": "ISZERO",
															"source": 6
														},
														{
															"begin": 3344,
															"end": 3477,
															"name": "PUSH [tag]",
															"source": 6,
															"value": "60"
														},
														{
															"begin": 3344,
															"end": 3477,
															"name": "JUMPI",
															"source": 6
														},
														{
															"begin": 3399,
															"end": 3409,
															"name": "PUSH",
															"source": 6,
															"value": "4E487B71"
														},
														{
															"begin": 3394,
															"end": 3397,
															"name": "PUSH",
															"source": 6,
															"value": "E0"
														},
														{
															"begin": 3390,
															"end": 3410,
															"name": "SHL",
															"source": 6
														},
														{
															"begin": 3387,
															"end": 3388,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 3380,
															"end": 3411,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3434,
															"end": 3438,
															"name": "PUSH",
															"source": 6,
															"value": "11"
														},
														{
															"begin": 3431,
															"end": 3432,
															"name": "PUSH",
															"source": 6,
															"value": "4"
														},
														{
															"begin": 3424,
															"end": 3439,
															"name": "MSTORE",
															"source": 6
														},
														{
															"begin": 3462,
															"end": 3466,
															"name": "PUSH",
															"source": 6,
															"value": "24"
														},
														{
															"begin": 3459,
															"end": 3460,
															"name": "PUSH",
															"source": 6,
															"value": "0"
														},
														{
															"begin": 3452,
															"end": 3467,
															"name": "REVERT",
															"source": 6
														}
													]
												}
											}
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MiniTokenFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createToken(string,string,uint256)": "5b060530",
							"deployedTokens(uint256)": "ec81aadb",
							"getDeployedTokens()": "622ae7aa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MiniTokenFactory.sol\":\"TokenFactory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MiniTokenFactory.sol\":{\"keccak256\":\"0xba19997b8fab6ab6dcf6d00a470e6d348f149558534fc862f2f4d496f21aba25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b6e1524bcd87176708bdca50fdc9c54eefeeceb662507dbde2d22e10568f4f4\",\"dweb:/ipfs/QmRsC4cvDpHGtSz7MWKe5crY3keoYUfbbY2AR3qswUeJfU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "MiniTokenFactory.sol:TokenFactory",
								"label": "deployedTokens",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"MiniTokenFactory.sol": {
				"ast": {
					"absolutePath": "MiniTokenFactory.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"ERC20Token": [
							883
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TokenFactory": [
							853
						]
					},
					"id": 884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 884,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenFactory",
							"contractDependencies": [
								883
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853
							],
							"name": "TokenFactory",
							"nameLocation": "129:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ec81aadb",
									"id": 791,
									"mutability": "mutable",
									"name": "deployedTokens",
									"nameLocation": "166:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "149:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 789,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "149:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 790,
										"nodeType": "ArrayTypeName",
										"src": "149:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "75d1eb2d61d7e210835bc16e78ac4d0e4f905c108a81852a6b68c4d46b4f40f3",
									"id": 801,
									"name": "TokenCreated",
									"nameLocation": "195:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "216:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "208:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "237:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "230:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "230:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "250:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 796,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "243:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": false,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "266:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "258:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:66:5"
									},
									"src": "189:85:5"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "370:207:5",
										"statements": [
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "newToken",
														"nameLocation": "392:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "381:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Token_$883",
															"typeString": "contract ERC20Token"
														},
														"typeName": {
															"id": 811,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 810,
																"name": "ERC20Token",
																"nameLocations": [
																	"381:10:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 883,
																"src": "381:10:5"
															},
															"referencedDeclaration": 883,
															"src": "381:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Token_$883",
																"typeString": "contract ERC20Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [
														{
															"id": 816,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "418:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 817,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "424:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 818,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "432:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "440:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "444:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "440:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "403:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$883_$",
															"typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
														},
														"typeName": {
															"id": 814,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 813,
																"name": "ERC20Token",
																"nameLocations": [
																	"407:10:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 883,
																"src": "407:10:5"
															},
															"referencedDeclaration": 883,
															"src": "407:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Token_$883",
																"typeString": "contract ERC20Token"
															}
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "403:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20Token_$883",
														"typeString": "contract ERC20Token"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "381:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 828,
																	"name": "newToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "490:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Token_$883",
																		"typeString": "contract ERC20Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Token_$883",
																		"typeString": "contract ERC20Token"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "482:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "482:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "482:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "deployedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "462:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "477:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "462:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "462:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "462:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 835,
																	"name": "newToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "537:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Token_$883",
																		"typeString": "contract ERC20Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Token_$883",
																		"typeString": "contract ERC20Token"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "529:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "529:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "529:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "548:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 838,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "554:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 839,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "TokenCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "516:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,string memory,string memory,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "516:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "511:58:5"
											}
										]
									},
									"functionSelector": "5b060530",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nameLocation": "291:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "317:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "303:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "337:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "323:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "323:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "353:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "345:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "302:58:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:0:5"
									},
									"scope": 853,
									"src": "282:295:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "655:40:5",
										"statements": [
											{
												"expression": {
													"id": 849,
													"name": "deployedTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 791,
													"src": "673:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 848,
												"id": 850,
												"nodeType": "Return",
												"src": "666:21:5"
											}
										]
									},
									"functionSelector": "622ae7aa",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeployedTokens",
									"nameLocation": "594:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "637:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 845,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "637:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 846,
													"nodeType": "ArrayTypeName",
													"src": "637:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:18:5"
									},
									"scope": 853,
									"src": "585:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 884,
							"src": "120:578:5",
							"usedErrors": [],
							"usedEvents": [
								801
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 854,
										"name": "ERC20",
										"nameLocations": [
											"725:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "725:5:5"
									},
									"id": 855,
									"nodeType": "InheritanceSpecifier",
									"src": "725:5:5"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 883,
							"linearizedBaseContracts": [
								883,
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20Token",
							"nameLocation": "711:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "857:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "874:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 872,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "881:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "891:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 874,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "897:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "897:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "891:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "890:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 870,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "868:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "868:41:5"
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 866,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 867,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 859,
													"src": "844:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 868,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 865,
												"name": "ERC20",
												"nameLocations": [
													"832:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "832:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "832:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "764:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "750:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 856,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "750:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "784:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "770:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "770:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "800:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "792:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "816:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "808:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:73:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:5"
									},
									"scope": 883,
									"src": "738:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 884,
							"src": "702:218:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:889:5"
				},
				"id": 5
			}
		}
	}
}